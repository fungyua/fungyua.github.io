<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>适用于 Web 开发人员使用的国外 8 款免费图标包</title>
    <url>/Code/HTML/8-foreign-free-icon-packages-for-web-developers/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>使用图标是使您的设计更加有趣和引人注目的最快和最简单的方法之一。添加适当的图标可以使用户界面更加清晰，引导用户浏览页面并向用户显示每个按钮或链接的功能。</p>
<p>在这篇文章中，我们收集了 6 个最可靠，最精美的图标包。我们将它们分为三类：字体图标，SVG 和 CSS 图标。在我们掌握资源之前，让我们快速看看每种类型的优缺点：</p>
<h2 id="Feather-Icons"><a href="#Feather-Icons" class="headerlink" title="Feather Icons"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9mZWF0aGVyaWNvbnMuY29tLw==">Feather Icons<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: SVG 图标的数量: 240 许可: MIT</p>
<p><a href="https://i.loli.net/2020/03/01/rARnisXMhDc5bBK.png"><img src="https://i.loli.net/2020/03/01/rARnisXMhDc5bBK.png"></a></p>
<p>Feather 是最流行的开源图标集之一。所有的图标都设计在一个 24x24 的网格上，并具有相同的圆角样式，一致的外观。轻松用于框架集成的项目可用于 Angular，Vue 和 React。</p>
<h2 id="Linea"><a href="#Linea" class="headerlink" title="Linea"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpbmVhLWlvL0xpbmVhLUljb25zZXQ=">Linea<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: SVG, PNG, Icon font 图标的数量: 730 + 许可: CCBY</p>
<p><a href="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=2566022213,2695735692&amp;fm=173&amp;s=FFA8386395D34DCA0E7CD4CE0000C0B1&amp;w=639&amp;h=321&amp;img.JPEG"><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=2566022213,2695735692&amp;fm=173&amp;s=FFA8386395D34DCA0E7CD4CE0000C0B1&amp;w=639&amp;h=321&amp;img.JPEG"></a></p>
<p>Linea 提供了大量精美的现代图标，其特点是外观清晰、轮廓分明。所有的图标都有不同的分类，包括基本的，音乐的，电子商务的，软件的等等。</p>
<h2 id="Octicons"><a href="#Octicons" class="headerlink" title="Octicons"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9vY3RpY29ucy5naXRodWIuY29tLw==">Octicons<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: SVG 图标的数量: 170 + 许可: GitHub</p>
<p><a href="https://i.loli.net/2020/03/01/qo4atciuxRAjrKW.png"><img src="https://i.loli.net/2020/03/01/qo4atciuxRAjrKW.png"></a></p>
<p>Octicons 是 GitHub 可扩展的手工 SVG 图标集。它包括 GitHub 和编程相关的图标，如数据库图标，git 操作图标，等等。</p>
<h2 id="Glyph"><a href="#Glyph" class="headerlink" title="Glyph"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9nbHlwaGljb25zLmNvbS8=">Glyph<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: SVG 图标的数量: 800 许可: CC BY-SA 4.0</p>
<p><a href="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=923376770,1279189336&amp;fm=173&amp;s=88295C32C7834D431CF595CE000080B1&amp;w=640&amp;h=332&amp;img.JPEG"><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=923376770,1279189336&amp;fm=173&amp;s=88295C32C7834D431CF595CE000080B1&amp;w=640&amp;h=332&amp;img.JPEG"></a></p>
<p>在项目的 GitHub 中，您可以下载一个 Node.js 脚本来自定义图标包，这种方法适用于仅包含您真正需要的图标。</p>
<h2 id="Font-Awesome"><a href="#Font-Awesome" class="headerlink" title="Font Awesome"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9mb250YXdlc29tZS5jb20v">Font Awesome<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: Icon Font 图标的数量: 675 许可: SIL OFL 1.1</p>
<p><a href="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=3729748029,3061899287&amp;fm=173&amp;s=04306C32FFD168D256DD1DCE0000C0B1&amp;w=639&amp;h=291&amp;img.JPEG"><img src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=3729748029,3061899287&amp;fm=173&amp;s=04306C32FFD168D256DD1DCE0000C0B1&amp;w=639&amp;h=291&amp;img.JPEG"></a></p>
<p>网页最受欢迎的图标字体（GitHub 上超过五万颗星），Font Awesome 提供了大量图标，这些图标是为可扩展性，通用浏览器支持和视觉障碍用户的良好可访问性而构建的。</p>
<h2 id="Ionicons"><a href="#Ionicons" class="headerlink" title="Ionicons"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9pb25pY29ucy5jb20v">Ionicons<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: Icon Font 图标的数量: 260 + 许可: MIT</p>
<p><a href="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3885957737,2135973538&amp;fm=173&amp;s=C8A43C72C7544DC21859F0CB0000E0B3&amp;w=640&amp;h=313&amp;img.JPEG"><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3885957737,2135973538&amp;fm=173&amp;s=C8A43C72C7544DC21859F0CB0000E0B3&amp;w=640&amp;h=313&amp;img.JPEG"></a></p>
<p>Ionic Framework 为后面的团队设置了一个非常漂亮的图标。提供超过 260 个漂亮的图标，其中一些是厚重的平面风格，另一些是现代的细线风格。</p>
<h2 id="Material-Icons"><a href="#Material-Icons" class="headerlink" title="Material Icons"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9tYXRlcmlhbC5pby8=">Material Icons<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: Icon Font 图标的数量: 900 + 许可: Apache</p>
<p><a href="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=4026651160,2494006360&amp;fm=173&amp;s=5CAA3473DF2348034855F0DA000080B1&amp;w=640&amp;h=288&amp;img.JPEG"><img src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=4026651160,2494006360&amp;fm=173&amp;s=5CAA3473DF2348034855F0DA000080B1&amp;w=640&amp;h=288&amp;img.JPEG"></a></p>
<p>Google 的 Material Design 语言的官方图标和 Android 中的所有图标。它包含超过 900 个图标，都是以一致的 Material 风格制作的，保证了你在项目使用起来有一致的风格。</p>
<h2 id="Icono"><a href="#Icono" class="headerlink" title="Icono"></a><strong><span class="exturl" data-url="aHR0cHM6Ly9zYWVlZGFsaXBvb3IuZ2l0aHViLmlvL2ljb25vLw==">Icono<i class="fa fa-external-link-alt"></i></span></strong></h2><p>类型: CSS Icons 图标的数量: 130 许可: MIT</p>
<p><a href="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3301879937,1352144964&amp;fm=173&amp;s=D2300A645EA1C9620AB6B6430200F0F9&amp;w=640&amp;h=337&amp;img.JPEG"><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3301879937,1352144964&amp;fm=173&amp;s=D2300A645EA1C9620AB6B6430200F0F9&amp;w=640&amp;h=337&amp;img.JPEG"></a></p>
<p>纯 CSS 图标的集合。要实现它们，只需要下载.css 样式表，创建一个空的 HTML 元素，然后添加相应的类。所有的图标都是这样的，只需要一个 HTML 元素就可以工作。</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 HBuilderX 编辑 PHP 时怎么使用 HTML 代码助手</title>
    <url>/Windows/HBuilderX%E5%9C%A8%E7%BC%96%E8%BE%91%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E6%97%B6%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%A0%81%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<div class="note default"><p>Python 笔记</p>
</div>

<a id="more"></a>

<hr>
<blockquote>
<p>在使用 <code>HBuilderX</code> 编辑 <code>PHP</code> 代码时，我们经常会使用到 <code>HTML</code> 和 <code>JavaScript</code> 代码，在正常的 HTML 文件中我们可以直接打 <code>HTML</code>，代码助手会自动识别，但如果是 <code>PHP</code> 文件时是不会自动识别的，这时候就需要用到<code>语法关联</code>工具。</p>
</blockquote>
<h3 id="1-打开要编辑的PHP文件"><a href="#1-打开要编辑的PHP文件" class="headerlink" title="1.打开要编辑的PHP文件"></a>1. 打开要编辑的 PHP 文件</h3><h3 id="2-点击语法关联助手"><a href="#2-点击语法关联助手" class="headerlink" title="2.点击语法关联助手"></a>2. 点击语法关联助手</h3><p><img src="https://s2.ax1x.com/2019/09/27/uK2fE9.png"></p>
<h3 id="3-把它改成HTML或其他语法即可"><a href="#3-把它改成HTML或其他语法即可" class="headerlink" title="3.把它改成HTML或其他语法即可"></a>3. 把它改成 HTML 或其他语法即可</h3><p><img src="https://s2.ax1x.com/2019/09/27/uKRYP1.png"></p>
<blockquote>
<p>其他语法也一样</p>
</blockquote>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>HBuilderx 快捷键</title>
    <url>/%E6%8A%80%E5%B7%A7/HBuilderx%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<div class="note default"><p>HBuilderx 的快捷键</p>
</div>


<a id="more"></a>

<hr>
<h3 id="1-项目管理器"><a href="#1-项目管理器" class="headerlink" title="1.项目管理器"></a>1. 项目管理器</h3><p>重命名文件（焦点在项目管理器中）:<code>f2</code><br>复制文件（焦点在项目管理器中）:<code>ctrl+c</code><br>粘贴文件（焦点在项目管理器中）:<code>ctrl+v</code><br>删除文件到回收站（焦点在项目管理器中）:<code>delete</code>  </p>
<h3 id="2-标签卡"><a href="#2-标签卡" class="headerlink" title="2.标签卡"></a>2. 标签卡</h3><p>新建标签卡（默认 md）:<code>ctrl+t</code><br>关闭当前标签卡:<code>ctrl+w</code><br>关闭当前标签卡:<code>ctrl+f4</code><br>关闭所有标签卡:<code>ctrl+shift+w</code><br>关闭其他文件:<code>ctrl+q</code><br>显示左边的标签卡:<code>ctrl+PgUp</code><br>显示右边的标签卡:<code>ctrl+PgDown</code><br>重开已关闭标签卡:<code>ctrl+shift+t</code><br>切换最近的标签卡:<code>ctrl+tab</code><br>切换到第 1 个标签卡:<code>alt+1</code><br>切换到第 2 个标签卡:<code>alt+2</code><br>切换到第 3 个标签卡:<code>alt+3</code><br>切换到第 4 个标签卡:<code>alt+4</code><br>切换到第 5 个标签卡:<code>alt+5</code><br>切换到第 6 个标签卡:<code>alt+6</code><br>切换到第 7 个标签卡:<code>alt+7</code><br>切换到第 8 个标签卡:<code>alt+8</code><br>切换到第 9 个标签卡:<code>alt+9</code><br>切换到最末尾的标签卡:<code>alt+0</code><br>往左移动一个标签卡:<code>ctrl+shift+PgUp</code><br>往右移动一个标签卡:<code>ctrl+shift+PgDown</code>  </p>
<h3 id="3-文件"><a href="#3-文件" class="headerlink" title="3.文件"></a>3. 文件</h3><p>新建:<code>ctrl+n</code><br>打开外部文件:<code>ctrl+o</code><br>打开收藏菜单:<code>alt+shift+f</code><br>保存:<code>ctrl+s</code><br>另存为:<code>ctrl+shift+s</code><br>全部保存:<code>ctrl+alt+s</code>  </p>
<h3 id="4-行操作"><a href="#4-行操作" class="headerlink" title="4.行操作"></a>4. 行操作</h3><p>向下插入行:<code>ctrl+enter</code><br>向下插入行:<code>ctrl+return</code><br>向上插入行:<code>ctrl+shift+enter</code><br>向上插入行:<code>ctrl+shift+return</code><br>反回车，即把光标前内容移到下一行:<code>shift+enter</code><br>反回车，即把光标前内容移到下一行:<code>shift+return</code><br>上移一行:<code>ctrl+up</code><br>下移一行:<code>ctrl+down</code>  </p>
<h3 id="5-删除"><a href="#5-删除" class="headerlink" title="5.删除"></a>5. 删除</h3><p>向左删除:<code>backspace</code><br>向右删除:<code>delete</code><br>向左删除词:<code>ctrl+backspace</code><br>向右删除词:<code>ctrl+delete</code><br>删到行首:<code>shift+backspace</code><br>删到行尾:<code>shift+delete</code><br>删除行:<code>ctrl+d</code>  </p>
<h3 id="6-列表符操作"><a href="#6-列表符操作" class="headerlink" title="6.列表符操作"></a>6. 列表符操作</h3><p>插入 - 无序列表符:<code>ctrl+alt+-</code><br>插入 * 无序列表符:<code>ctrl+alt+8</code><br>插入 + 无序列表符:<code>ctrl+alt+=</code><br>插入 &gt; 引用列表符:<code>ctrl+alt+shift+.</code><br>插入有序列表符:<code>ctrl+alt+1</code><br>插入任务列表符:<code>ctrl+alt+[</code><br>插入已完成任务列表符:<code>ctrl+alt+]</code>  </p>
<h3 id="7-剪贴板"><a href="#7-剪贴板" class="headerlink" title="7.剪贴板"></a>7. 剪贴板</h3><p>复制:<code>ctrl+c</code><br>复制文件路径:<code>ctrl+shift+c</code><br>重复插入选区或当前行:<code>ctrl+insert</code><br>重复插入选区或当前行（备份用于没有 insert 键的键盘）:<code>ctrl+shift+r</code><br>剪切:<code>ctrl+x</code><br>粘贴:<code>ctrl+v</code><br>粘贴为 HTML:<code>ctrl+shift+v</code><br>从历史粘贴板粘贴（注意解除 evernote 的快捷键占用）:<code>ctrl+alt+v</code><br>交换字符、选区或行。2 个选区或 2 行是彼此交换；不是 2 个选区时是交换光标前后的字母:<code>ctrl+shift+x</code>  </p>
<h3 id="8-撤销"><a href="#8-撤销" class="headerlink" title="8.撤销"></a>8. 撤销</h3><p>撤销:<code>ctrl+z</code><br>重做:<code>ctrl+y、ctrl+shift+z</code><br>撤销一个新光标或选区:<code>alt+shift+z</code>  </p>
<h3 id="9-语言"><a href="#9-语言" class="headerlink" title="9.语言"></a>9. 语言</h3><p>格式化:<code>ctrl+k</code><br>格式化（兼容老版 HBuilder 快捷键，注意解除搜狗输入法全局快捷键）:<code>ctrl+shift+f</code><br>合并行（反格式化）:<code>ctrl+shift+k</code><br>合并行（兼容老版 HBuilder 快捷键）:<code>ctrl+alt+j</code><br>注释 / 反注释:<code>ctrl+/</code><br>块注释:<code>ctrl+shift+/</code><br>注释菜单 (含条件编译注释):<code>ctrl+alt+/</code>  </p>
<h3 id="10-包围"><a href="#10-包围" class="headerlink" title="10.包围"></a>10. 包围</h3><p>包围:<code>ctrl+]</code><br>反包围:<code>ctrl+shift+]</code><br>加粗（html、md 生效）:<code>ctrl+b</code><br>全部字母大写:<code>alt+shift+u</code><br>全部字母小写:<code>alt+shift+l</code><br>首字母大写:<code>alt+shift+t</code><br>激活代码助手:<code>alt+/</code><br>激活方法参数提示:<code>alt+shift+/</code><br>缩进:<code>tab</code><br>反缩进:<code>shift+tab</code>  </p>
<h3 id="11-选择"><a href="#11-选择" class="headerlink" title="11.选择"></a>11. 选择</h3><p>全选:<code>ctrl+a</code><br>向左选字:<code>shift+left</code><br>向右选字:<code>shift+right</code><br>向上选行:<code>shift+up</code><br>向下选行:<code>shift+down</code><br>向左选词:<code>ctrl+shift+left</code><br>向右选词:<code>ctrl+shift+right</code><br>选至软行首（连续按依次切换自动换行的行首、缩进后的行首、真行首）:<code>shift+home</code><br>选至软行尾（连续按依次切换自动换行的行尾、真行尾）:<code>shift+end</code><br>选至上一页:<code>shift+PgUp</code><br>选至下一页:<code>shift+PgDown</code><br>选至文档首:<code>ctrl+shift+home</code><br>选至文档尾:<code>ctrl+shift+end</code><br>选择当前词或下一个相同词:<code>ctrl+e</code><br>选择所有相同词:<code>ctrl+alt+e、alt+f3</code><br>跳过当前选择，选中下一个相同词:<code>alt+shift+e</code><br>选择相同语法词（注意解除搜狗输入法全局占用）:<code>ctrl+shift+e</code><br>选择括号内字符。可用双击括号替代:<code>ctrl+[</code><br>选择行。也可单击行号或三击行:<code>ctrl+l</code><br>选择行 (不含首尾空白字符)。也可双击行尾:<code>ctrl+shift+l</code><br>放大选区:<code>ctrl+=</code><br>向 2 侧扩大选择:<code>alt+shift+right</code><br>由 2 侧向内减少选择:<code>alt+shift+left</code><br>向上列选择:<code>ctrl+alt+up</code><br>向下列选择:<code>ctrl+alt+down</code><br>每个选区前后设置光标:<code>ctrl+\</code><br>每行行首设置光标:<code>ctrl+shift+\</code>  </p>
<h3 id="12-查找"><a href="#12-查找" class="headerlink" title="12.查找"></a>12. 查找</h3><p>查找文件:<code>ctrl+p</code><br>本文档内查找字符串:<code>ctrl+f</code><br>目录内查找字符串:<code>ctrl+alt+f</code><br>替换:<code>ctrl+h</code><br>查找下一个字符串:<code>f3</code><br>查找上一个字符串:<code>shift+f3</code>  </p>
<h3 id="13-跳转"><a href="#13-跳转" class="headerlink" title="13.跳转"></a>13. 跳转</h3><p>光标向左:<code>alt+h、left</code><br>光标向下:<code>alt+j、down</code><br>光标向上:<code>alt+k、up</code><br>光标向右:<code>alt+l、right</code><br>光标向左一词:<code>ctrl+left</code><br>光标向右一词:<code>ctrl+right</code><br>光标向左一个驼峰单词:<code>ctrl+alt+left</code><br>光标向右一个驼峰单词:<code>ctrl+alt+right</code><br>光标到软行首（连续按依次切换自动换行的行首、缩进后的行首、真行首）:<code>home</code><br>光标到软行尾（连续按依次切换自动换行的行尾、真行尾）:<code>end</code><br>光标到上个段落（空行为分割段落）:<code>ctrl+alt+PgUp</code><br>光标到下个段落（空行为分割段落）:<code>ctrl+alt+PgDown</code><br>光标到上一页:<code>PgUp</code><br>光标到下一页:<code>PgDown</code><br>光标到页首:<code>ctrl+home</code><br>光标到页尾:<code>ctrl+end</code><br>转到定义:<code>alt+d、f12</code><br>分栏转到定义:<code>alt+shift+d、shift+f12</code><br>跳转到行:<code>ctrl+g</code><br>跳转到配对的括号:<code>alt+[</code><br>光标后退:<code>alt+left</code><br>光标前进:<code>alt+right</code><br>设置 / 取消书签:<code>ctrl+f2</code>&nbsp;<br>下一个书签（光标在编辑器区域）:<code>f2</code><br>上一个书签（光标在编辑器区域）:<code>shift+f2</code><br>清除所有书签:<code>ctrl+shift+f2</code><br>下一个验证错误:<code>f4</code><br>上一个验证错误:<code>shift+f4</code><br>折叠单行:<code>alt+-</code><br>展开单行:<code>alt+=</code><br>折叠子行:<code>alt+shift+-</code><br>展开子行:<code>alt+shift+=</code><br>折叠所有行:<code>alt+ctrl+shift+-</code><br>展开所有行:<code>alt+ctrl+shift+=</code><br>折叠其他区域:<code>alt+shift+o</code>  </p>
<h3 id="14-视图"><a href="#14-视图" class="headerlink" title="14.视图"></a>14. 视图</h3><p>置焦到编辑器区域:<code>alt+n</code><br>置焦到项目管理器:<code>alt+shift+q</code><br>显示 / 隐藏项目管理器:<code>alt+q</code><br>显示 / 隐藏控制台:<code>alt+x</code><br>显示 / 控制台:<code>alt+c</code><br>显示 / 隐藏工具栏:<code>alt+o</code><br>显示 / 隐藏内置浏览器:<code>alt+p</code><br>显示 / 隐藏大纲:<code>alt+w</code><br>增大字体【ctrl + 鼠标滚动向上】:<code>ctrl+shift+=</code><br>减小字体【ctrl + 鼠标滚动向下】:<code>ctrl+shift+-</code><br>单栏:<code>alt+shift+1</code><br>左右 2 栏:<code>alt+shift+2</code><br>左右 3 栏:<code>alt+shift+3</code><br>置焦到下一个分栏:<code>alt+.</code><br>置焦到上一个分栏:<code>alt+,</code><br>新建 HBuilder 窗体:<code>ctrl+shift+n</code><br>多窗口切换快捷键 1:<code>ctrl+f6</code><br>多窗口切换快捷键 2:`alt+``  </p>
<h3 id="15-运行"><a href="#15-运行" class="headerlink" title="15.运行"></a>15. 运行</h3><p>运行:<code>ctrl+r</code><br>重新运行:<code>ctrl+f5</code><br>停止运行:<code>ctrl+shift+f5</code>  </p>
<h3 id="16-鼠标配合快捷键"><a href="#16-鼠标配合快捷键" class="headerlink" title="16.鼠标配合快捷键"></a>16. 鼠标配合快捷键</h3><p>添加多光标:<code>ctrl+左键单击</code><br>删除多光标:<code>ctrl+右键单击</code><br>添加多选区:<code>ctrl+左键拖选</code><br>如果点击到了智能双击区域比如 if 块，会添加到选区里:<code>ctrl+左键双击</code><br>转到定义 / 打开链接:<code>alt+左键单击</code><br>分栏转到定义 / 打开链接:<code>alt+ctrl+左键单击</code><br>列选择:<code>alt+左键拖选</code><br>缩放字体:<code>ctrl+滚轮</code><br>横向滚动:<code>alt+滚轮</code><br>垂直滚动一屏:<code>shift+滚轮</code><br>横向滚动一屏:<code>ctrl+alt+滚轮</code></p>
]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML 表单笔记</title>
    <url>/uncategorized/HTML%E8%A1%A8%E5%8D%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note default"><p>HTML 表单笔记</p>
</div>


<a id="more"></a>

<hr>
<h1 id="1-常用标签"><a href="#1-常用标签" class="headerlink" title="1.常用标签"></a>1. 常用标签</h1><br>

<p>1-1.input</p>

<blockquote>
<p>text (文本输入域)<br>password (密码输入域)<br>radio (单选框)<br>checkbox (多选框)<br>email()<br>file()<br>hidden()</p>
</blockquote>
<style>
    .tab{
        text-indent: 2em;
    }
</style>]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 环境搭建及安装</title>
    <url>/%E6%8A%80%E5%B7%A7/PHP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<div class="note default"><p>XAMPP 的安装及使用</p>
</div>

<a id="more"></a>

<hr>
<h1 id="1-XAMPP简介"><a href="#1-XAMPP简介" class="headerlink" title="1.XAMPP简介"></a>1.XAMPP 简介</h1><br>

<p>XAMPP（Apache+MySQL/MariaDB+PHP+Perl）  </p>
<p class="tab">开头的 X 代表 X-OS，代表可以在任何常见操作系统下使用，包括 Windows、Mac、Linux，开源平台。</p>
<p class="tab">XAMPP（Apache+MySQL+PHP+PERL）是一个功能强大的建站集成软件包。这个软件包原来的名字是 LAMPP，但是为了避免误解，最新的几个版本就改名为 XAMPP 了。它可以在 Windows、Linux、Solaris、Mac OS X 等多种操作系统下安装使用，支持多语言：英文、简体中文、繁体中文、韩文、俄文、日文等。</p>
<p class="tab">许多人通过他们自己的经验认识到安装 Apache 服务器是件不容易的事儿。如果您想添加&nbsp;MySQL、PHP 和 Perl，那就更难了。XAMPP 是一个易于安装且包含 MySQL、PHP 和 Perl 的 Apache 发行版。XAMPP 的确非常容易安装和使用：只需下载，解压缩，启动即可。</p>

<p>XAMPP 的下载地址是：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlZnJpZW5kcy5vcmcvemhfY24vaW5kZXguaHRtbA==">https://www.apachefriends.org/zh_cn/index.html<i class="fa fa-external-link-alt"></i></span></p>
<p class="tab">上面的是官方地址，100 多 M，很快就下好了，我有安装包，需要的找我。</p>

<h1 id="2-安装XMAPP"><a href="#2-安装XMAPP" class="headerlink" title="2.安装XMAPP"></a>2. 安装 XMAPP</h1><br>

<p>2.1 首先我在 D 盘创建了一个文件夹 XMAPP，然后在 XMAPP 创建了三个文件夹。  </p>
<p><img src="https://img-blog.csdnimg.cn/20181111120338184.png"></p>
<p class="tab">package 目录存放软件安装包</p>
<p class="tab">path 目录存放软件安装目录</p>
<p class="tab">virtualhost 目录是虚拟主机，也就是应用目录</p>
2-2 首先下载好XMAPP，放到一个位置，我放在 D:\XAMPP\package 这个位置的。  
2-3.然后双击，进入安装界面，一直next...。  
<p class="tab">我将安装路径选择了 D:\XAMPP\path</p>
2.4.直到安装完毕是这个样子的。  

<p><img src="https://img-blog.csdnimg.cn/2018111112100880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></p>
<h1 id="3-配置虚拟主机"><a href="#3-配置虚拟主机" class="headerlink" title="3.配置虚拟主机"></a>3. 配置虚拟主机</h1><br>

<p>3-1. 然后我在 D:\XMAPP\virtualhost 中新建了一个文件 ==&gt;index.php  </p>
<p><img src="https://img-blog.csdnimg.cn/20181111121229408.png"></p>
<p class="tab">很简单的一个函数，就当做首页了吧</p>
3.2.找到XAMPP的安装目录==&gt;apache==&gt;conf==&gt;extra  
<p class="tab">然后用编辑器打开 httpd-vhosts.conf</p>
<p class="tab">在文件的最下面写如下代码：</p>

<figure class="highlight php"><table><tbody><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:<span class="number">80</span>&gt;</span><br><span class="line"> ServerName ceshi.com</span><br><span class="line"> DocumentRoot <span class="string">"D:/XAMPP/virtualhost"</span></span><br><span class="line">&lt;<span class="built_in">Directory</span> <span class="string">"D:/XAMPP/virtualhost"</span>&gt; </span><br><span class="line"> Options FollowSymLinks IncludesNOEXEC Indexes</span><br><span class="line"> DirectoryIndex index.html index.htm index.php</span><br><span class="line"> AllowOverride all </span><br><span class="line"> Order Deny,Allow </span><br><span class="line"> Allow <span class="keyword">from</span> all </span><br><span class="line"> <span class="keyword">Require</span> all granted</span><br><span class="line">&lt;/<span class="built_in">Directory</span>&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></tbody></table></figure>

<h1 id="4-修改hosts文件"><a href="#4-修改hosts文件" class="headerlink" title="4.修改hosts文件"></a>4. 修改 hosts 文件</h1><br>

<p class="tab">进入 C 盘 ==&gt;Windows==&gt;system32==&gt;drivers==&gt;etc==&gt;hosts 文件</p>

<p><img src="https://img-blog.csdnimg.cn/20181111121715261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></p>
<p class="tab">在 hosts 文件添加一行配置即可 ==&gt;127.0.0.1 主机名</p>

<h1 id="5-测试是否XAMPP成功运行"><a href="#5-测试是否XAMPP成功运行" class="headerlink" title="5.测试是否XAMPP成功运行"></a>5. 测试是否 XAMPP 成功运行</h1><br>

<p>5-1. 先打开 Apache  </p>
<p><img src="https://img-blog.csdnimg.cn/2018111112185328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></p>
<p>5.2. 在浏览器中输入 主机名 ==&gt; 我的主机名为：localhost</p>

<p class="tab">现在 XAMPP 就安装并配置好了，有问题的加 QQ</p>

<style>
    .tab{
        text-indent: 2em;
    }
</style>]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 笔记 1</title>
    <url>/%E7%BC%96%E7%A8%8B/PHP%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<div class="note default"><p>PHP 笔记 2</p>
</div>

<a id="more"></a>

<hr>
<h1 id="一-PHP标识符与注释。"><a href="#一-PHP标识符与注释。" class="headerlink" title="一.PHP标识符与注释。"></a>一.PHP 标识符与注释。</h1><ol>
<li><p>php 四大标识符有</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">   标准型：</span><br><span class="line">   &lt;?php</span><br><span class="line">   //内容</span><br><span class="line">   ?&gt;</span><br><span class="line"></span><br><span class="line">   短风格 ：</span><br><span class="line">   &lt;? 内容 ?&gt;</span><br><span class="line">   </span><br><span class="line">   单行注释为：</span><br><span class="line">//单行注释内容</span><br><span class="line"></span><br><span class="line">   注释为：</span><br><span class="line">   /*</span><br><span class="line">   多行注释内容</span><br><span class="line">   */</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>PHP 变量 </p>
<ul>
<li>变量的命名规则<blockquote>
<p>变量必须以美元符号 $ 开头，美元符号 $ 后面的第一个字符不能为数字，只能是下划线_或者字母，除了下划线_外，变量不允许出现任何空格或者标点符号，php 变量名是严格区分大小写的。</p>
</blockquote>
</li>
<li>变量的数据类型<blockquote>
<p>标量类型：boolean、integer、float、string<br>复合类型：array、object<br>两种特殊类型： resource（资源），NULL (无类型)</p>
</blockquote>
</li>
</ul>
</li>
<li><p>PHP 常量</p>
<ul>
<li>自定义常量<blockquote>
<p>PHP 定义常量使用 define () 方法来定义<br>define (，，) 方法有 3 个参数：<br>1.string 类型的常量名称，需要用双引号扩起来。// 一定要填写参数。<br>2. 定义的常量的值   // 必填参数<br>3. 指定大小写是否敏感，true 表示不敏感，false 表示敏感  // 默认为 false.</p>
</blockquote>
</li>
<li>系统 (内置) 常量<blockquote>
<p>// 指系统本身自带的常量</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<h1 id="二-PHP运算符优先级"><a href="#二-PHP运算符优先级" class="headerlink" title="二.PHP运算符优先级"></a>二.PHP 运算符优先级</h1><blockquote>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"> clone new</td>
<td align="center"><code>clone</code> 和 <code>new</code></td>
</tr>
<tr>
<td align="center">[</td>
<td align="center">array()</td>
</tr>
<tr>
<td align="center">++， –</td>
<td align="center">递增 / 递减运算符</td>
</tr>
<tr>
<td align="center"> ~-(int)(float)(string)(array)(object)(bool)@</td>
<td align="center">类型</td>
</tr>
<tr>
<td align="center"> instanceof</td>
<td align="center"> 类型</td>
</tr>
<tr>
<td align="center"> !</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> * / %</td>
<td align="center"> 算术运算符</td>
</tr>
<tr>
<td align="center"> +-.</td>
<td align="center"> 算术运算符和字符串运算符</td>
</tr>
<tr>
<td align="center"> &lt;&lt; &gt;&gt;</td>
<td align="center"> 位运算符</td>
</tr>
<tr>
<td align="center"> &lt; &lt;= &gt; &gt;= &lt;&gt;</td>
<td align="center"> 比较运算符</td>
</tr>
<tr>
<td align="center"> == != === !==</td>
<td align="center"> 比较运算符</td>
</tr>
<tr>
<td align="center"> &amp;</td>
<td align="center"> 位运算符和引用</td>
</tr>
<tr>
<td align="center"> ^</td>
<td align="center"> 位运算符</td>
</tr>
<tr>
<td align="center"> |</td>
<td align="center"> 位运算符</td>
</tr>
<tr>
<td align="center"> &amp;&amp;.</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> ||</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> ?:</td>
<td align="center"> 条件运算符</td>
</tr>
<tr>
<td align="center"> = += _= *= /= .= %= &amp;= |= ^= &lt;&lt;= &gt;&gt;=</td>
<td align="center"> 赋值运算符</td>
</tr>
<tr>
<td align="center"> and</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> xor</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> or</td>
<td align="center"> 逻辑运算符</td>
</tr>
<tr>
<td align="center"> ,</td>
<td align="center"> 多处用到</td>
</tr>
</tbody></table>
</blockquote>
<h1 id="三-使用PHP编程实现-定义一个变量-赋值为不少于3位数的整数-要求取出该整数各个数位上的值并求和。-如-1234-1-2-3-4-10"><a href="#三-使用PHP编程实现-定义一个变量-赋值为不少于3位数的整数-要求取出该整数各个数位上的值并求和。-如-1234-1-2-3-4-10" class="headerlink" title="三.使用PHP编程实现:定义一个变量,赋值为不少于3位数的整数, 要求取出该整数各个数位上的值并求和。 如:1234=1+2+3+4=10"></a>三。使用 PHP 编程实现：定义一个变量，赋值为不少于 3 位数的整数，要求取出该整数各个数位上的值并求和。 如：1234=1+2+3+4=10</h1>  <figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $sum = 9876;</span><br><span class="line">    $g = $a % 10;</span><br><span class="line">    $s = floor($a/10)%10;</span><br><span class="line">    $b = floor($a/100)%10;</span><br><span class="line">    $i = floor($a/1000);</span><br><span class="line">    $e = $i + $b + $s + $g;</span><br><span class="line">    echo $sum ."=".$i."+". $b ."+". $s ."+". $g ."=". $e;   //php连接符是.</span><br><span class="line">?&gt;</span><br><span class="line">//运行结果</span><br><span class="line">9876=9+8+7+6=30</span><br></pre></td></tr></tbody></table></figure>

<h1 id="四-使用JS编程实现石头剪刀布小游戏。"><a href="#四-使用JS编程实现石头剪刀布小游戏。" class="headerlink" title="四.使用JS编程实现石头剪刀布小游戏。"></a>四。使用 JS 编程实现石头剪刀布小游戏。</h1>  <figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">var user = prompt("请出拳，1石头，2剪刀，3布");</span><br><span class="line">var sys = parseInt(Math.random()*3)+1;</span><br><span class="line">if(user&gt;3||user&lt;1){</span><br><span class="line">    alert("您输入的数字不在范围");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">if(sys==1){</span><br><span class="line">    alert("系统出的是的是石头");</span><br><span class="line">}else if(robot==2){</span><br><span class="line">    alert("系统出的是剪刀");</span><br><span class="line">}else if(robot==3){</span><br><span class="line">    alert("系统出的是布");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">var p = user-sys;</span><br><span class="line">if( p== -1||p==2){</span><br><span class="line">    alert("您赢了!");</span><br><span class="line">}else if(p==-2||p==1){</span><br><span class="line">    alert("很遗憾你输了!");</span><br><span class="line">}else if(user==sys){</span><br><span class="line">    alert("平局!");</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h1 id="五-学习心得"><a href="#五-学习心得" class="headerlink" title="五.学习心得"></a>五。学习心得</h1><p>  经过这一段时间的学习，发现自己还有很多地方的不足，要好好再加强一下自己。</p>
<p><del>~ 如果是老师的话，请在下方发表您的评论，表达对我的看法！ ~</del></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>Photoshop</title>
    <url>/uncategorized/Photoshop/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Python 自学笔记</title>
    <url>/Windows/Python%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note default"><p>Python 笔记</p>
</div>

<a id="more"></a>

<hr>
<h1 id="1-变量和简单数据类型"><a href="#1-变量和简单数据类型" class="headerlink" title="1.变量和简单数据类型"></a>1. 变量和简单数据类型</h1><h3 id="1-1-字符串首字母大写、所有大写、所有小写"><a href="#1-1-字符串首字母大写、所有大写、所有小写" class="headerlink" title="1-1.字符串首字母大写、所有大写、所有小写"></a>1-1. 字符串首字母大写、所有大写、所有小写</h3><pre><code>name = "ada lovelace"
print(name.title())
print(name.upper())
print(name.lower())

\# 效果
Ada Lovelace # 首字母大写
ADA LOVELACE # 全部大写
ada lovelace # 全部小写</code></pre>
<h3 id="1-2-合并-拼接-字符串"><a href="#1-2-合并-拼接-字符串" class="headerlink" title="1-2.合并(拼接)字符串"></a>1-2. 合并 (拼接) 字符串</h3><pre><code>first_name = "ada"
last_name = "lovelace"
full_name = first_name + " " + last_name

message = "Hello," +full_name.title() + "!" # 看的出来和js很像
print(message)


\# 显示效果
Hello,Ada Lovelace</code></pre>
<h3 id="1-3-使用制表符或换行符来添加空白"><a href="#1-3-使用制表符或换行符来添加空白" class="headerlink" title="1-3.使用制表符或换行符来添加空白"></a>1-3. 使用制表符或换行符来添加空白</h3><pre><code>first_name = "ada"
last_name = "lovelace"
full_name = first_name + " " + last_name

message = "Hello," +full_name.title() + "!"
print(message)

print("Languages:\n\tPython\n\tC\n\tJavaScript")

\# 显示效果
Hello,Ada Lovelace!
Languages:
    Python
    C
    JavaScript</code></pre>
<h3 id="1-4-删除空白"><a href="#1-4-删除空白" class="headerlink" title="1-4.删除空白"></a>1-4. 删除空白</h3><pre><code>\# 命令行中
&gt;&gt;&gt; favorite_language = "python "
&gt;&gt;&gt; favorite_language
'python '
&gt;&gt;&gt; favorite_language.rstrip()
'python'
&gt;&gt;&gt; favorite_language
'python '</code></pre>
<h3 id="1-5-使用函数str-避免类型错误"><a href="#1-5-使用函数str-避免类型错误" class="headerlink" title="1-5.使用函数str()避免类型错误"></a>1-5. 使用函数 <code>str()</code> 避免类型错误</h3><pre><code>\# 错误代码
age = 23
message = "Happy " + age + "rd Birthday!"
print(message)
\# 显示效果
Traceback (most recent call last):
  File "name.py", line 2, in &lt;module&gt;
    message = "Happy " + age + "rd Birthday!"
TypeError: can only concatenate str (not "int") to str
\# 这是一个类型错误，意味着Python无法识别你使用的信息。

\# 正确代码
age = 23
message = "Happy " + str(age) + "rd Birthday!"
print(message)
\# 显示效果
Happy 23rd Birthday!</code></pre>
<h3 id="1-6-Python-2-中的整数"><a href="#1-6-Python-2-中的整数" class="headerlink" title="1-6.Python 2 中的整数"></a>1-6.Python 2 中的整数</h3><blockquote>
<p>在 Python2 中，将两个整数相除得到的结果稍有不同：<br>      &gt;&gt;&gt; 3 / 2<br>      1</p>
</blockquote>
<blockquote>
<p>Python 返回的值为 1，而不是 1.5。在 Python 2 中，整数除法的结果只保留整数部分，小数部分被删除 (不是四舍五入，而是直接删除)。若要避免，务必确保至少一个操作数为浮点数:<br>      &gt;&gt;&gt; 3.0 / 2<br>      1.5</p>
<blockquote>
<blockquote>
<p>3 / 2.0<br>      1.5<br>3.0 / 2.0<br>      1.5</p>
</blockquote>
</blockquote>
</blockquote>
<pre><code>  从Python 3转而用Python 2或从Python 3时，这种除法行为常常会令人迷惑。使用或编写同时使用浮点数和整数的代码时，一定要注意这种异常行为。</code></pre>
<h1 id="2-列表简介"><a href="#2-列表简介" class="headerlink" title="2.列表简介"></a>2. 列表简介</h1><h3 id="2-1-列表是什么"><a href="#2-1-列表是什么" class="headerlink" title="2-1.列表是什么"></a>2-1. 列表是什么</h3><blockquote>
<p>&nbsp; &nbsp; &nbsp; &nbsp;列表由一系列按顺序排列的元素组成。你可以创建包含字母表中所有字母、数字 0~9 或所有家庭成员姓名的列表；也可以将任何东西加入列表中，其中的元素之间可以没有任何关系。鉴于列表通常包含多个元素，给列表指定一个表示复数的名字（如 letters、digits 或 names）是个不错的主意。<br>&nbsp; &nbsp; &nbsp; &nbsp;在 Python 中，用方包括（[]）来表示列表，并用逗号来隔开其中的元素。下面是一个简单的列表示例，这个列表包含几个自行车：</p>
</blockquote>
<h4 id="2-1-1-访问列表元素"><a href="#2-1-1-访问列表元素" class="headerlink" title="2-1-1.访问列表元素"></a>2-1-1. 访问列表元素</h4><pre><code>bicycles = ['trek','cannondale','redline','specialized']
print(bicycles[0])
print(bicycles[0].title())
print(bicycles[1])
print(bickcles[2])
print(bickcles[3])

\# 显示效果
trek
Trek
cannondale
redline
specialized</code></pre>
<h4 id="2-1-2-索引从0而不是1开始"><a href="#2-1-2-索引从0而不是1开始" class="headerlink" title="2-1-2.索引从0而不是1开始"></a>2-1-2. 索引从 0 而不是 1 开始</h4><blockquote>
<p>在 Python 中，第一个列表元素的索引为 0，而不是 1。在大多数编程语言中都是如此，这与列表操作的底层实现有关。<br>Python 为访问最后一个列表元素提供了一种特殊语法。通过将索引指定为 - 1，可让 Python 返回最后一个列表元素：<br>      bicycles = [‘trek’,’cannondale’,’redline’,’specialized’]<br>      print(bicycles[-1])<br>      print(bicycles[-2])<br>      print(bicycles[-3])</p>
</blockquote>
<pre><code>  \# 显示效果
  specialized
  redline
  cannondale</code></pre>
<h3 id="2-2-修改、添加和删除元素"><a href="#2-2-修改、添加和删除元素" class="headerlink" title="2-2.修改、添加和删除元素"></a>2-2. 修改、添加和删除元素</h3><h4 id="2-2-1-修改列表元素"><a href="#2-2-1-修改列表元素" class="headerlink" title="2-2-1.修改列表元素"></a>2-2-1. 修改列表元素</h4><pre><code>motorcycles = ['honda','yamaha','suzuki']
print(motorcycles)

motorcycles[0] = 'ducati'
print(motorcycles)

\# 显示效果
['honda','yamaha','suzuki']
['ducati','yamaha','suzuki']</code></pre>
<h4 id="2-2-2-在列表中添加元素"><a href="#2-2-2-在列表中添加元素" class="headerlink" title="2-2-2.在列表中添加元素"></a>2-2-2. 在列表中添加元素</h4><ol>
<li><p>在列表末尾添加元素<br> motorcycles = []<br> motorcycles.append(‘honda’)<br> motorcycles.append(‘yamaha’)<br> motorcycles.append(‘suzuki’)</p>
<p> print(motorcycles)</p>
<p> # 显示效果<br> [‘honda’,’yamaha’,’suzuki’]</p>
</li>
<li><p>在列表中插入元素</p>
<blockquote>
<p>使用方法 insert () 可在列表的任何位置添加新元素。为此，你需要指定新元素的索引和值。<br>   motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
</blockquote>
<p>   motorcycles.insert(0, ‘ducati’)<br>   print(motorcycles)</p>
<p>   # 在这个示例中，值’ducati’被插入到了列表开头；方法 insert () 在索引 0 处添加空间，并将值’ducati’存储到这个地方。这种操作将列表中既有的每个元素都向右移一个位置。<br>   # 显示效果<br>   [‘ducati’,honda’,’yamaha’,’suzuki’]</p>
</li>
</ol>
<h4 id="2-2-3-从列表中删除元素"><a href="#2-2-3-从列表中删除元素" class="headerlink" title="2-2-3.从列表中删除元素"></a>2-2-3. 从列表中删除元素</h4><ol>
<li><p>使用 del 语句删除元素</p>
<blockquote>
<p>如果知道要删除的元素在列表中的位置，可使用 del 语句。<br>   motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>   print(motorcycles)</p>
</blockquote>
<p>   del motorcycles[0]<br>   print(motorcycles)</p>
<p>   # 显示效果<br>   [‘honda’, ‘yamaha’, ‘suzuki’]<br>   [‘yamaha’, ‘suzuki’]</p>
<p>   # 使用 del 可删除任何位置处的列表元素，条件是知道其索引。下列演示了如何删除前述列表中的第二元素 ————‘yamaha’。<br>   motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>   print(motorcycles)</p>
<p>   del motorcycles[1]<br>   print(motorcycles)</p>
<p>   # 显示效果<br>   [‘honda’, ‘yamaha’, ‘suzuki’]<br>   [‘honda’, ‘suzuki’]</p>
</li>
<li><p>使用方法 pop () 删除元素<br> motorcycles = [‘honda’,’yamaha’,’suzuki’]<br> print(motorcycles)</p>
<p>  = motorcycles.pop()<br> print(motorcycles)<br> print(poped_motorcycle)</p>
<p> # 方法 pop () 删除列表末尾的元素，并让你能接着使用它。</p>
<p> # 显示效果<br> [‘honda’,’yamaha’,’suzuki’]<br> [‘honda’,’yamaha’]<br> suzuki # 值‘suzukki‘已删除，它现在存储在变量 poped_motorcycle 中。</p>
<p> # 方法 pop () 是怎么起作用的？<br> motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
<p> last_owned = motorcycles.pop()<br> print(‘The last motorcycle I owned was a ‘ + last_owned.title() + ‘.’)</p>
<p> # 输出是一个简单的句子，指出了最新购买的是哪款摩托车。</p>
<p> # 显示效果<br> The last motorcycle I owned was a Suzuki.</p>
</li>
<li><p>弹出列表中任何位置处的元素</p>
<blockquote>
<p>你可以使用 pop () 来删除列表中任何位置的元素，只需在括号中指定要删除的元素的索引即可。<br>   motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
</blockquote>
<p>   last_owned = motorcycles.pop(0)<br>   print(‘The last motorcycle I owned was a ‘ + last_owned.title() + ‘.’)</p>
<p>   # 显示效果<br>   The last motorcycle I owned was a Honda.</p>
</li>
<li><p>根据值删除元素</p>
<blockquote>
<p>只知道要删除的元素的值，可使用方法 remove ()。<br>   motorcycles = [‘honda’,’yamaha’,’suzuki’,’ducati’]<br>   print(motorcycles)</p>
</blockquote>
<p>   too_expensive = ‘ducati’<br>   motorcycles.remove(too_expensive)<br>   print(motorcycles)<br>   print(‘\nA ‘ + too_expensive.title() + ‘ is too expensive for me.’)</p>
<p>   # 显示效果<br>   [‘honda’, ‘yamaha’, ‘suzuki’, ‘ducati’]<br>   [‘honda’, ‘yamaha’, ‘suzuki’]</p>
<p>   A Ducati is too expensive for me.</p>
</li>
</ol>
<h3 id="2-3-组织列表"><a href="#2-3-组织列表" class="headerlink" title="2-3.组织列表"></a>2-3. 组织列表</h3><h4 id="2-3-1-使用方法sort-对列表进行永久性排序"><a href="#2-3-1-使用方法sort-对列表进行永久性排序" class="headerlink" title="2-3-1.使用方法sort()对列表进行永久性排序"></a>2-3-1. 使用方法 sort () 对列表进行永久性排序</h4><pre><code>\# 按字母顺序排列。
cars = ['bmw','audi','toyota','subaru']
cars.sort()
print(cars)

\# 显示效果
['audi', 'bmw', 'subaru', 'toyota']

\# 按字母顺序相反的顺序排列。
cars = ['bmw','audi','toyota','subaru']
cars.sort(reverse=True)
print(cars)

\# 显示效果
['toyota', 'subaru', 'bmw', 'audi']</code></pre>
<h4 id="2-3-2-使用sorted-对列表进行临时排序"><a href="#2-3-2-使用sorted-对列表进行临时排序" class="headerlink" title="2-3-2.使用sorted()对列表进行临时排序"></a>2-3-2. 使用 sorted () 对列表进行临时排序</h4><pre><code>cars = ['bmw','audi','toyota','subaru']

print('Here is the original list:')
print(cars)

print('\nHere is the sorted list:')
print(sorted(cars))

print('\nHere is the original list again:')
print(cars)

\# 显示效果
Here is the original list:
['bmw', 'audi', 'toyota', 'subaru']

Here is the sorted list:
['audi', 'bmw', 'subaru', 'toyota']

Here is the original list again:
['bmw', 'audi', 'toyota', 'subaru']</code></pre>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>RSS 订阅地址</title>
    <url>/uncategorized/RSS%E8%AE%A2%E9%98%85/</url>
    <content><![CDATA[<div class="note default"><blockquote>
<p>RSS 订阅地址：<span class="exturl" data-url="aHR0cHM6Ly9mdW5neXVhLmdpdGh1Yi5pby9hdG9tLnhtbA==">https://fungyua.github.io/atom.xml<i class="fa fa-external-link-alt"></i></span><br>欢迎订阅</p>
</blockquote>
</div>

<a id="more"></a>

<hr>
]]></content>
  </entry>
  <entry>
    <title>宝塔 BT 面板 301 重定向不带 www 跳转教程</title>
    <url>/%E5%85%B6%E4%BB%96/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/bt-301redirection/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>网站统一 URL 有利于 SEO，宝塔 BT 面板自带 301 重定向功能，将不带 www 的域名跳转到带 www 的域名，LAMPLNMP 分享宝塔面板 301 重定向教程两种：</p>
<h2 id="方法一：宝塔301重定向后台自带功能"><a href="#方法一：宝塔301重定向后台自带功能" class="headerlink" title="方法一：宝塔301重定向后台自带功能"></a>方法一：宝塔 301 重定向后台自带功能</h2><p>宝塔面板后台自带了 301 重定向功能，可以帮助我们将域名进行 www 和不带 www 之间的跳转转换。</p>
<ol>
<li>登录到宝塔面板后台：http:// 你的服务器 IP/8888</li>
<li> 点击左侧 “网站”，找到需要设置的域名，点击右侧的 “设置”；</li>
<li>点击切换到 “301 重定向” 选项卡，如下图所示：</li>
</ol>
<p><img src="https://cdn.fuocu.cn/wp-content/uploads/2020/03/1583382409-0bfd3f564a6744f.png"></p>
<p>上述设置方法，是将不带 www 的域名 301 重定向到带 www 的域名上，至此宝塔面板 301 重定向跳转完成。</p>
<h2 id="方法二：代码设置301重定向"><a href="#方法二：代码设置301重定向" class="headerlink" title="方法二：代码设置301重定向"></a>方法二：代码设置 301 重定向</h2><p>通过编写宝塔面板后台自带的伪静态规则实现 301 重定向，将不带 www 跳转到带 www 域名规则：</p>
<code>
    if ($host ~ '^xinshouzhanzhang.com')
    {return 301 http://www.xinshouzhanzhang.com$uri;}
</code>

<p>点击切换到 “伪静态” 选项卡，如下图所示：</p>
<p><a href="https://i.loli.net/2020/03/05/SPXBElKu8kjGDMa.png"><img src="https://i.loli.net/2020/03/05/SPXBElKu8kjGDMa.png"></a></p>
<p>至此，宝塔面板 301 重定向教程完毕。</p>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5sYW1wbG5tcC5jb20vYmFvdGEvNDQwLw==">http://www.lamplnmp.com/baota/440/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>其他</category>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>咨询</tag>
      </tags>
  </entry>
  <entry>
    <title>在本地搭建 Hexo 博客框架，并部署到 Github。</title>
    <url>/Code/build-blog-website-by-hexo-github/</url>
    <content><![CDATA[<div class="note default"><h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3></div>

<a id="more"></a>

<hr>
<h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3><p>Hexo 是一个快速、简单且强大的部落格框架。能够使用 Markdown 语法来新增文章，快速渲染你的文章，有强大的外挂系统及丰富的扩充性，简单易用，让你可以专注与写作中，不被複杂的操作影响写作的体验，对于习惯使用 Markdown 纪录内容的人可说是一大福音，可以套用主题让你的网页变得更加漂亮，重点来了！Hexo 是由台湾人制作的，官方文件都有中文语系的支援，更能降低入门的门槛。 官网： <span class="exturl" data-url="aHR0cDovL2hleG8uaW8v">http://hexo.io<i class="fa fa-external-link-alt"></i></span> GitHub：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhv">https://github.com/hexojs/hexo<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="什么是-GitHub-？"><a href="#什么是-GitHub-？" class="headerlink" title="什么是 GitHub ？"></a>什么是 GitHub ？</h3><p>GitHub 是通过 Git 进行版本控制的软件源代码托管服务，由 GitHub 公司（曾称 Logical Awesome）的开发者 Chris Wanstrath、PJ Hyett 和 Tom Preston-Werner 使用 Ruby on Rails 编写而成。（维基百科） 官网：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">https://github.com<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h2><p>使用 github pages 服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于 github 的；</li>
<li>数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
<li>等等；</li>
</ol>
<h3 id="1-1-准备工作"><a href="#1-1-准备工作" class="headerlink" title="1.1. 准备工作"></a>1.1. 准备工作</h3><p>在开始一切之前，你必须已经：</p>
<ul>
<li>有一个 github 账号，没有的话去注册一个；</li>
<li>安装了 node.js、npm，并了解相关基础知识；</li>
<li>安装了 git for windows（或者其它 git 客户端）</li>
</ul>
<p>本文所使用的环境：</p>
<ul>
<li>Windows10</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbA==">node.js@12.14.1<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9kb3dubG9hZHM=">git@2.25.0<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbA==">hexo@3.9.0<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="2、搭建github博客"><a href="#2、搭建github博客" class="headerlink" title="2、搭建github博客"></a>2、搭建 github 博客</h2><h3 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1. 创建仓库"></a>2.1. 创建仓库</h3><p>新建一个名为<code>你的用户名.github.io</code> 的仓库，比如说，如果你的 github 用户名是 test，那么你就新建 <code>test.github.io</code> 的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <span class="exturl" data-url="aHR0cDovL3Rlc3QuZ2l0aHViLmlvLw==">http://test.github.io<i class="fa fa-external-link-alt"></i></span> 了，是不是很方便？ 由此可见，每一个 github 账户最多只能创建一个这样可以直接使用域名访问的仓库。 几个注意的地方：</p>
<ol>
<li>注册的邮箱一定要验证，否则不会成功；</li>
<li>仓库名字必须是：<code>username.github.io</code>，其中 <code>username</code> 是你的用户名；</li>
<li>仓库创建成功不会立即生效，需要过一段时间，大概 10-30 分钟，或者更久，我的等了半个小时才生效；</li>
</ol>
<p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p>
<h3 id="2-2-绑定域名"><a href="#2-2-绑定域名" class="headerlink" title="2.2. 绑定域名"></a>2.2. 绑定域名</h3><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>xxx.github.io</code> 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是 OK 的。 首先你要注册一个域名，域名注册以前总是推荐去 <code>godaddy</code>，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！ 绑定域名分 2 种情况：带 www 和不带 www 的。 域名配置最常见有 2 种方式，CNAME 和 A 记录，CNAME 填写域名，A 记录填写 IP，由于不带 www 方式只能采用 A 记录，所以必须先 ping 一下<code>你的用户名.github.io</code> 的 IP，然后到你的域名 DNS 设置页，将 A 记录指向你 ping 出来的 IP，将 CNAME 指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加 www 都可以访问，如下： <a href="https://i.loli.net/2020/02/15/oCH6dlQSvz9y3On.png"><img src="https://i.loli.net/2020/02/15/oCH6dlQSvz9y3On.png"></a> 然后到你的 github 项目根目录新建一个名为 CNAME 的文件（无后缀），里面填写你的域名，加不加 www 看你自己喜好，因为经测试：</p>
<ul>
<li>如果你填写的是没有 www 的，比如 mygit.me，那么无论是访问 <span class="exturl" data-url="aHR0cDovL3d3dy5teWdpdC5tZS8=">http://www.mygit.me<i class="fa fa-external-link-alt"></i></span> 还是 <span class="exturl" data-url="aHR0cDovL215Z2l0Lm1lLw==">http://mygit.me<i class="fa fa-external-link-alt"></i></span> ，都会自动跳转到 <span class="exturl" data-url="aHR0cDovL215Z2l0Lm1lLw==">http://mygit.me<i class="fa fa-external-link-alt"></i></span></li>
<li>如果你填写的是带 www 的，比如 <span class="exturl" data-url="aHR0cDovL3d3dy5teWdpdC5tZS8=">www.mygit.me<i class="fa fa-external-link-alt"></i></span> ，那么无论是访问 <span class="exturl" data-url="aHR0cDovL3d3dy5teWdpdC5tZS8=">http://www.mygit.me<i class="fa fa-external-link-alt"></i></span> 还是 <span class="exturl" data-url="aHR0cDovL215Z2l0Lm1lLw==">http://mygit.me<i class="fa fa-external-link-alt"></i></span> ，都会自动跳转到 <span class="exturl" data-url="aHR0cDovL3d3dy5teWdpdC5tZS8=">http://www.mygit.me<i class="fa fa-external-link-alt"></i></span></li>
<li>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <span class="exturl" data-url="aHR0cDovL2FiYy5teWdpdC5tZS8=">http://abc.mygit.me<i class="fa fa-external-link-alt"></i></span> 没问题，但是访问 <span class="exturl" data-url="aHR0cDovL215Z2l0Lm1lLw==">http://mygit.me<i class="fa fa-external-link-alt"></i></span> ，不会自动跳转到 <span class="exturl" data-url="aHR0cDovL2FiYy5teWdpdC5tZS8=">http://abc.mygit.me<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p><a href="https://i.loli.net/2020/02/14/mkpGldxjHu53Jvc.png"><img src="https://i.loli.net/2020/02/14/mkpGldxjHu53Jvc.png"></a> <a href="https://i.loli.net/2020/02/14/jU6AiKkHY3ZSbd4.png"><img src="https://i.loli.net/2020/02/14/jU6AiKkHY3ZSbd4.png"></a> 另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code> 并没有失效，而是会自动跳转到你的新域名。</p>
<h2 id="3、配置SSH-key"><a href="#3、配置SSH-key" class="headerlink" title="3、配置SSH key"></a>3、配置 SSH key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的 github 权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用 ssh key 来解决本地和服务器的连接问题。 <code>$ cd ~/. ssh #检查本机已存在的ssh密钥</code> 如果提示：No such file or directory 说明你是第一次使用 git。 <code>ssh-keygen -t rsa -C "邮件地址"</code> 然后连续 3 次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code> 文件，记事本打开并复制里面的内容，打开你的 github 主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： <a href="https://i.loli.net/2020/02/14/tnmoY5iSaWBX2kJ.png"><img src="https://i.loli.net/2020/02/14/tnmoY5iSaWBX2kJ.png"></a> 将刚复制的内容粘贴到 key 那里，title 随便填，保存。</p>
<h3 id="3-1-测试是否成功"><a href="#3-1-测试是否成功" class="headerlink" title="3.1. 测试是否成功"></a>3.1. 测试是否成功</h3><p><code>$ ssh -T git@github.com # 注意邮箱地址不用改</code> 如果提示 <code>Are you sure you want to continue connecting (yes/no)?</code>，输入 yes，然后会看到：</p>
<blockquote>
<p><em>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</em></p>
</blockquote>
<p>看到这个信息说明 SSH 已配置成功！ 此时你还需要配置： <code>$ git config --global user.name "liuxianan" // 你的github用户名，非昵称</code> <code>$ git config --global user.email "xxx@qq.com" // 填写你的github注册邮箱</code> 具体这个配置是干嘛的我没仔细深究。</p>
<h2 id="4、使用hexo写博客"><a href="#4、使用hexo写博客" class="headerlink" title="4、使用hexo写博客"></a>4、使用 hexo 写博客</h2><h3 id="4-1-原理"><a href="#4-1-原理" class="headerlink" title="4.1. 原理"></a>4.1. 原理</h3><p>由于 github pages 存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以 hexo 所做的就是将这些 md 文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到 github。</p>
<h3 id="4-2-注意事项"><a href="#4-2-注意事项" class="headerlink" title="4.2. 注意事项"></a>4.2. 注意事项</h3><p>安装之前先来说几个注意事项：</p>
<ol>
<li>很多命令既可以用 Windows 的 cmd 来完成，也可以使用 git bash 来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用 git bash 来执行；</li>
<li>hexo 不同版本差别比较大，网上很多文章的配置信息都是基于 2.x 的，所以注意不要被误导；</li>
<li>hexo 有 2 种<code>_config.yml</code> 文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个 <code>theme</code> 下的；</li>
</ol>
<h3 id="4-3-安装"><a href="#4-3-安装" class="headerlink" title="4.3. 安装"></a>4.3. 安装</h3><pre><code>$ npm install -g hexo</code></pre>
<h3 id="4-4-初始化"><a href="#4-4-初始化" class="headerlink" title="4.4. 初始化"></a>4.4. 初始化</h3><p>在电脑的某个地方新建一个名为 hexo 的文件夹（名字可以随便取），比如我的是 <code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。 <code>$ cd /f/Workspaces/hexo/</code> <code>$ hexo init</code> hexo 会自动下载一些文件到这个目录，包括 node_modules，目录结构如下图： <a href="https://i.loli.net/2020/02/14/We7JNDSIZ4ckMps.png"><img src="https://i.loli.net/2020/02/14/We7JNDSIZ4ckMps.png"></a> <code>$ hexo g # 生成</code> <code>$ hexo s # 启动服务</code> 执行以上命令之后，hexo 就会在 public 文件夹生成相关 html 文件，这些文件将来都是要提交到 github 去的： <a href="https://i.loli.net/2020/02/14/YAwMBnN1j5yKgLV.png"><img src="https://i.loli.net/2020/02/14/YAwMBnN1j5yKgLV.png"></a> <code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span> 即可看到内容。 <a href="https://i.loli.net/2020/02/14/3ktMhDWcORioaup.png"><img src="https://i.loli.net/2020/02/14/3ktMhDWcORioaup.png"></a></p>
<h3 id="4-5-修改主题"><a href="#4-5-修改主题" class="headerlink" title="4.5. 修改主题"></a>4.5. 修改主题</h3><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=">官方主题<i class="fa fa-external-link-alt"></i></span>。 个人比较喜欢的 2 个主题：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3Bpbmdnb2QvaGV4by10aGVtZS1qZWt5bGw=">hexo-theme-jekyll<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpdHRlbi9oZXhvLXRoZW1lLXlpbGlh">hexo-theme-yilia<i class="fa fa-external-link-alt"></i></span>。 首先下载这个主题： <code>$ cd /f/Workspaces/hexo/</code> <code>$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code> 下载后的主题都在这里： <a href="https://i.loli.net/2020/02/14/Nf67RxO2klJdM5c.png"><img src="https://i.loli.net/2020/02/14/Nf67RxO2klJdM5c.png"></a> 修改<code>_config.yml</code> 中的 <code>theme: landscape</code> 改为 <code>theme: yilia</code>，然后重新执行 <code>hexo g</code> 来重新生成。 如果出现一些莫名其妙的问题，可以先执行 <code>hexo clean</code> 来清理一下 public 的内容，然后再来重新生成和发布。</p>
<h3 id="4-6-上传之前"><a href="#4-6-上传之前" class="headerlink" title="4.6. 上传之前"></a>4.6. 上传之前</h3><blockquote>
<p>在上传代码到 github 之前，一定要记得先把你以前所有代码下载下来（虽然 github 有版本管理，但备份一下总是好的），因为从 hexo 提交代码时会把你以前的所有代码都删掉。</p>
</blockquote>
<h3 id="4-7-上传到github"><a href="#4-7-上传到github" class="headerlink" title="4.7. 上传到github"></a>4.7. 上传到 github</h3><p>如果你一切都配置好了，发布上传很容易，一句 <code>hexo d</code> 就搞定，当然关键还是你要把所有东西配置好。 首先，<code>ssh key</code> 肯定要配置好。 其次，配置<code>_config.yml</code> 中有关 deploy 的部分： 正确写法：</p>
<p>deploy:<br>&nbsp;&nbsp;type:&nbsp;git<br>&nbsp;&nbsp;repository:&nbsp;<span class="exturl" data-url="bWFpbHRvOiYjeDY3OyYjeDY5OyYjeDc0OyYjNjQ7JiMxMDM7JiN4Njk7JiN4NzQ7JiN4Njg7JiMxMTc7JiM5ODsmI3gyZTsmIzk5OyYjeDZmOyYjeDZkOw==">git@github.com<i class="fa fa-external-link-alt"></i></span>:liuxianan/liuxianan.github.io.git<br> &nbsp;branch:&nbsp;master</p>
<p>错误写法：</p>
<p>deploy:<br>&nbsp;&nbsp;type: github<br>&nbsp;&nbsp;repository: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpdXhpYW5hbi9saXV4aWFuYW4uZ2l0aHViLmlvLmdpdA==">https://github.com/liuxianan/liuxianan.github.io.git<i class="fa fa-external-link-alt"></i></span><br> &nbsp;branch: master</p>
<p>后面一种写法是 hexo2.x 的写法，现在已经不行了，无论是哪种写法，此时直接执行 <code>hexo d</code> 的话一般会报如下错误： <code>Deployer not found: github 或者 Deployer not found: git</code> 原因是还需要安装一个插件： <code>npm install hexo-deployer-git --save</code> 其它命令不确定，部署这个命令一定要用 git bash，否则会提示 <code>Permission denied (publickey).</code> 打开你的 git bash，输入 <code>hexo d</code> 就会将本次有改动的代码全部提交，没有改动的不会：</p>
<h3 id="4-8-保留CNAME、README-md等文件"><a href="#4-8-保留CNAME、README-md等文件" class="headerlink" title="4.8. 保留CNAME、README.md等文件"></a>4.8. 保留 CNAME、README.md 等文件</h3><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非 md 文件可以把他们放到 source 文件夹下，这里的所有文件都会原样复制（除了 md 文件）到 public 目录的： <a href="https://i.loli.net/2020/02/14/WdeYlXztnFsH587.png"><img src="https://i.loli.net/2020/02/14/WdeYlXztnFsH587.png"></a> 由于 hexo 默认会把所有 md 文件都转换成 html，包括 README.md，所有需要每次生成之后、上传之前，手动将 README.md 复制到 public 目录，并删除 README.html。</p>
<h3 id="4-9-常用hexo命令"><a href="#4-9-常用hexo命令" class="headerlink" title="4.9. 常用hexo命令"></a>4.9. 常用 hexo 命令</h3><blockquote>
<p>常见命令：</p>
</blockquote>
<p>hexo new “postName” #新建文章<br>hexo&nbsp;new&nbsp;page&nbsp;“pageName”&nbsp;# 新建页面<br>hexo&nbsp;generate&nbsp;# 生成静态页面至 public 目录<br>hexo&nbsp;server&nbsp;# 开启预览访问端口（默认端口 4000，’ctrl&nbsp;+&nbsp;c’关闭 server）<br>hexo&nbsp;deploy&nbsp;# 部署到 GitHub<br>hexo&nbsp;help&nbsp;&nbsp;#&nbsp;查看帮助<br>hexo version&nbsp;&nbsp;# 查看 Hexo 的版本</p>
<blockquote>
<p>缩写：</p>
</blockquote>
<p>hexo n == hexo new<br>hexo&nbsp;g&nbsp;==&nbsp;hexo&nbsp;generate<br>hexo&nbsp;s&nbsp;==&nbsp;hexo&nbsp;server<br>hexo d == hexo deploy</p>
<blockquote>
<p>组合命令：</p>
</blockquote>
<p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传</p>
<h3 id="4-10-config-yml"><a href="#4-10-config-yml" class="headerlink" title="4.10. _config.yml"></a>4.10. _config.yml</h3><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。 需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p>
<h3 id="4-11-写博客"><a href="#4-11-写博客" class="headerlink" title="4.11. 写博客"></a>4.11. 写博客</h3><p>定位到我们的 hexo 根目录，执行命令： <code>hexo new 'my-first-blog'</code> hexo 会帮我们在<code>_posts</code> 下生成相关 md 文件： <a href="https://i.loli.net/2020/02/14/sUKjNzRLxEVPS2g.png"><img src="https://i.loli.net/2020/02/14/sUKjNzRLxEVPS2g.png"></a> 当然你也可以直接自己新建 md 文件，用这个命令的好处是帮我们自动生成了时间。 一般完整格式如下：</p>
<p>---<br><code class="hljs">title:&nbsp;postName&nbsp;# 文章页面上的显示名称，一般是中文<br>date:&nbsp;2013-12-02&nbsp;15:30:16&nbsp;# 文章生成时间，一般不改，当然也可以任意修改<br>categories:&nbsp;默认分类&nbsp;# 分类<br>tags:&nbsp;[tag1,tag2,tag3]&nbsp;# 文章标签，可空，多标签请用格式，注意：后面有个空格<br>description:&nbsp;附加一段文章摘要，字数最好在 140 字以内，会出现在 meta 的 description 里面<br>---</code class="hljs"></p>
<p>以下是正文</p>
<p>那么 <code>hexo new page 'postName'</code> 命令和 <code>hexo new 'postName'</code> 有什么区别呢？ <code>hexo new page 'my-second-blog'</code> 最终部署时生成：<code>hexo\public\my-second-blog\index.html</code>，但是它不会作为文章出现在博文目录。</p>
<h4 id="4-11-1-写博客工具"><a href="#4-11-1-写博客工具" class="headerlink" title="4.11.1. 写博客工具"></a>4.11.1. 写博客工具</h4><p>那么用什么工具写博客呢？这个我还没去找，以前自己使用 editor.md 简单弄了个，大家有好用的 hexo 写博客工具可以推荐个。</p>
<h4 id="4-11-2-如何让博文列表不显示全部内容"><a href="#4-11-2-如何让博文列表不显示全部内容" class="headerlink" title="4.11.2. 如何让博文列表不显示全部内容"></a>4.11.2. 如何让博文列表不显示全部内容</h4><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？ 答案是在合适的位置加上 <code>&lt;!--more--&gt;</code> 即可，例如：</p>
<p># 前言</p>
<p>使用 github&nbsp;pages 服务搭建博客的好处有：</p>
<p>1.&nbsp;全是静态文件，访问速度快；<br>2.&nbsp;免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；<br>3.&nbsp;可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于 github 的；</p>
<!--more-->

<p>4.&nbsp;数据绝对安全，基于 github 的版本管理，想恢复到哪个历史版本都行；<br>5.&nbsp;博客内容可以轻松打包、转移、发布到其它平台；<br>6. 等等；</p>
<p>最终效果： <a href="https://i.loli.net/2020/02/14/Zgsaxid5ABepVqt.png"><img src="https://i.loli.net/2020/02/14/Zgsaxid5ABepVqt.png"></a></p>
<h2 id="5、最终效果"><a href="#5、最终效果" class="headerlink" title="5、最终效果"></a>5、最终效果</h2><p>可以访问我的 <code>Git</code> 博客来查看效果： <span class="exturl" data-url="aHR0cHM6Ly9mdW5neXVhLmdpdGh1Yi5pby8=">https://fungyua.github.io<i class="fa fa-external-link-alt"></i></span> 不过呢，其实这个博客我只是拿来玩一玩的，没打算真的把它当博客，因为我已经有一个自己的博客了，哈哈！正因如此，本文仅限入门学习，关于 <code>hexo</code> 搭建个人博客的更高级玩法大家可以另找教程。</p>
<h2 id="6、参考"><a href="#6、参考" class="headerlink" title="6、参考"></a>6、参考</h2><p><span class="exturl" data-url="aHR0cDovL3d3dy5jbmJsb2dzLmNvbS96aGNuY24vcC80MDk3ODgxLmh0bWw=">http://www.cnblogs.com/zhcncn/p/4097881.html<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cDovL3d3dy5qaWFuc2h1LmNvbS9wLzA1Mjg5YTRiYzhiMg==">http://www.jianshu.com/p/05289a4bc8b2<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cDovL2Jsb2cuaGFvamkubWUvYnVpbGQtYmxvZy13ZWJzaXRlLWJ5LWhleG8tZ2l0aHViLmh0bWw=">http://blog.haoji.me/build-blog-website-by-hexo-github.html<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>技巧</tag>
        <tag>Git</tag>
        <tag>Hexo</tag>
        <tag>Nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>canvas 笔记</title>
    <url>/Windows/canvas-note/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h1 id="1-canvas-基本"><a href="#1-canvas-基本" class="headerlink" title="1.canvas 基本"></a>1.canvas 基本</h1><ol>
<li><p>插入 <code>canvas</code> &nbsp; &nbsp; &nbsp; &nbsp;在默认情况下，canvas 元素创建的画布区域大小为宽 <code>300</code> 像素、高 <code>150</code> 像素，可以使用 <code>width</code> 和 <code>height</code> 属性自定义其宽度和高度。</p>
</li>
<li><p>绘制图形的基本方法 &nbsp; &nbsp; &nbsp; &nbsp;<code>canvas</code> 元素本身并不能实现绘制功能，绘制图形的工作需要由 <code>JavaScript</code> 来完成。</p>
<blockquote>
<p><strong>【操作步骤】</strong> (1) 在 <code>HTML5</code> 页面中添加 <code>canvas</code> 元素，必须定义 <code>canvas</code> 元素的 <code>id</code> 属性值以便 <code>JavaScript</code> 调用。 <code>&lt;canvas id="myCanvas" width="200px" height="100px"&gt;&lt;/canvas&gt;</code> (2) 在 JavaScript 脚本中使用 <code>document.getElementById()</code> 方法，根据 <code>canvas</code> 元素的 <code>id</code> 来获取 <code>canvas</code>。 <code>var c = document.getElementById("myCanvas"); (3) 通过</code> canvas <code>元素的</code> getContext() <code>方法获取画布上下文</code> (context)<code>，即创建</code> context <code>对象，以获取允许进行绘制的</code> 2D 环境<code>。</code>var context = c.getContext (“2d”); 如果让 <code>canvas</code> 元素支持 3D，则 <code>getContext()</code> 方法需要使用 <code>"3d"</code> 这个字符串参数。 (4) 使用 <code>JavaScript</code> 进行绘制。例如，使用一下代码可以绘制一个位于画布中央的矩形。 【示例】 下面给出完整的示例代码。</p>
</blockquote>
</li>
</ol>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="utf-8"&gt;
        &lt;title&gt;&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;canvas id="myCanvas" style="border: 1px solid;" width="200" height="100"&gt;&lt;/canvas&gt;
        &lt;script type="text/javascript"&gt;
            var c = document.getElementById("myCanvas");
            var context = c.getContext("2d");
            context.fillStyle = "#FF00FF";
            context.fillRect(50,25,100,50);
        &lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;</code></pre>
<ol start="3">
<li>使用 canvas &nbsp; &nbsp; &nbsp; &nbsp;在 <code>canvas</code> 中绘制图形时，需要为图形指定位置，<code>fillRect(50,25,100,50)</code> 中的前两个参数便是用于指定图形的 x 轴和 y 轴坐标值。在 <code>canvas</code> 中，坐标原点 <code>(0,0)</code> 位于 <code>canvas</code> 的左上方，x 轴水平向右延伸，y 轴垂直向下延伸。 <img src="https://s2.ax1x.com/2019/09/24/uAX38I.png" title="图 1.1 canvas默认坐标点">  <strong>注意：</strong> &gt; canvas 元素可以实现非常强大的绘图功能，也可以设计复杂的动画演示功能，但是如果 HTML 页面中有比 canvas 元素更合适的元素存在，则建议不要首先选用 canvas 元素。例如，用 canvas 元素渲染 HTML 页面的标题样式标签（如 h1 、 h2 等）便不太合适。</li>
</ol>
<h1 id="2-绘制图形"><a href="#2-绘制图形" class="headerlink" title="2.绘制图形"></a>2. 绘制图形</h1><ol>
<li>绘制直线 绘制直线需要用到 2 个方法：<code>moveTO()</code>、<code>lineTO()</code>。</li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>如何给 Ubuntu 系统清理垃圾</title>
    <url>/Linux/clean-up-the-garbage-for-ubuntu-system/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>使用 <strong>Windows</strong> 的同学都知道，我们可以利用各种安全卫士以及系统清理工具来清除系统运行时产生的系统垃圾。那么当你禁不住开源系统的诱惑，开始尝试 <strong>Ubuntu</strong> 系统时，是不是经常在思考该如何在 <strong>Ubuntu</strong> 下清理系统垃圾呢？下面，就让跟着本文来给你的 <strong>Ubuntu</strong> 系统来一次大扫除吧。 方法 / 步骤</p>
<h2 id="1、清理下载的软件包"><a href="#1、清理下载的软件包" class="headerlink" title="1、清理下载的软件包"></a>1、清理下载的软件包</h2><p>不过与你想象的可能有很大的不同，<strong>Ubuntu</strong> 系统在运行时是不会产生无用垃圾的。这一点与 <strong>Windows</strong> 系统有很大的不同。但是我们在升级系统时，软件管理器下载的软件包，系统则不会自动删除，其实这样做也是考虑到你可能会再次安装从而加快再次安装的速度考虑。当然了，我们普通用户，一旦下载安装完毕，其安装包也就没有存在的必要了，当然如果你是要安装更新并管理一大堆电脑的系统管理员就另当别论咯。更何况，我们再次安装时，只要你选择了一个合适的软件源，那下载速度一样是飞快的。因此，我们隔一段时间就可清理一下 <code>apt-get</code> 等软件管理器下载下来的安装包咯。</p>
<p>我们先看一下，这些安装包占了多大空间吧。按快捷键 ctrl+alt+t 打开终端，输入命令<br>du –h /var/cache/apt/archives<br>回车之后，我们就可以看到安装包所占用的空间咯。<br>那我们就来删除这些软件包吧。若你生性小心谨慎，那就只删除那些你已经将其卸载掉的软件的软件。删除你已经卸载掉的软件包的命令为<br>sudo　apt-get autoclean<br>若你想清理出更多的空间，而且网速又比较快的话，那你大可以把电脑上存储的安装包全部卸载咯，命令为<br>sudo　apt-get clean<br>还有一类软件包，我们每个人都应该删除，那就是你已经卸载了，但是一些只有它依赖而别的软件包都不需要的软件包还留在你的系统里。说简单点就是，类似于你在 windows 系统中卸载软件时残留在系统里的垃圾咯。卸载这些孤立包的命令为<br>sudo　apt-get autoremove</p>
<h2 id="2、删除不用的老旧内核"><a href="#2、删除不用的老旧内核" class="headerlink" title="2、删除不用的老旧内核"></a>2、删除不用的老旧内核</h2><blockquote>
<p>若你的系统更新过好多次，如 <strong>Ubuntu</strong>，在系统升级的过程中，其所使用 <strong>Linux</strong> 内核也可能更新。因此，升级多次后，你的 <strong>boot</strong> 文件夹就会变得比较大，其原因就是因为虽然系统更新升级了新内核，但是老内核依然留在了你的系统中。也许你会说系统太笨了，不知道升级了新的就该把老的删除吗？实际上，不删除掉老的内核也是一种安全测试。虽然说，系统升级包在释放出之前已经进行了广泛的测试，但依然可能有意外存在，所以才不删除掉老的内核，以便于使用新升级的内核无法启动时，你能马上使用老内核进行启动，不至于导致你无法进入系统的悲剧。不过在你升级完毕，重启后能进入系统后，说明新内核已经很好的兼容了你的电脑，那么你就可以放心大胆的删除掉老内核咯，也好腾出更多空间让你使用哦。</p>
</blockquote>
<p>不过老内核时一定要小心，那就是 —— 千万不要删错咯。所以删除之前要先看一看你现在正在使用的内核是哪一个。方法是在终端中输入命令<br>uname –r，然后看其显示的内核版本是多少。看准了自己使用的内核后，你就可以放心大胆的删除那些不用的老内核。<br>打开终端，敲入命令 dpkg –get-selections | grep linux<br>然后将不用的内核文件 image、头文件 headers 删除掉就可以咯。在终端中输入命令<br>sudo apt-get purge 内核文件名 头文件名<br>删除内核后，就可以省下很多空间哦<br>3.3</p>
<h2 id="3、清理浏览器的缓存文件。"><a href="#3、清理浏览器的缓存文件。" class="headerlink" title="&nbsp;3、清理浏览器的缓存文件。"></a>&nbsp;3、清理浏览器的缓存文件。</h2><blockquote>
<p>我们在 Ubuntu 中经常使用的浏览器当然是火狐浏览器咯，在我们浏览网页时，它会把网页缓存到本地，因此会在本地保留一些缓存文件，若你是个有洁癖的人，或者喜欢给系统清理垃圾的话，我们也可以删除火狐浏览器的缓存。 方法是打开火狐的首选项 - &gt; 隐私与安全 - &gt; Cookie 和网站数据，点击右边的<strong>清除数据</strong>按钮就可以咯，如下图所示：</p>
</blockquote>
<p><a href="https://i.loli.net/2020/02/21/VYcCDTBArQfnyGe.png"><img src="https://i.loli.net/2020/02/21/VYcCDTBArQfnyGe.png"></a></p>
<h2 id="4、清除已卸载软件的残留配置文件。"><a href="#4、清除已卸载软件的残留配置文件。" class="headerlink" title="4、清除已卸载软件的残留配置文件。"></a>4、清除已卸载软件的残留配置文件。</h2><p>在我们使用系统的过程中，有时候需要把不用的软件给卸载掉。若你无需再次安装该软件，可以把软件的配置文件也清理掉，此时在卸载软件的时候，尽可能使用 <code>sudo apt-get purge xxxxx（xxxx为要卸载的软件名）</code>，这样可以将软件以及它的配置文件均卸载干净。不过由于这样或那样的原因，系统中有时候会残留下某些已卸载软件的配置文件。如果想清除掉这些残留的配置文件，我们可以使用一款常见的软件来完成 —— 新力得软件包管理器（<strong>synaptic</strong>）来清除已卸载软件的残留配置文件。 这个方法适用于多种 <strong>Ubuntu</strong> 以及 <strong>Debain</strong> 系的 <strong>Linux</strong> 系统，如 <strong>Mint</strong> 以及深度 <strong>Linux</strong> 系统 <em>原文地址：<span class="exturl" data-url="aHR0cHM6Ly9qaW5neWFuLmJhaWR1LmNvbS9hcnRpY2xlL2U2Yzg1MDNjMWUwNWQ2ZTU0ZjFhMTgwOC5odG1s">https://jingyan.baidu.com/article/e6c8503c1e05d6e54f1a1808.html<i class="fa fa-external-link-alt"></i></span></em></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>canvas 笔记</title>
    <url>/uncategorized/canvas%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note default"><p>canvas 笔记</p>
</div>

<a id="more"></a>

<hr>
<h1 id="1-canvas-基本"><a href="#1-canvas-基本" class="headerlink" title="1.canvas 基本"></a>1.canvas 基本</h1><br>

<ol>
<li><p>插入 <code>canvas</code><br>&nbsp; &nbsp; &nbsp; &nbsp;在默认情况下，canvas 元素创建的画布区域大小为宽 <code>300</code> 像素、高 <code>150</code> 像素，可以使用 <code>width</code> 和 <code>height</code> 属性自定义其宽度和高度。  </p>
</li>
<li><p>绘制图形的基本方法<br>&nbsp; &nbsp; &nbsp; &nbsp;<code>canvas</code> 元素本身并不能实现绘制功能，绘制图形的工作需要由 <code>JavaScript</code> 来完成。  </p>
<blockquote>
<p><b>【操作步骤】</b><br>(1) 在 <code>HTML5</code> 页面中添加 <code>canvas</code> 元素，必须定义 <code>canvas</code> 元素的 <code>id</code> 属性值以便 <code>JavaScript</code> 调用。<br><code>&lt;canvas id="myCanvas" width="200px" height="100px"&gt;&lt;/canvas&gt;</code><br>(2) 在 JavaScript 脚本中使用 <code>document.getElementById()</code> 方法，根据 <code>canvas</code> 元素的 <code>id</code> 来获取 <code>canvas</code>。<br><code>var c = document.getElementById("myCanvas"); (3) 通过</code> canvas <code>元素的</code> getContext() <code>方法获取画布上下文</code> (context)<code>，即创建</code> context <code>对象，以获取允许进行绘制的</code> 2D 环境<code>。 </code>var context = c.getContext(“2d”);<code> </code> 如果让 <code>canvas</code> 元素支持 3D，则 <code>getContext()</code> 方法需要使用 <code>"3d"</code> 这个字符串参数。<br>(4) 使用 <code>JavaScript</code> 进行绘制。例如，使用一下代码可以绘制一个位于画布中央的矩形。<br>【示例】 下面给出完整的示例代码。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset="utf-8"&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;canvas id="myCanvas" style="border: 1px solid;" width="200" height="100"&gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;script type="text/javascript"&gt;</span><br><span class="line">        var c = document.getElementById("myCanvas");</span><br><span class="line">        var context = c.getContext("2d");</span><br><span class="line">        context.fillStyle = "#FF00FF";</span><br><span class="line">        context.fillRect(50,25,100,50);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
</li>
<li><p>使用 canvas<br>&nbsp; &nbsp; &nbsp; &nbsp;在 <code>canvas</code> 中绘制图形时，需要为图形指定位置，<code>fillRect(50,25,100,50)</code> 中的前两个参数便是用于指定图形的 x 轴和 y 轴坐标值。在 <code>canvas</code> 中，坐标原点 <code>(0,0)</code> 位于 <code>canvas</code> 的左上方，x 轴水平向右延伸，y 轴垂直向下延伸。<br><img src="https://s2.ax1x.com/2019/09/24/uAX38I.png" title="图 1.1 canvas默认坐标点"><br><i class="fa fa-bullhorn" aria-hidden="true"></i> <b>注意：</b>  </p>
<pre><code> canvas 元素可以实现非常强大的绘图功能，也可以设计复杂的动画演示功能，但是如果 HTML 页面中有比 canvas 元素更合适的元素存在，则建议不要首先选用 canvas 元素。例如，用 canvas 元素渲染 HTML 页面的标题样式标签（如 h1 、 h2 等）便不太合适。</code></pre>
</li>
</ol>
<h1 id="2-绘制图形"><a href="#2-绘制图形" class="headerlink" title="2.绘制图形"></a>2. 绘制图形</h1><ol>
<li>绘制直线<br>绘制直线需要用到 2 个方法：<code>moveTO()</code>、<code>lineTO()</code>。 </li>
</ol>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>值得推荐的开源 cms 系统推荐</title>
    <url>/CMS/cms-sys/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>初次接触 WordPress，当时是使用 WordPress 建立的一个个人独立博客，后来才知道 WordPress 是一种开源的 cms 系统，到现在工作 2 年了也接触了很多开源的 cms 系统，特意整理了一下常见的开源 cms 系统。</p>
<ol>
<li><p>WordPress</p>
<p><a href="https://i.loli.net/2020/01/29/nLoakAcUXP7iTQ5.jpg"><img src="https://i.loli.net/2020/01/29/nLoakAcUXP7iTQ5.jpg"></a>WordPress 是一种使用 PHP 语言开发的博客平台，用户可以在支持 PHP 和 MySQL 数据库的服务器上架设属于自己的网站。WordPress 的特点便是开源、简单、易用。而且有很多主题，即时小白用户也能很快上手。</p>
</li>
<li><p>Dedecms</p>
<p><a href="https://i.loli.net/2020/01/29/VxGYuTgH9hS61MB.png"><img src="https://i.loli.net/2020/01/29/VxGYuTgH9hS61MB.png"></a>织梦 CMS 是集简单、健壮、灵活、开源几大特点的开源内容管理系统，是国内开源 CMS 的品牌，目前程序安装量已达七十万。</p>
</li>
<li><p>PHPCMS</p>
<p><a href="https://i.loli.net/2020/01/29/ckUEBWHTQOfXI52.jpg"><img src="https://i.loli.net/2020/01/29/ckUEBWHTQOfXI52.jpg"></a>PHPCMS 采用 PHP5+MYSQL 做为技术基础进行开发。PHPCMS 采用 OOP（面向对象）方式进行基础运行框架搭建。模块化开发方式做为功能开发形式。框架易于功能扩展，代码维护，的二次开发能力，可满足所有网站的应用需求。</p>
</li>
<li><p>动易 cms 内容管理系统</p>
<p><a href="https://i.loli.net/2020/01/29/47mOT13jFdBSPxb.jpg"><img src="https://i.loli.net/2020/01/29/47mOT13jFdBSPxb.jpg"></a>动易 cms 内容管理系统是业界基于微软.NET2.0 平台，采用 ASP.NET 2.0 进行分层开发的内容管理系统。具有灵活的产品架构、严密的安全性、无限的扩展性和伸缩性，能够高效构建起各种信息资讯类网站、企业网站、门户网站等多种网站应用型平台。</p>
</li>
<li><p>ASPCMS</p>
<p><a href="https://i.loli.net/2020/01/29/Io1GNzDVSCRydqn.jpg"><img src="https://i.loli.net/2020/01/29/Io1GNzDVSCRydqn.jpg"></a>ASPCMS 是由上谷网络开发的全新内核的开源企业建站系统，能够胜任企业多种建站需求，并且支持模版自定义、支持扩展插件等等，能够在短时间内完成企业建站。</p>
</li>
<li><p>Joomla</p>
<p><a href="https://i.loli.net/2020/01/29/7vbctETnCqx3aF1.jpg"><img src="https://i.loli.net/2020/01/29/7vbctETnCqx3aF1.jpg"></a>Joomla 是一套获得过多个奖项的内容管理系统 (Content Management System, CMS)。Joomla! 采用 PHP+MySQL 数据库开发，可运行。在 Linux、Windows、MacOSX、Solaris 等各种平台上。</p>
</li>
<li><p>帝国 cms</p>
<p><a href="https://i.loli.net/2020/01/29/uc5lk6aYWm42RbK.jpg"><img src="https://i.loli.net/2020/01/29/uc5lk6aYWm42RbK.jpg"></a>帝国 CMS 采用更先进构架、更强劲内核，使系统更加高效稳定，让网站发展无后顾之忧。除了高性能的帝国 CMS 全新构架外，模块更加完善，功能更加强大。</p>
</li>
<li><p>Cody</p>
<p><a href="https://i.loli.net/2020/01/29/ckUEBWHTQOfXI52.jpg"><img src="https://i.loli.net/2020/01/29/ckUEBWHTQOfXI52.jpg"></a>Cody 结合了 Nodejs 和 CMS，是基于 JavaScript 的内容管理系统。作者有超过 15 年的 CMS 开发经验，在用户体验和性能上都做得很好，有很大的潜力。</p>
</li>
<li><p>Drupal</p>
<p><a href="https://i.loli.net/2020/01/29/538xza19pogWibh.jpg"><img src="https://i.loli.net/2020/01/29/538xza19pogWibh.jpg"></a>Drupal 是一个开源的内容管理系统 (CMS) 平台，它是用 PHP 写成的。主要用于构造提供多种功能和服务的动态网站，这些功能包括用户管理 (UserAdministration)、发布工作流 (Publishing Workflow)、讨论、新闻聚合 (NewsAggregation)、元数据 (Metadata) 操作。</p>
</li>
<li><p>InfoGlue</p>
<p>infoglue 是一个高级的、可扩展的、健壮的内容管理系统，完全用 Java 开发。重要的功能包括完全支持多语言，站点之间良好的重用，以及广泛的集成能力。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>CMS</category>
      </categories>
      <tags>
        <tag>咨询</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌云 ssh 开启 root 密码登录</title>
    <url>/Linux/google-cloud-ssh-enable-root-password-login/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><ol>
<li><p>先选择从浏览器打开 ssh 连接服务器  </p>
<blockquote>
<p>连接登录成功后，输入以下命令</p>
</blockquote>
<pre><code>sudo -i #切换到root
passwd #修改密码</code></pre>
</li>
</ol>
<pre><code>然后会要求输入新密码，然后再重复一次密码，输入密码的时候不会显示出来，所以直接输入密码，然后回车，再然后重复输入密码回车。

修改`root`密码完成</code></pre>
<ol start="2">
<li><p>接着修改 SSH 配置文件 <code>/etc/ssh/sshd_config</code></p>
<pre><code>vim /etc/ssh/sshd_config #编辑文件</code></pre>
</li>
</ol>
<pre><code>找到以下内容并修改

    PermitRootLogin yes #默认为no，需要开启root用户访问改为yes
    PasswordAuthentication yes #默认为no，改为yes开启密码登陆


修改完成后，再下按 esc 键，然后再输入

    :wq #保存并退出</code></pre>
<ol start="3">
<li><p>最后重启下服务器即可  </p>
<pre><code>reboot #重启服务器</code></pre>
</li>
</ol>
<h2 id="登录示例"><a href="#登录示例" class="headerlink" title="登录示例"></a>登录示例</h2><h3 id="外部-ip-地址"><a href="#外部-ip-地址" class="headerlink" title="外部 ip 地址"></a>外部 ip 地址</h3><p><a href="https://i.loli.net/2020/02/19/uWTcldwva4kqFI1.png"><img src="https://i.loli.net/2020/02/19/uWTcldwva4kqFI1.png" alt="外部id地址"></a></p>
<p>外部 id 地址</p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p><a href="https://i.loli.net/2020/02/19/nlQrOKAhC2pNZ4m.png"><img src="https://i.loli.net/2020/02/19/nlQrOKAhC2pNZ4m.png" alt="登录示例"></a></p>
<p>登录示例</p>
<p><a href="https://i.loli.net/2020/02/19/vfjo32UQz4lhgmn.png"><img src="https://i.loli.net/2020/02/19/vfjo32UQz4lhgmn.png" alt="登录示例"></a></p>
<p>登录示例</p>
<h3 id="如无法连接可以查看下防火墙规则"><a href="#如无法连接可以查看下防火墙规则" class="headerlink" title="如无法连接可以查看下防火墙规则"></a>如无法连接可以查看下防火墙规则</h3><p><a href="https://i.loli.net/2020/02/19/fxOI7CFEleVHWyY.png"><img src="https://i.loli.net/2020/02/19/fxOI7CFEleVHWyY.png" alt="防火墙规则"></a></p>
<p>防火墙规则</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>技巧</tag>
        <tag>Cloud</tag>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 HBuilderX 编辑 PHP 时怎么使用 HTML 代码助手</title>
    <url>/Windows/hbuilderx-code/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p>在使用 <code>HBuilderX</code> 编辑 <code>PHP</code> 代码时，我们经常会使用到 <code>HTML</code> 和 <code>JavaScript</code> 代码，在正常的 HTML 文件中我们可以直接打 <code>HTML</code>，代码助手会自动识别，但如果是 <code>PHP</code> 文件时是不会自动识别的，这时候就需要用到<code>语法关联</code>工具。</p>
</blockquote>
<h3 id="1-打开要编辑的PHP文件"><a href="#1-打开要编辑的PHP文件" class="headerlink" title="1.打开要编辑的PHP文件"></a>1. 打开要编辑的 PHP 文件</h3><h3 id="2-点击语法关联助手"><a href="#2-点击语法关联助手" class="headerlink" title="2.点击语法关联助手"></a>2. 点击语法关联助手</h3><p><img src="https://s2.ax1x.com/2019/09/27/uK2fE9.png"></p>
<h3 id="3-把它改成HTML或其他语法即可"><a href="#3-把它改成HTML或其他语法即可" class="headerlink" title="3.把它改成HTML或其他语法即可"></a>3. 把它改成 HTML 或其他语法即可</h3><p><img src="https://s2.ax1x.com/2019/09/27/uKRYP1.png"></p>
<blockquote>
<p>其他语法也一样</p>
</blockquote>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>HBuilderx 快捷键</title>
    <url>/Windows/hbuilderx-shortcutkey/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h3 id="1-项目管理器"><a href="#1-项目管理器" class="headerlink" title="1.项目管理器"></a>1. 项目管理器</h3><p>重命名文件（焦点在项目管理器中）:<code>f2</code> 复制文件（焦点在项目管理器中）:<code>ctrl+c</code> 粘贴文件（焦点在项目管理器中）:<code>ctrl+v</code><br>删除文件到回收站（焦点在项目管理器中）:<code>delete</code></p>
<h3 id="2-标签卡"><a href="#2-标签卡" class="headerlink" title="2.标签卡"></a>2. 标签卡</h3><p>新建标签卡（默认 md）:<code>ctrl+t</code><br>关闭当前标签卡:<code>ctrl+w</code><br>关闭当前标签卡:<code>ctrl+f4</code><br>关闭所有标签卡:<code>ctrl+shift+w</code><br>关闭其他文件:<code>ctrl+q</code><br>显示左边的标签卡:<code>ctrl+PgUp</code><br>显示右边的标签卡:<code>ctrl+PgDown</code><br>重开已关闭标签卡:<code>ctrl+shift+t</code><br>切换最近的标签卡:<code>ctrl+tab</code><br>切换到第 1 个标签卡:<code>alt+1</code><br>切换到第 2 个标签卡:<code>alt+2</code><br>切换到第 3 个标签卡:<code>alt+3</code><br>切换到第 4 个标签卡:<code>alt+4</code><br>切换到第 5 个标签卡:<code>alt+5</code><br>切换到第 6 个标签卡:<code>alt+6</code><br>切换到第 7 个标签卡:<code>alt+7</code><br>切换到第 8 个标签卡:<code>alt+8</code><br>切换到第 9 个标签卡:<code>alt+9</code><br>切换到最末尾的标签卡:<code>alt+0</code><br>往左移动一个标签卡:<code>ctrl+shift+PgUp</code><br>往右移动一个标签卡:<code>ctrl+shift+PgDown</code></p>
<h3 id="3-文件"><a href="#3-文件" class="headerlink" title="3.文件"></a>3. 文件</h3><p>新建:<code>ctrl+n</code><br>打开外部文件:<code>ctrl+o</code><br>打开收藏菜单:<code>alt+shift+f</code><br>保存:<code>ctrl+s</code><br>另存为:<code>ctrl+shift+s</code><br>全部保存:<code>ctrl+alt+s</code></p>
<h3 id="4-行操作"><a href="#4-行操作" class="headerlink" title="4.行操作"></a>4. 行操作</h3><p>向下插入行:<code>ctrl+enter</code><br>向下插入行:<code>ctrl+return</code><br>向上插入行:<code>ctrl+shift+enter</code><br>向上插入行:<code>ctrl+shift+return</code><br>反回车，即把光标前内容移到下一行:<code>shift+enter</code><br>反回车，即把光标前内容移到下一行:<code>shift+return</code><br>上移一行:<code>ctrl+up</code><br>下移一行:<code>ctrl+down</code></p>
<h3 id="5-删除"><a href="#5-删除" class="headerlink" title="5.删除"></a>5. 删除</h3><p>向左删除:<code>backspace</code><br>向右删除:<code>delete</code><br>向左删除词:<code>ctrl+backspace</code><br>向右删除词:<code>ctrl+delete</code><br>删到行首:<code>shift+backspace</code><br>删到行尾:<code>shift+delete</code><br>删除行:<code>ctrl+d</code></p>
<h3 id="6-列表符操作"><a href="#6-列表符操作" class="headerlink" title="6.列表符操作"></a>6. 列表符操作</h3><p>插入 - 无序列表符:<code>ctrl+alt+-</code><br>插入 * 无序列表符:<code>ctrl+alt+8</code><br>插入 + 无序列表符:<code>ctrl+alt+=</code><br>插入 &gt; 引用列表符:<code>ctrl+alt+shift+.</code><br>插入有序列表符:<code>ctrl+alt+1</code><br>插入任务列表符:<code>ctrl+alt+[</code><br>插入已完成任务列表符:<code>ctrl+alt+]</code></p>
<h3 id="7-剪贴板"><a href="#7-剪贴板" class="headerlink" title="7.剪贴板"></a>7. 剪贴板</h3><p>复制:<code>ctrl+c</code><br>复制文件路径:<code>ctrl+shift+c</code><br>重复插入选区或当前行:<code>ctrl+insert</code><br>重复插入选区或当前行（备份用于没有 insert 键的键盘）:<code>ctrl+shift+r</code><br>剪切:<code>ctrl+x</code><br>粘贴:<code>ctrl+v</code><br>粘贴为 HTML:<code>ctrl+shift+v</code><br>从历史粘贴板粘贴（注意解除 evernote 的快捷键占用）:<code>ctrl+alt+v</code><br>交换字符、选区或行。2 个选区或 2 行是彼此交换；不是 2 个选区时是交换光标前后的字母:<code>ctrl+shift+x</code></p>
<h3 id="8-撤销"><a href="#8-撤销" class="headerlink" title="8.撤销"></a>8. 撤销</h3><p>撤销:<code>ctrl+z</code><br>重做:<code>ctrl+y、ctrl+shift+z</code><br>撤销一个新光标或选区:<code>alt+shift+z</code></p>
<h3 id="9-语言"><a href="#9-语言" class="headerlink" title="9.语言"></a>9. 语言</h3><p>格式化:<code>ctrl+k</code><br>格式化（兼容老版 HBuilder 快捷键，注意解除搜狗输入法全局快捷键）:<code>ctrl+shift+f</code><br>合并行（反格式化）:<code>ctrl+shift+k</code><br>合并行（兼容老版 HBuilder 快捷键）:<code>ctrl+alt+j</code><br>注释 / 反注释:<code>ctrl+/</code><br>块注释:<code>ctrl+shift+/</code><br>注释菜单 (含条件编译注释):<code>ctrl+alt+/</code></p>
<h3 id="10-包围"><a href="#10-包围" class="headerlink" title="10.包围"></a>10. 包围</h3><p>包围:<code>ctrl+]</code><br>反包围:<code>ctrl+shift+]</code><br>加粗（html、md 生效）:<code>ctrl+b</code><br>全部字母大写:<code>alt+shift+u</code><br>全部字母小写:<code>alt+shift+l</code><br>首字母大写:<code>alt+shift+t</code><br>激活代码助手:<code>alt+/</code><br>激活方法参数提示:<code>alt+shift+/</code><br>缩进:<code>tab</code><br>反缩进:<code>shift+tab</code></p>
<h3 id="11-选择"><a href="#11-选择" class="headerlink" title="11.选择"></a>11. 选择</h3><p>全选:<code>ctrl+a</code><br>向左选字:<code>shift+left</code><br>向右选字:<code>shift+right</code><br>向上选行:<code>shift+up</code><br>向下选行:<code>shift+down</code><br>向左选词:<code>ctrl+shift+left</code><br>向右选词:<code>ctrl+shift+right</code><br>选至软行首（连续按依次切换自动换行的行首、缩进后的行首、真行首）:<code>shift+home</code><br>选至软行尾（连续按依次切换自动换行的行尾、真行尾）:<code>shift+end</code><br>选至上一页:<code>shift+PgUp</code><br>选至下一页:<code>shift+PgDown</code><br>选至文档首:<code>ctrl+shift+home</code><br>选至文档尾:<code>ctrl+shift+end</code><br>选择当前词或下一个相同词:<code>ctrl+e</code><br>选择所有相同词:<code>ctrl+alt+e、alt+f3</code><br>跳过当前选择，选中下一个相同词:<code>alt+shift+e</code><br>选择相同语法词（注意解除搜狗输入法全局占用）:<code>ctrl+shift+e</code><br>选择括号内字符。可用双击括号替代:<code>ctrl+[</code><br>选择行。也可单击行号或三击行:<code>ctrl+l</code><br>选择行 (不含首尾空白字符)。也可双击行尾:<code>ctrl+shift+l</code><br>放大选区:<code>ctrl+=</code><br>向 2 侧扩大选择:<code>alt+shift+right</code><br>由 2 侧向内减少选择:<code>alt+shift+left</code><br>向上列选择:<code>ctrl+alt+up</code><br>向下列选择:<code>ctrl+alt+down</code><br>每个选区前后设置光标:<code>ctrl+\</code><br>每行行首设置光标:<code>ctrl+shift+\</code></p>
<h3 id="12-查找"><a href="#12-查找" class="headerlink" title="12.查找"></a>12. 查找</h3><p>查找文件:<code>ctrl+p</code><br>本文档内查找字符串:<code>ctrl+f</code><br>目录内查找字符串:<code>ctrl+alt+f</code><br>替换:<code>ctrl+h</code><br>查找下一个字符串:<code>f3</code><br>查找上一个字符串:<code>shift+f3</code></p>
<h3 id="13-跳转"><a href="#13-跳转" class="headerlink" title="13.跳转"></a>13. 跳转</h3><p>光标向左:<code>alt+h、left</code><br>光标向下:<code>alt+j、down</code><br>光标向上:<code>alt+k、up</code><br>光标向右:<code>alt+l、right</code><br>光标向左一词:<code>ctrl+left</code><br>光标向右一词:<code>ctrl+right</code><br>光标向左一个驼峰单词:<code>ctrl+alt+left</code><br>光标向右一个驼峰单词:<code>ctrl+alt+right</code><br>光标到软行首（连续按依次切换自动换行的行首、缩进后的行首、真行首）:<code>home</code><br>光标到软行尾（连续按依次切换自动换行的行尾、真行尾）:<code>end</code><br>光标到上个段落（空行为分割段落）:<code>ctrl+alt+PgUp</code><br>光标到下个段落（空行为分割段落）:<code>ctrl+alt+PgDown</code><br>光标到上一页:<code>PgUp</code><br>光标到下一页:<code>PgDown</code><br>光标到页首:<code>ctrl+home</code><br>光标到页尾:<code>ctrl+end</code><br>转到定义:<code>alt+d、f12</code><br>分栏转到定义:<code>alt+shift+d、shift+f12</code><br>跳转到行:<code>ctrl+g</code><br>跳转到配对的括号:<code>alt+[</code><br>光标后退:<code>alt+left</code><br>光标前进:<code>alt+right</code><br>设置 / 取消书签:<code>ctrl+f2</code>&nbsp; 下一个书签（光标在编辑器区域）:<code>f2</code> 上一个书签（光标在编辑器区域）:<code>shift+f2</code><br>清除所有书签:<code>ctrl+shift+f2</code><br>下一个验证错误:<code>f4</code><br>上一个验证错误:<code>shift+f4</code><br>折叠单行:<code>alt+-</code><br>展开单行:<code>alt+=</code><br>折叠子行:<code>alt+shift+-</code><br>展开子行:<code>alt+shift+=</code><br>折叠所有行:<code>alt+ctrl+shift+-</code><br>展开所有行:<code>alt+ctrl+shift+=</code><br>折叠其他区域:<code>alt+shift+o</code></p>
<h3 id="14-视图"><a href="#14-视图" class="headerlink" title="14.视图"></a>14. 视图</h3><p>置焦到编辑器区域:<code>alt+n</code><br>置焦到项目管理器:<code>alt+shift+q</code><br>显示 / 隐藏项目管理器:<code>alt+q</code><br>显示 / 隐藏控制台:<code>alt+x</code><br>显示 / 控制台:<code>alt+c</code><br>显示 / 隐藏工具栏:<code>alt+o</code><br>显示 / 隐藏内置浏览器:<code>alt+p</code><br>显示 / 隐藏大纲:<code>alt+w</code><br>增大字体【ctrl + 鼠标滚动向上】:<code>ctrl+shift+=</code><br>减小字体【ctrl + 鼠标滚动向下】:<code>ctrl+shift+-</code><br>单栏:<code>alt+shift+1</code><br>左右 2 栏:<code>alt+shift+2</code><br>左右 3 栏:<code>alt+shift+3</code><br>置焦到下一个分栏:<code>alt+.</code><br>置焦到上一个分栏:<code>alt+,</code><br>新建 HBuilder 窗体:<code>ctrl+shift+n</code><br>多窗口切换快捷键 1:<code>ctrl+f6</code><br>多窗口切换快捷键 2:`alt+``</p>
<h3 id="15-运行"><a href="#15-运行" class="headerlink" title="15.运行"></a>15. 运行</h3><p>运行:<code>ctrl+r</code><br>重新运行:<code>ctrl+f5</code><br>停止运行:<code>ctrl+shift+f5</code></p>
<h3 id="16-鼠标配合快捷键"><a href="#16-鼠标配合快捷键" class="headerlink" title="16.鼠标配合快捷键"></a>16. 鼠标配合快捷键</h3><p>添加多光标:<code>ctrl+左键单击</code><br>删除多光标:<code>ctrl+右键单击</code><br>添加多选区:<code>ctrl+左键拖选</code><br>如果点击到了智能双击区域比如 if 块，会添加到选区里:<code>ctrl+左键双击</code><br>转到定义 / 打开链接:<code>alt+左键单击</code><br>分栏转到定义 / 打开链接:<code>alt+ctrl+左键单击</code><br>列选择:<code>alt+左键拖选</code><br>缩放字体:<code>ctrl+滚轮</code><br>横向滚动:<code>alt+滚轮</code><br>垂直滚动一屏:<code>shift+滚轮</code><br>横向滚动一屏:<code>ctrl+alt+滚轮</code></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML 表单笔记</title>
    <url>/Code/html-form-note/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h1 id="1-常用标签"><a href="#1-常用标签" class="headerlink" title="1.常用标签"></a>1. 常用标签</h1><ol>
<li><p>input</p>
<blockquote>
<p>text (文本输入域) password (密码输入域) radio (单选框) checkbox (多选框) email () file () hidden ()</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里巴巴矢量图批量下载</title>
    <url>/Windows/iconfontalldownload/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p>在<span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v">阿里巴巴矢量图标库<i class="fa fa-external-link-alt"></i></span>中找到一个喜欢的图标库，想要全部下载，但是发现需要挨个点击添加购物车中，如下图所示，居然没找一个可以全选的按钮！！总之不知道为啥要这样设计吧。但是确实很不方便。</p>
</blockquote>
<p><a href="https://img-blog.csdnimg.cn/201812131710542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/201812131710542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"></a> 想要全选的话，操作如下</p>
<ol>
<li><p>按下 F12 或者 打开浏览器开发者模式</p>
</li>
<li><p>进入 console 的窗口<a href="https://img-blog.csdnimg.cn/20181213171504956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20181213171504956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"></a></p>
</li>
<li><p>输入下列代码，然后回车</p>
<p>var iconList = document.querySelectorAll(‘.icon-gouwuche1’); for (var i = 0; i &lt; iconList.length; i++) { iconList[i].click(); }</p>
</li>
<li><p>完成，即可进入购物车中查看自己添加的图标</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js 对于基于微服务的应用程序开发有多好？</title>
    <url>/Code/how-good-is-node-js-for-developing-apps-based-on-microservices/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>在不断发展的业务环境中，应用程序开发人员在将微服务集成到应用程序开发流程中的同时，享有多项明显的好处。 当您将 Node.js 连接到微服务时，项目工作流程将得到增强。在本文中，您将了解到在微服务上进行应用程序开发时 Node.js 的兼容性。 世界各地的开发人员都意识到 Node.js 的潜力。目前，<span class="exturl" data-url="aHR0cHM6Ly9ob3N0aW5ndHJpYnVuYWwuY29tL2Jsb2cvbm9kZS1qcy1zdGF0cy8=">eBay 和 AliExpress<i class="fa fa-external-link-alt"></i></span>正在使用 Node.js 作为主要的后端语言。首先，您需要对 Node.js 和微服务有清晰的了解。</p>
<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>Node.js 是一个开放源代码，跨平台的环境和运行时库，旨在在浏览器之外运行用 JavaScript 编写的应用程序。它既不是编程语言，也不是框架。 <a href="https://i.loli.net/2020/02/14/yJMCQhdjRrlnNqB.png"><img src="https://i.loli.net/2020/02/14/yJMCQhdjRrlnNqB.png"></a> 开发人员主要在 Web 服务，移动应用程序和其他 API 等后端服务中使用 Node.js。Uber，PayPal，Wallmart 和 Netflix 等大公司一直在生产中使用此运行时环境。</p>
<blockquote>
<p><strong><em>另请阅读：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluZGludmVudG9yeS5jb20vYmxvZy9wcm9zLWFuZC1jb25zLW9mLW5vZGUtanMtd2ViLWFwcC1kZXZlbG9wbWVudC8=">Node.js Web App 开发的正面和负面方面<i class="fa fa-external-link-alt"></i></span></em></strong></p>
</blockquote>
<h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>另一方面，微服务是指软件设计模式。这种模式可以将大型应用程序分解为更简单和较小的应用程序的集合。这些应用程序可以单独测试，维护和部署。 此外，它们是根据特定的业务能力松散耦合和组织的。因此，可以将其视为开发软件的面向业务的方式。</p>
<h2 id="微服务对应用开发者的重要性"><a href="#微服务对应用开发者的重要性" class="headerlink" title="微服务对应用开发者的重要性"></a>微服务对应用开发者的重要性</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在大多数软件项目中，开发人员旨在从一开始就解决一个问题。当另一个问题浮出水面时，工程团队也会尝试解决它。项目的规模在不断扩大，没有解决所有问题。 这是整体式的发展。现有应用程序具有新功能，从而增加了整体复杂性。逐渐地，开发人员发现难以扩展项目，并且浪费了资源。 原因是，他们需要同时缩放每个功能。每次开发人员都需要更改几行代码，这使过程变得很困难。 开发人员发现无法应对微小变化的时候到了。添加新功能成为噩梦，并且该产品已过时。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>微服务旨在解决软件开发的这一问题。基于微服务架构的软件可以由几个较小的组件开发。这些部分可以协同工作，尽管开发人员可以单独构建它们。 此外，他们可以使用任何语言来实现它们。这表明开发人员可以自由使用任何技术，并且它们不限于任何特定的技术。 如果正确实施，微服务可能很小，以至于一个小团队可以在两周内重写它。如果性能似乎很差，那么很快就可以更换服务。 这导致开发风险以及与基础架构运营相关的成本大幅降低。最终，商业公司需要花费更少的钱以获得更好的性能。</p>
<h2 id="微服务与Node-js之间的匹配"><a href="#微服务与Node-js之间的匹配" class="headerlink" title="微服务与Node.js之间的匹配"></a>微服务与 Node.js 之间的匹配</h2><p>微服务与 Node.js 共享兼容的连接。应该注意的是，开发 Node 的核心动机是简化微服务上的应用程序开发过程。 因此，连接是明确的，因为运行时环境与软件设计模式完全匹配。这个想法是在开发 Node app 时要使用几个分散的小节点。随着应用程序的工作，这些节点相互通信。 显然，在过去的几年中，大型企业和初创企业都将 Node.js 用于基于微服务的应用程序。看起来开发人员对使用 Node 很满意，并且从提高生产率方面可以看出其受欢迎程度。</p>
<h2 id="使用微服务的主要好处"><a href="#使用微服务的主要好处" class="headerlink" title="使用微服务的主要好处"></a>使用微服务的主要好处</h2><p>开发人员了解，在构建应用程序时，技术并不总是很重要。与可用的技术功能相比，一些开发人员认为业务原理更为重要。 将微服务集成到应用程序开发流程中可以大大简化流程。在这里，您将了解微服务为开发人员提供的切实利益。</p>
<h3 id="更好的结构"><a href="#更好的结构" class="headerlink" title="更好的结构"></a>更好的结构</h3><p>在结构良好的应用程序中，了解功能变得更加容易。这意味着开发人员必须相应地设计和实现这些功能。 在设计这些应用程序时，微服务会派上用场，从而为它们提供更好的结构。从实践上考虑，它需要较少的时间和金钱进行业务分析。因此，企业可以将资金用于开发过程本身。</p>
<h3 id="无缝开发"><a href="#无缝开发" class="headerlink" title="无缝开发"></a>无缝开发</h3><p>有时，开发人员发现概念化，构建和维护复杂的应用程序非常困难。使用微服务，他们可以将它们分成更小的位。在此过程中，任务变得更加易于管理和简化。</p>
<h3 id="更大的可扩展性"><a href="#更大的可扩展性" class="headerlink" title="更大的可扩展性"></a>更大的可扩展性</h3><p>与在传统范例中开发的单片应用程序不同，微服务提供更大程度的可伸缩性。开发人员遇到困难的情况，试图扩大规模，因为该过程确实很耗时。 他们需要找出内部情况，这需要大量的努力。微服务使流程更简单，并增强了项目的可伸缩性。</p>
<h3 id="错误更少"><a href="#错误更少" class="headerlink" title="错误更少"></a>错误更少</h3><p>使用微服务最终可以减少错误数量。在这种情况下，微服务类似于句子，即人们可以避免错误的一口大小的技术。 因此，修复错误变得更加简单且耗时。目前，开发人员正在探索在应用程序开发期间集成微服务和 Node.js 的好处。</p>
<h3 id="更好的性能"><a href="#更好的性能" class="headerlink" title="更好的性能"></a>更好的性能</h3><p>每个微服务都被赋予一个任务。开发人员可以无缝优化和调整它们。微服务的目的是刀对厨师。在竞争激烈的业务环境中，应用程序的性能对于建立业务竞争力大有帮助。</p>
<h2 id="集成Node-js和微服务的好处"><a href="#集成Node-js和微服务的好处" class="headerlink" title="集成Node.js和微服务的好处"></a>集成 Node.js 和微服务的好处</h2><p>在业务价值方面，可以评估在应用程序开发过程中将 Node.js 和微服务集成在一起的好处。Node.js 中开发的面向微服务的应用程序具有许多好处。</p>
<h3 id="简化工作流程开发"><a href="#简化工作流程开发" class="headerlink" title="简化工作流程开发"></a>简化工作流程开发</h3><p>当工作流程开发得到简化时，开发人员不必干涉彼此的任务。他们只是在正在开发的应用程序的各个部分上工作。 如果在应用程序开发过程中使用整体程序，那么这个问题就会成为一个障碍。Node.js 的优势在于它可以简化工作流程。 由于几个小部分组成了大型应用程序，因此开发人员可以分别处理较小的应用程序，而不是整个遇到问题。</p>
<h3 id="提高生产力"><a href="#提高生产力" class="headerlink" title="提高生产力"></a>提高生产力</h3><p>Node.js 有一个程序包管理器，其中包含几个模块，能够由开发人员立即使用。这为他们节省了应用开发过程中的大量工作。 此外，Node.js 中的应用程序是用 JavaScript 编写的。这使得前端开发人员可以很容易地理解发生了什么。因此，他们在应用程序中进行了所需的更改。 整个堆栈中可以使用一种语言。此外，开发人员可以在后端和前端使用相同的模块。这可以帮助他们节省大量时间，并在此过程中发挥生产力。</p>
<h3 id="易于更新和维护"><a href="#易于更新和维护" class="headerlink" title="易于更新和维护"></a>易于更新和维护</h3><p>事实证明，执行维护活动更为简单，因为不会出现复杂的整体代码。因此，开发人员可以在应用程序中无缝编写新功能。 即使执行更新，他们也可以以增量方式增强系统，而不必花费巨额成本进行重写。随着应用程序获得面向服务的模块化结构，节点活动促进了这种方法。</p>
<h3 id="资料复制"><a href="#资料复制" class="headerlink" title="资料复制"></a>资料复制</h3><p>与 Node.js 完美结合的微服务需要数据复制。此外，开发人员可以从 NoSQL 数据库中受益。 实际上，这是表格式的传统数据库维护模型的替代方法。使用 Node.js，开发人员可以优化此功能的优势。它通常在市场上免费提供。</p>
<h2 id="应用程序的可靠性和性能"><a href="#应用程序的可靠性和性能" class="headerlink" title="应用程序的可靠性和性能"></a>应用程序的可靠性和性能</h2><p>在数字化环境中进行操作需要开发健壮的应用程序。这些应用程序的可靠性和性能在很大程度上取决于开发团队的能力。 使用 Node.js，开发人员可以开发出功能强大的应用程序，这些应用程序在性能和可靠性方面都可以实现。此外，他们可以无限扩展应用程序，并且过程不会混乱。 只要预算允许，开发人员就可以根据需要放大或缩小功能。在这种情况下，您应该专注于单线程异步体系结构，这是开发人员可以使用 Node 享受的功能。 当前，<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluZGludmVudG9yeS5jb20vbm9kZS1qcy1kZXZlbG9wbWVudC5waHA=">Node.js<i class="fa fa-external-link-alt"></i></span>是获取实时运行的 Web 应用程序的最佳解决方案。由于事件驱动和非阻塞 I / O 模型，这些应用以其高性能而著称。 与面向微服务的应用程序一起，Node 可以处理大量负载，尤其是在响应速度较慢的时候。在无缝集成 Node 和微服务时，仅需要 10％的硬件即可处理负载。 从图中可以明显看出 Node.js 的受欢迎程度。Node Foundation 透露，目前大约有<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuL2Jsb2cvYW5ub3VuY2VtZW50cy9ub2RlanMtZm91bmRhdGlvbi1zdXJ2ZXkv"> 350 万用户<i class="fa fa-external-link-alt"></i></span>正在使用 Node 开发应用程序，并且增长率为 100％。 在这种环境下，开发人员能够提出带有自定义功能的应用程序。显然，开发人员喜欢使用微服务来开发应用程序的 Node.js。 下一代开发人员在开发解决方案时可能会很大程度上依赖此平台。特别是，不愿意使用静态类型的 #C 语言的开发人员可以从此环境中受益。</p>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>现在您可以了解为什么 Node.js 与微服务一起使用效果最佳。这就是开发人员喜欢在这样的环境中工作的原因。 借助微服务，他们可以享受多种好处，例如易于更新和开发，成本控制和轻松扩展。特别是在高流量条件下，微服务和 Node.js 可以完美同步。 创新型企业已经在使用这种微服务和 Node.js 的战术组合。他们能够提高生产率，同时将成本降至最低并实现高性能。开发人员很高兴将 Node.js 用于基于微服务的应用程序。</p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>咨询</tag>
        <tag>Nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>CENTOS8 宝塔下安装 aria2 和 AriaNg 添加 HTTPS 访问支持</title>
    <url>/Linux/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/install-aria2-and-ariang-is-ssl/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>首先你安装得有一台安装了 CENTOS7 的 KVM 架构的 vps，安装宝塔完毕。 首先安装 ARIA2，这个我们直接用某大佬的一键脚本吧：</p>
<p>wget -N –no-check-certificate <span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RveW9EQWRvdWJpQmFja3VwL2RvdWJpL21hc3Rlci9hcmlhMi5zaA==">https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh<i class="fa fa-external-link-alt"></i></span> &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</p>
<p>安装完毕后，会展示出你的服务器地址，你的 NPC 访问密码，端口和默认下载目录。 宝塔里面创建站点，比如创建<span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5mdW9jdS5jbi8="> download.fuocu.cn<i class="fa fa-external-link-alt"></i></span>(如果你懒得折腾，而且也愿意用安全的 <code>HTTPS</code> 走你的数据，你直接用我搭建的 <code>AriaNg</code> 前端访问即可，后面都不用看了，填写你的 <code>ARIA2</code> 配置信息即可，反正这个只有你自己填写好你的 <code>NPC</code> 密码，服务器地址，端口等信息后才可以用，而且服务端不会有任何记录） 为了自己的数据传输安全，在宝塔后台申请 <strong>Let’s Encrypt</strong> 的证书，这个简单，只要你的域名提前做好解析，填写好邮箱，很快就可以申请成功。 去宝塔的后台界面远程下载 <code>AriaNg</code>，下载地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXN3aW5kL0FyaWFOZy9yZWxlYXNlcy9kb3dubG9hZC8xLjEuNC9BcmlhTmctMS4xLjQuemlw">https://github.com/mayswind/AriaNg/releases/download/1.1.4/AriaNg-1.1.4.zip<i class="fa fa-external-link-alt"></i></span> 当然如果你看到这篇笔记晚于 2020 年 2 月，你也可以去 **<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXN3aW5kL0FyaWFOZy9yZWxlYXNlcw==">AriaNg 发布页<i class="fa fa-external-link-alt"></i></span>** 去寻找最新版本。 下载完成后，宝塔后台就可以解压缩，解压缩到根目录。 现在问题来了，你用你创建好的<span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZC5mdW9jdS5jbi8="> download.fuocu.cn<i class="fa fa-external-link-alt"></i></span>在浏览器里访问，填写我们前面安装 aria2 的 NPC 密码后依然显示未连接。原因？就是因为我们需要更改 <code>ARIA2</code> 的配置文件。</p>
<p>vi /root/.aria2/aria2.conf</p>
<p>找到，没有可以自行添加到配置文件。</p>
<p>#是否启用 RPC 服务的 SSL/TLS 加密<br>#rpc-secure=true<br>#申请的域名 crt 证书文件路径，自行修改<br>#rpc-certificate=/root/xxx.crt<br>## 申请的域名 key 证书文件路径，自行修改<br>#rpc-private-key=/root/xxx.key</p>
<p>首先把上述三行的注释去掉，开启 <strong>HTTPS</strong> 访问支持，关键是下面两个证书文件路径，哪里找，其实你的站点配置信息里面有，如果你的宝塔安装的是 <strong>nginx</strong>，在你的站点 <strong>nginx</strong> 配置文件中包含路径。进入宝塔后台，站点设置里面找到 <strong>nginx</strong> 配置： 找到：</p>
<p>ssl_certificate /www/server/panel/vhost/cert/aria2.zhanghaitao.com/fullchain.pem;<br>ssl_certificate_key /www/server/panel/vhost/cert/aria2.zhanghaitao.com/privkey.pem</p>
<p>先别急，你如果直接填写这两个文件地址不会成功，我在这里耽误了 3 个小时才折腾完毕，记得谢我，评论区见。需要把 <code>privkey.pem</code> 用 openssl 转换一下，进入这个目录：</p>
<p>cd /www/server/panel/vhost/cert/download.fuocu.cn/<br>openssl rsa -in privkey.pem -out privkey.key</p>
<p>转换完成后，你得到了 <code>privkey.key</code> 这个文件：</p>
<p>vi /root/.aria2/aria2.conf</p>
<p>编辑为：</p>
<p># 启用加密后 RPC 服务需要使用 https 或者 wss 协议连接<br>rpc-secure=true<br># 在 RPC 服务中启用 SSL/TLS 加密时的证书文件 (.pem/.crt)<br>rpc-certificate=/www/server/panel/vhost/cert/aria2.zhanghaitao.com/fullchain.pem<br># 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件 (.key)<br>rpc-private-key=/www/server/panel/vhost/cert/aria2.zhanghaitao.com/privkey.key</p>
<p>重新启动 <code>ARIA2</code></p>
<p>service aria2 restart</p>
<p>再访问你的 AriaNg 你会发现连接成功，尽情享受吧：）</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>Cloud</tag>
        <tag>APP</tag>
        <tag>Aria2</tag>
      </tags>
  </entry>
  <entry>
    <title>你家宽带是公网 IP 还是内网 IP，两者体验大不同！</title>
    <url>/NetWork/ipv4-vs/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>“提速降费” 已经喊了很长时间，很多用户家里都升级安装了百兆宽带，再也不会出现一人看电影，全家缓冲的情况了。 不过随着办理宽带用户的增加，公网 IP 使用分配也已逐渐告罄，很多网民都在抱怨：“自家的公网 IP，被偷偷换为内网 IP” <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/afd4511a5fd740c98832c90d7abbbcfd.jpeg"> <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/e756d6c2f60b4c64bb3bce1538f6fbc6.jpg"> <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/cee0cf27987c4a0da674e16127213362.jpg"> 今天我们就来聊一聊公网 IP 和内网 IP 的使用体验都有哪些不同？</p>
<h2 id="什么是内网IP、公网IP？"><a href="#什么是内网IP、公网IP？" class="headerlink" title="什么是内网IP、公网IP？"></a>什么是内网 IP、公网 IP？</h2><p>内网 IP： <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/aad7c50a14c44321b5785788e820fc64.webp"> 由图可以看到路由器（第一层），交换机（第二层）然后是自己的电脑，所谓的内网就是从路由器以下开始的。我们内网用户的电脑都是经过交换机和路由器之后才能连到外网。 路由器只需一个公网 IP 就可以供下面多个电脑联网使用。由于不同的内网 IP 能够重复使用。所以内网 IP 通常有以下类型： 10.0.0.0<del>10.255.255.255 172.16.0.0</del>172.31.255.255 192.168.0.0~192.168.255.255 这些 IP 就是内网 IP，其中你家的 IP 是否也在其中呢？ 公网 IP： <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/bcb5effcb3fb40679b94b88fb6b1f002.webp"> 拥有公网 IP，用户就无需经过路由器或交换机，直接可以上网。除此之外，还能够直接被外界所访问到，无需经如何设备，直接连接电脑。 如何辨别自家网络是公网 IP 呢？其实除了上文中提到的内网 IP，其余基本都是公网 IP。</p>
<h2 id="公网IP有什么好处呢？"><a href="#公网IP有什么好处呢？" class="headerlink" title="公网IP有什么好处呢？"></a><strong>公网 IP 有什么好处呢？</strong></h2><p>其实最早我们使用的网络都是公网 IP，但是随着电脑的普及，运营商没有足够的公网 IPV4 地址分配给用户，所以只能偷偷的将公网 IP 换为内网 IP 分给多个用户使用，不过这也给用户使用体验造成了不少影响。 1、公网 IP 有更好的下载体验 <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/2c35c78be9be44b687c1c552dd272718.webp"> 相信不少用户都曾遇到过使用 P2P 下载电影、游戏资源，搜索不到资源或是下载速度慢的情况。如果拥有公网 IP，当进行 P2P 下载的时候，能够更快地找到其他节点，获取更多下载数据，下载速度更快，下载资源也不容易断流。如果是内网 IP，一些稍微 “冷门” 的资源可能根本无法下载。 2、公网 IP 更出色的互联体验 随着物联网的快速发展，很多智能设备都支持连接网络（智能电视、智能摄像头等），例如家中的智能安全摄像头，如果用户是公网 IP，用户可以直接通过公网 IP 连接，不经过任何第三方服务器，免去了泄露隐私的风险。 3、公网 IP 游戏体验更出色 <img src="http://5b0988e595225.cdn.sohucs.com/q_70,c_zoom,w_640/images/20171124/50b707fa611f46819ff027f6c23c6124.webp"> 如果你是一名主机玩家，肯定有过此类经历，一些游戏需要 NAT2 类型才能联机而 NAT3 则不能，还有如果在 Steam 上建主机玩救生之路 2，建好房间后发现别人都进不来。这就是内网 IP 和公网 IP 的区别。公网 IP 无需路由器或交换机转发，联机效率更高，而且有些游戏硬性跪地需要公网 IP 才能连接。</p>
<h2 id="如何才能更换公网IP"><a href="#如何才能更换公网IP" class="headerlink" title="如何才能更换公网IP?"></a>如何才能更换公网 IP?</h2><p>用户如果对公网 IP 有必要需求，可以尝试联系自家网络运营商，可能有机会更换公网 IP，不过由于目前公网 IP（IPV4）基本已经分配完毕，使用出现枯竭，能够长期使用公网 IP 的可能非常渺小，只能希望 IPV6 技术的尽快普及，彻底解决公网 IP 枯竭的问题。</p>
]]></content>
      <categories>
        <category>NetWork</category>
      </categories>
      <tags>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title>JetBrains 全系列软件激活教程激活码以及 JetBrains 系列软件汉化包</title>
    <url>/MacOS/Windows/jetbrains-crack/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p>JetBrains 全系列软件激活教程，共有两种方法，喜欢哪种用哪种。另外附上 JetBrains 系列软件的汉化包以及中文设置教程，希望大家喜欢。</p>
</blockquote>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><h4 id="小编建议大家去-JetBrains-官网-下载JetBrains系列工具的官方版，然后使用本教程方法激活。"><a href="#小编建议大家去-JetBrains-官网-下载JetBrains系列工具的官方版，然后使用本教程方法激活。" class="headerlink" title="小编建议大家去 JetBrains 官网 下载JetBrains系列工具的官方版，然后使用本教程方法激活。"></a>小编建议大家去 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS8=">JetBrains<i class="fa fa-external-link-alt"></i></span> 官网 下载 JetBrains 系列工具的官方版，然后使用本教程方法激活。</h4><p><strong>Jetbrains</strong> 自 2020 年 1 月起大量封杀激活码，现在几乎没有可用的激活码了，X 宝上的都已经关店了，那些卖激活码的随时准备坑钱跑路。没有激活码了怎么办？</p>
<p>今天就送给大家一份大礼： <strong>Jetbrains</strong> 全系列产品 2019.3.2 及以下版本最新注册服务器 <strong>License Server</strong> 的破解工具（理论上适用于目前 <strong>Jetbrains</strong> 所有新老版本），可使用它来激活你手头上所有的 <strong>Jetbrains</strong> 产品。</p>
<p>测试可成功激活 <strong>JetBrains</strong> 以下版本（支持低于以下版本的激活）：</p>
<blockquote>
<p><em>IntelliJ IDEA 2019.3.2 激活、AppCode 2019.3.2 激活、CLion 2019.3.2 激活、DataGrip 2019.3.1 激活、GoLand 2019.3 激活、PhpStorm 2019.3.1 激活、PyCharm 2019.3.1 激活、Rider 2019.3.1 激活、RubyMine 2019.3.1 激活、WebStorm 2019.3.1 激活</em></p>
</blockquote>
<p><strong>更新于: 2020-01-19 07:01</strong></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zbjkudXMvZmlsZS8xOTk5MTQ1My00MTg2OTQzODk=">JetBrains 破解文件.zip<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li>解压 JetBrains 破解文件.zip，得到 <code>jetbrains-agent.jar</code>，将这个文件放到你喜欢放的任意位置。(如果你是无外网环境，将 jetbrains-agent.jar 重命名为 <code>jetbrains-agent-offline.jar</code>)</li>
<li> 运行 JetBrains 的软件，以 WebStorm 为例，点击 <code>Help -&gt; Edit Custom VM Options ..</code> (如果提示是否要创建文件，请点 “Yes”)</li>
<li> 在打开的 <code>xxx.vmoptions</code> 行未添加：<code>-javaagent:/absolute/path/to/jetbrains-agent.jar</code>（切记将 <code>/absolute/path/to/</code> 修改为你的路径）</li>
<li>重启你的 IDE。</li>
</ol>
<blockquote>
<p><em>以上需要注意的是：一定要自己确认好路径 (不要使用中文路径)，填错会导致 IDE 打不开！最好使用绝对路径。</em><code>xxx.vmoptions</code> <em>内只允许有一个</em><code>-javaagent</code><em>参数。</em></p>
</blockquote>
<h5 id="xxx-vmoptions路径示例"><a href="#xxx-vmoptions路径示例" class="headerlink" title="xxx.vmoptions路径示例:"></a><code>xxx.vmoptions</code> 路径示例:</h5><p><strong>系统</strong></p>
<p><strong>代码</strong></p>
<p>Mac</p>
<p>-javaagent:/home/macwk/jetbrains-agent.jar</p>
<p>Windows</p>
<p>-javaagent:/home/macwk/jetbrains-agent.jar</p>
<p>Linux</p>
<p>-javaagent:C:\Users\macwk\jetbrains-agent.jar</p>
<blockquote>
<p><em>如果</em><code>vmoptions</code><em>还是不小心填错了导致软件打不开，请参考这篇文章补救：<span class="exturl" data-url="aHR0cHM6Ly9pbnRlbGxpai1zdXBwb3J0LmpldGJyYWlucy5jb20vaGMvZW4tdXMvYXJ0aWNsZXMvMjA2NTQ0NTE5">点我查看<i class="fa fa-external-link-alt"></i></span></em></p>
</blockquote>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><ol>
<li>点击 IDE 菜单 <code>Help" -&gt; Register…</code> 或 <code>Configure -&gt; Manage License…</code></li>
<li>选择激活模式，有两种模式，您可以任选一种：</li>
</ol>
<h4 id="Activation-Code-模式"><a href="#Activation-Code-模式" class="headerlink" title="Activation Code 模式"></a><code>Activation Code</code> 模式</h4><p>打开包内的<code>激活码.txt</code>，全选复制后粘贴到 <code>Activation Code</code> 下面的输入框中，然后点击 <code>Activate</code>，大功告成，有效期至 2089 年。(您也可以<span class="exturl" data-url="aHR0cHM6Ly96aGlsZS5pby9jdXN0b20vbGljZW5zZQ==">生成专属激活码<i class="fa fa-external-link-alt"></i></span>)。</p>
<p>也可使用企业激活，可跳过以上步骤</p>
<p>激活码为：</p>
<p>KZGV1YIIW8-eyJsaWNlbnNlSWQiOiJLWkdWMVlJSVc4IiwibGljZW5zZWVOYW1lIjoi5rC45LmF5Zyw5Z2AIG1lZGVtaW5nLmNvbSIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSU0MiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlNGIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJEIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQQyIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNWIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUERCIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQQyIsInBhaWRVcFRvIjoiMjAyMC0wMy0yOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJwYWlkVXBUbyI6IjIwMjAtMDMtMjgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTIiwicGFpZFVwVG8iOiIyMDIwLTAzLTI4IiwiZXh0ZW5kZWQiOnRydWV9XSwiaGFzaCI6IjE2OTQzMTg2LzA6MTI0NDI3MDA3MyIsImdyYWNlUGVyaW9kRGF5cyI6NywiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-rrm30f/ZOyifKDfe3Lku4fA60RZz7rdJB/s2Es+MM55NHPgXiR1ZuoFmk3YPtPjdbbjLBvFRPFf/B/X41KsXPiEjNBBZzVzQhz4gQPaMMQdw5O14s1zSgaU2zANfuLRLfMKeC6KGAJ71RzkqeJHG3nYrtcpldVq+ZTJSLRJq+6iA2OVjd51BzzAjRNVR6mckZ1oCIFNMuawUw4KmZafdM86VuOZpE3PhI0DT1YyAG6sjFB/HnJQuClmCGKCDHdgB2NPh8hIINLWr8U0sjywGz6y730ZB8ZTMmPNOKXkltn7P83P+8s1/XdY2ogM/5ZQN3c+JUXwBiymAZqjGd675Dw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</p>
<h4 id="License-server-模式"><a href="#License-server-模式" class="headerlink" title="License server 模式"></a><code>License server</code> 模式</h4><p><code>Server Address</code> 地址填入：<code>http://jetbrains-license-server</code> 然后点击 <code>Activate</code>(如果点击出现 <code>Please wait…</code> 后没有任何变化，那请使用 <code>Activation Code</code> 模式)。</p>
<hr>
<h2 id="中文汉化包"><a href="#中文汉化包" class="headerlink" title="中文汉化包"></a>中文汉化包</h2><p>JetBrains 系列汉化包可用于：</p>
<ul>
<li>Android Studio 3.5 汉化包</li>
<li> CLion 2019.3 汉化包</li>
<li> DataGrip 2019.3 汉化包</li>
<li> GoLand 2019.3 汉化包</li>
<li> IntelliJ IDEA 2019.3 汉化包</li>
<li> PhpStorm 2019.3 汉化包</li>
<li> PyCharm 2019.3 汉化包</li>
<li> Rider 2019.3 汉化包</li>
<li> RubyMine 2019.3 汉化包</li>
<li> WebStorm 2019.3 汉化包</li>
</ul>
<p>汉化来自于：<span class="exturl" data-url="aHR0cHM6Ly93d3cucGluZ2Zhbmd4LmNvbS8=">pingfangx.com<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BpbmdmYW5neC9UcmFuc2xhdG9yWA==">GitHub 下载<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubGFuem91cy5jb20vaTl1bmtpZg==">蓝奏云下载<i class="fa fa-external-link-alt"></i></span>(提取码：1234)</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>将 <code>resources_zh_CN_*.jar</code> ，放到软件安装路径下的 <strong>lib</strong> 目录中，重启软件即可</p>
<ul>
<li>注意是 <strong>lib</strong> 不是 <strong>bin</strong></li>
<li> 不需要重命名，不需要解压，不需要删除任何 jar 包，不会覆盖任何 jar 包</li>
<li>软件安装路径的 lib 目录示例 <code>D:\software\JetBrains\AndroidStudio\lib</code></li>
<li>该目录下应该有一个文件: resources_en.jar 如果没有，说明没有找对路径</li>
<li> MAC 用户请在 Finder &gt; 应用程序 中找到软件，右键 &gt; 显示包内容</li>
</ul>
<h3 id="汉化不生效"><a href="#汉化不生效" class="headerlink" title="汉化不生效"></a>汉化不生效</h3><blockquote>
<p>_原因是因为当前语言环境不是中文（zh_CN）或者一些其它诡异的原因导致的，通过以下方法可以解决：_</p>
</blockquote>
<p>请打开软件，选择 <code>Help → Edit Custom VM Options...</code> ，加上两行</p>
<p>-Duser.language=zh<br>-Duser.region=CN</p>
<p>然后重启软件</p>
<h3 id="设置打不开"><a href="#设置打不开" class="headerlink" title="设置打不开"></a>设置打不开</h3><p>系统原本的 <code>resources_en.jar</code> 被损坏，请重新安装恢复该 jar 包，按正确 [使用方法] 重新使用汉化包，常见原因：</p>
<ul>
<li>不需要将汉化包内容解压到 <code>resources_en.jar</code> 中（这是通常网上不正确的汉化包使用方法）</li>
<li>不需要重命名替换</li>
</ul>
<h4 id="汉字乱码-中文显示为框框"><a href="#汉字乱码-中文显示为框框" class="headerlink" title="汉字乱码/中文显示为框框"></a>汉字乱码 / 中文显示为框框</h4><p>当前字体不支持中文显示，请到 <code>File → Settings → Appearance &amp; Behavior → Appearance →</code> 勾选 <code>Override default fonts by (not recommended)</code>，选择 <code>Microsoft YaHei</code> 或者其他中文字体。</p>
]]></content>
      <categories>
        <category>MacOS</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>JetBrains</tag>
        <tag>激活码</tag>
      </tags>
  </entry>
  <entry>
    <title>JS 的 Document 属性和方法</title>
    <url>/Code/JavaScript/js-document/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="JS的Document属性和调用方法"><a href="#JS的Document属性和调用方法" class="headerlink" title="JS的Document属性和调用方法"></a><code>JS</code> 的 <code>Document</code> 属性和调用方法</h2><p>document.title ()            // 设置文档标题等价于 HTML 的 title 标签<br>document.bgColor ()          // 设置页面背景色<br>document.fgColor ()          // 设置前景色 (文本颜色)<br>document.linkColor ()        // 未点击过的链接颜色<br>document.alinkColor ()       // 激活链接 (焦点在此链接上) 的颜色<br>document.vlinkColor ()       // 已点击过的链接颜色<br>document.URL ()              // 设置 URL 属性从而在同一窗口打开另一网页<br>document.fileCreatedDate ()  // 文件建立日期，只读属性<br>document.fileModifiedDate () // 文件修改日期，只读属性<br>document.charset ()          // 设置字符集 简体中文:gb2312<br>document.fileSize ()         // 文件大小，只读属性<br>document.cookie ()           // 设置和读出 cookie</p>
<h2 id="常用对象方法"><a href="#常用对象方法" class="headerlink" title="常用对象方法"></a>常用对象方法</h2><p>document.write ()            // 动态向页面写入内容<br>document.createElement (Tag) // 创建一个 html 标签对象<br>document.getElementById (ID) // 获得指定 ID 值的对象<br>document.getElementsByName (Name) // 获得指定 Name 值的对象<br>document.body.appendChild(oTag)</p>
<h2 id="body-主体子对象"><a href="#body-主体子对象" class="headerlink" title="body-主体子对象"></a><code>body</code>- 主体子对象</h2><p>document.body              // 指定文档主体的开始和结束等价于 body&gt;/body&gt;<br>document.body.bgColor      // 设置或获取对象后面的背景颜色<br>document.body.link         // 未点击过的链接颜色<br>document.body.alink        // 激活链接 (焦点在此链接上) 的颜色<br>document.body.vlink        // 已点击过的链接颜色<br>document.body.text         // 文本色<br>document.body.innerText    // 设置 body&gt;…/body &gt; 之间的文本<br>document.body.innerHTML    // 设置 body&gt;…/body &gt; 之间的 HTML 代码<br>document.body.topMargin    // 页面上边距<br>document.body.leftMargin   // 页面左边距<br>document.body.rightMargin  // 页面右边距<br>document.body.bottomMargin// 页面下边距<br>document.body.background   // 背景图片<br>document.body.appendChild (oTag) // 动态生成一个 HTML 对象</p>
<h2 id="常用对象事件"><a href="#常用对象事件" class="headerlink" title="常用对象事件"></a>常用对象事件</h2><p>document.body.onclick=”func ()”     // 鼠标指针单击对象是触发<br>document.body.onmouseover=”func ()” // 鼠标指针移到对象时触发<br>document.body.onmouseout=”func ()”  // 鼠标指针移出对象时触发</p>
<h2 id="location-位置子对象"><a href="#location-位置子对象" class="headerlink" title="location-位置子对象"></a><code>location</code>- 位置子对象</h2><p>document.location.hash             // #号后的部分<br>document.location.host             // 域名 + 端口号 // 好像返回的是主机名 localhost, 没有返回端口号<br>document.location.hostname         // 域名<br>document.location.href             // 完整 URL<br>document.location.pathname         // 目录部分<br>document.location.port             // 端口号<br>document.location.protocol         // 网络协议 (http:)<br>document.location.search           // ? 号后的部分<br>documeny.location.reload ()         // 刷新网页<br>document.location.reload (URL)      // 打开新的网页<br>document.location.assign (URL)      // 打开新的网页<br>document.location.replace (URL)     // 打开新的网页</p>
<h2 id="selection-选区子对象"><a href="#selection-选区子对象" class="headerlink" title="selection-选区子对象"></a><code>selection</code>- 选区子对象</h2><p><code>document.selection()</code> selection 的 createRange 方法 <code>document.selection.createRange()</code> 根据当前文字选择返回 TextRange 对象，或根据控件选择返回 <code>ControlRange</code> 对象。配合 <code>execCommand</code>，在 HTML 编辑器中很有用，比如：文字加粗、斜体、复制、粘贴、创建超链接等。这些好像都是只有在 IE 下才能实现。。</p>
<h2 id="images集合-页面中的图象"><a href="#images集合-页面中的图象" class="headerlink" title="images集合(页面中的图象)"></a><code>images</code> 集合 (页面中的图象)</h2><ol>
<li><p>通过集合引用</p>
<p>document.images        // 对应页面上的 img 标签<br>document.images.length// 对应页面上 img 标签的个数<br>document.images [0]     // 第 1 个 img 标签<br>document.images [i]     // 第 i-1 个 img 标签</p>
</li>
<li><p>通过 name 属性直接引用</p>
<p>img name=”oImage”<br>document.images.oImage//document.images.name 属性</p>
</li>
<li><p>引用图片的 src 属性 <code>document.images.oImage.src //document.images.name属性.src</code></p>
</li>
<li><p>创建一个图象</p>
<p>var oImage<br>oImage = new Image()<br>document.images.oImage.src=”1.jpg”</p>
<p>同时在页面上建立一个 <code>img</code> 标签与之对应就可以显示</p>
</li>
</ol>
<h2 id="forms集合-页面中的表单"><a href="#forms集合-页面中的表单" class="headerlink" title="forms集合(页面中的表单)"></a><code>forms</code> 集合 (页面中的表单)</h2><ol>
<li><p>通过集合引用</p>
<p>document.forms                // 对应页面上的 form 标签<br>document.forms.length         // 对应页面上 /formform 标签的个数<br>document.forms [0]             // 第 1 个 /formform 标签<br>document.forms [i]             // 第 i-1 个 /formform 标签<br>document.forms [i].length      // 第 i-1 个 /formform 中的控件数<br>document.forms [i].elements [j] // 第 i-1 个 /formform 中第 j-1 个控件</p>
</li>
<li><p>通过标签 name 属性直接引用</p>
<form name="”Myform”">
  <input name="”myctrl”/">
</form>
<script>
  document.Myform.myctrl() //document.表单名.控件名
</script>
</li>
<li><p>访问表单的属性</p>
<p>document.forms [i].name              // 对应 form name &gt; 属性<br>document.forms [i].action            // 对应 /formform action &gt; 属性<br>document.forms [i].encoding          // 对应 /formform enctype &gt; 属性<br>document.forms [i].target            // 对应 /formform target &gt; 属性<br>document.forms [i].appendChild (oTag) // 动态插入一个控件<br>document.all.oDiv                   // 引用图层 oDiv<br>document.all.oDiv.style.display=””  // 图层设置为可视<br>document.all.oDiv.style.display=”none” // 图层设置为隐藏<br>document.getElementId (”oDiv”)       // 通过 getElementId 引用对象<br>document.getElementId(”oDiv”).style=””<br>document.getElementId(”oDiv”).display=”none”<br>/ <em>document.all 表示 document 中所有对象的集合<br>只有 ie 支持此属性，因此也用来判断浏览器的种类</em> /</p>
</li>
</ol>
<h2 id="图层对象的4个属性"><a href="#图层对象的4个属性" class="headerlink" title="图层对象的4个属性"></a>图层对象的 4 个属性</h2><p>document.getElementById (”ID”).innerText// 动态输出文本<br>document.getElementById (”ID”).innerHTML// 动态输出 HTML<br>document.getElementById (”ID”).outerText// 同 innerText<br>document.getElementById (”ID”).outerHTML// 同 innerHTML</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 系统的访达 Finder 侧边栏目录的英文转中文</title>
    <url>/MacOS/mac-finder-english/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>通过下图可以看到，我的 Finder 中的影片变为了英文的 Movies：</p>
<p><a href="https://i.loli.net/2020/02/28/AsfQ4TIHXZ1FSLi.jpg"><img src="https://i.loli.net/2020/02/28/AsfQ4TIHXZ1FSLi.jpg"></a></p>
<p>想把 Mac 电脑的访达 Finder 中的英文目录转成中文，可以参考以下办法：</p>
<p>打开 Mac 电脑终端，按需自取命令即可。比如，我的只有【影片】-【Movies】，我只需选择命令 6 即可。</p>
<p><strong>1.# 桌面文件夹，Desktop 变回中文，打开 “终端”，输入以下命令：</strong></p>
<p>touch ~/Desktop/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p><strong>2.# 文稿文件夹，Documents 变回中文，打开 “终端”，输入以下命令：</strong></p>
<p>touch ~/Documents/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p><strong>3. 下载文件夹，downloads 变回中文，打开 “终端”，输入以下命令：</strong></p>
<p>touch ~/downloads/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p><strong>4.# 图片：</strong></p>
<p>touch ~/Pictures/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p><strong>5.# 音乐：</strong></p>
<p>touch ~/Music/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p><strong>6.# 影片：</strong></p>
<p>touch ~/Movies/.localized</p>
<blockquote>
<p>回车，重启 Finder</p>
</blockquote>
<p>以上就是给大家分享的 Mac 电脑 finder 英文目录转中文的图文教程，是不是简单又实用！希望对大家有所帮助！</p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>MacOS</tag>
        <tag>终端</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 更新 node 版本</title>
    <url>/MacOS/mac-update-node-version/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="第一步，先查看本机node-js版本："><a href="#第一步，先查看本机node-js版本：" class="headerlink" title="第一步，先查看本机node.js版本："></a>第一步，先查看本机 <code>node.js</code> 版本：</h2><p>node -v</p>
<h2 id="第二步，清除node-js的cache："><a href="#第二步，清除node-js的cache：" class="headerlink" title="第二步，清除node.js的cache："></a>第二步，清除 <code>node.js</code> 的 <code>cache</code>：</h2><p>sudo npm cache clean -f</p>
<h2 id="第三步，安装-n-工具，这个工具是专门用来管理node-js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是-“n”"><a href="#第三步，安装-n-工具，这个工具是专门用来管理node-js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是-“n”" class="headerlink" title="第三步，安装 n 工具，这个工具是专门用来管理node.js版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”"></a>第三步，安装 <code>n</code> 工具，这个工具是专门用来管理 <code>node.js</code> 版本的，别怀疑这个工具的名字，是他是他就是他，他的名字就是 “n”</h2><p>&nbsp;sudo npm install -g n</p>
<h2 id="第四步，安装最新版本的node-js"><a href="#第四步，安装最新版本的node-js" class="headerlink" title="第四步，安装最新版本的node.js"></a>第四步，安装最新版本的 <code>node.js</code></h2><p>sudo n stable</p>
<h2 id="第五步，再次查看本机的node-js版本："><a href="#第五步，再次查看本机的node-js版本：" class="headerlink" title="第五步，再次查看本机的node.js版本："></a>第五步，再次查看本机的 <code>node.js</code> 版本：</h2><p>node -v</p>
<h2 id="第六步，更新npm到最新版："><a href="#第六步，更新npm到最新版：" class="headerlink" title="第六步，更新npm到最新版："></a>第六步，更新 <code>npm</code> 到最新版：</h2><p>$ sudo npm install npm@latest -g</p>
<h2 id="第七步，验证"><a href="#第七步，验证" class="headerlink" title="第七步，验证"></a>第七步，验证</h2><p>node -v<br>npm -v</p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>Nodejs</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 终端命令</title>
    <url>/macOS/%E6%8A%80%E5%B7%A7/macOS%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<div class="note default"><p>macOS 终端命令</p>
</div>

<a id="more"></a>

<hr>
<h1 id="1-切换到其他路径"><a href="#1-切换到其他路径" class="headerlink" title="1.切换到其他路径"></a>1. 切换到其他路径</h1><blockquote>
<p>如果你想将当前 command line 会话切换到其他目录，需要用到三个命令：pwd，ls 和 cd。<br>- pwd 的含义是 “print working directory”，会显示当前目录的绝对路径。<br>- ls 的含义是 “list directory contents”，它会列出当前目录的内容。这个命令还有其他参数可选。<br>- cd 的含义是 “change directory”，它会改变当前目录到你指定的目录。如果你不指定，则会返回你的 home folder。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">用途</th>
</tr>
</thead>
<tbody><tr>
<td align="center"> pwd</td>
<td align="center"> 当前工作目录</td>
</tr>
<tr>
<td align="center"> cd（不加参数）</td>
<td align="center">进 root</td>
</tr>
<tr>
<td align="center">cd（folder）</td>
<td align="center">进入文件夹</td>
</tr>
<tr>
<td align="center"> cd ..</td>
<td align="center"> 上级目录</td>
</tr>
<tr>
<td align="center"> cd ~</td>
<td align="center"> 返回 root</td>
</tr>
<tr>
<td align="center">cd -</td>
<td align="center"> 返回上一个访问的目录</td>
</tr>
<tr>
<td align="center"> rm 文件名</td>
<td align="center">删除</td>
</tr>
<tr>
<td align="center"> cat 文件名 (/less)</td>
<td align="center"> 在终端下查看文件</td>
</tr>
<tr>
<td align="center"> ls</td>
<td align="center"> 列出目录下所有文件</td>
</tr>
<tr>
<td align="center"> cp</td>
<td align="center"> 文件名 目标目录    将文件拷贝到目标目录下</td>
</tr>
<tr>
<td align="center"> ~    代表 root</td>
<td align="center"> 如：~/Document/CPP2/</td>
</tr>
<tr>
<td align="center">mkdiv</td>
<td align="center"> 新建文件夹</td>
</tr>
<tr>
<td align="center"> g++ 源文件名</td>
<td align="center">编译源文件，产生 a.out</td>
</tr>
<tr>
<td align="center">./ 文件名</td>
<td align="center">运行 例如：./a.out &lt;输入文件名&gt; 输出文件名</td>
</tr>
<tr>
<td align="center"> control+d</td>
<td align="center"> 中断 a.out 运行</td>
</tr>
<tr>
<td align="center"> nano</td>
<td align="center"> 编写脚本语言 ctrl+o 存储</td>
</tr>
<tr>
<td align="center"> nano ….sh</td>
<td align="center"> 打开</td>
</tr>
<tr>
<td align="center"> bash ….sh</td>
<td align="center"> 运行脚本</td>
</tr>
<tr>
<td align="center"> echo “…$i…”</td>
<td align="center"> 输出语句</td>
</tr>
<tr>
<td align="center"> tar -zxf abc.tar.gz</td>
<td align="center">tar 文件解压</td>
</tr>
<tr>
<td align="center"> ssh <span class="exturl" data-url="bWFpbHRvOiYjeDcyOyYjMTExOyYjeDZmOyYjeDc0OyYjNjQ7JiN4MzE7JiM1NzsmIzUwOyYjNDY7JiM0OTsmI3gzNjsmI3gzODsmI3gyZTsmI3gzMTsmI3gyZTsmI3gzMjsmIzUwOyYjeDMyOw==">root@192.168.1.222<i class="fa fa-external-link-alt"></i></span></td>
<td align="center">以 root 账号远程连接 222 服务器</td>
</tr>
<tr>
<td align="center"> unrar x abc.rar</td>
<td align="center">rar 文件解压，需要安装 rar 工具</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>macOS</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 安装 MySql8</title>
    <url>/Code/MacOS/macos-install-mysql-v8-0-19/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p>因为自己是编程小白，看了很多博文才成功，因此决定写一个适合初学者看的教程，也以便自己以后再用到。 MacOS 安装 MySQL 的方法主要分为两种。分别是：</p>
</blockquote>
<h1 id="一、官网下载安装"><a href="#一、官网下载安装" class="headerlink" title="一、官网下载安装"></a>一、官网下载安装</h1><h2 id="1、首先登陆mysql官网，下载dmg安装包，也就是图片中的第一个。"><a href="#1、首先登陆mysql官网，下载dmg安装包，也就是图片中的第一个。" class="headerlink" title="1、首先登陆mysql官网，下载dmg安装包，也就是图片中的第一个。"></a>1、首先登陆 <code>mysql</code> 官网，下载 <code>dmg</code> 安装包，也就是图片中的第一个。</h2><p><span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC8=">https://dev.mysql.com/downloads/mysql/<i class="fa fa-external-link-alt"></i></span> <a href="https://q.fuocu.cn/images/2020-02-14/08:40:51.png"><img src="https://q.fuocu.cn/images/2020-02-14/08:40:51.png"></a> <a href="https://q.fuocu.cn/images/2020-02-14/08:42:35.png"><img src="https://q.fuocu.cn/images/2020-02-14/08:42:35.png"></a> 点最下面的 <strong>No thanks</strong> 即可。 <a href="https://q.fuocu.cn/images/2020-02-14/08:45:01.png"><img src="https://q.fuocu.cn/images/2020-02-14/08:45:01.png"></a></p>
<blockquote>
<p>下载好了之后，长这样。双击打开。</p>
</blockquote>
<p><a href="https://q.fuocu.cn/images/2020-02-14/08:49:28.png"><img src="https://q.fuocu.cn/images/2020-02-14/08:49:28.png"></a></p>
<blockquote>
<p>再次双击进行安装</p>
</blockquote>
<h2 id="2-下载完成后，点安装，一路点“继续”，直到"><a href="#2-下载完成后，点安装，一路点“继续”，直到" class="headerlink" title="2.下载完成后，点安装，一路点“继续”，直到"></a>2. 下载完成后，点安装，一路点 “继续”，直到</h2><p><a href="https://i.loli.net/2020/02/14/ksVqxNF4TPduafC.png"><img src="https://i.loli.net/2020/02/14/ksVqxNF4TPduafC.png"></a> 这里选择第二个。 初步安装成功，这里自己设置的密码要记住，以后连数据库都要用。</p>
<h2 id="3-如何配置"><a href="#3-如何配置" class="headerlink" title="3.如何配置"></a>3. 如何配置</h2><p>进入系统偏好，打开 <code>mysql</code> 看一下是不是打开的，一般安装默认安装好了就打开的。 是绿色的就代表是开启状态，这个启动选项可以不选。 <a href="https://i.loli.net/2020/02/14/keyfSD8ErwQPnKp.png"><img src="https://i.loli.net/2020/02/14/keyfSD8ErwQPnKp.png"></a> <a href="https://i.loli.net/2020/02/14/l7oiJAS6D5B4zMt.png"><img src="https://i.loli.net/2020/02/14/l7oiJAS6D5B4zMt.png"></a></p>
<h2 id="4-打开终端"><a href="#4-打开终端" class="headerlink" title="4.打开终端"></a>4. 打开终端</h2><p>输入：<code>cd /usr/local/mysql</code>，回车执行 然后输入：<code>sudo vim .bash_profile</code>，回车执行 需要输入 <code>root</code> 用户密码。<code>sudo</code> 是使用 <code>root</code> 用户修改环境变量文件。 进入编辑器后，我们先按”i”，即切换到 “插入” 状态。就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和 <code>WINDOWS</code> 是一样的了。 在文档的最下方输入：<code>export PATH=${PATH}:/usr/local/mysql/bin</code> 然后按 <code>Esc</code> 退出 <code>insert</code> 状态，并在最下方输入:wq 保存退出 (或直接按 shift+zz，或者切换到大写模式按 ZZ，就可以保存退出了)。 输入：<code>source .bash_profile</code> 回车执行，运行环境变量。 再输入 <code>mysql</code> 命令 <code>mysql -u root -p</code>，即可使用。</p>
<h2 id="5-以后每次使用的话，打开终端输入-usr-local-mysql-bin-mysql-u-root-p即可使用。"><a href="#5-以后每次使用的话，打开终端输入-usr-local-mysql-bin-mysql-u-root-p即可使用。" class="headerlink" title="5.以后每次使用的话，打开终端输入/usr/local/mysql/bin/mysql -u root -p即可使用。"></a>5. 以后每次使用的话，打开终端输入 <code>/usr/local/mysql/bin/mysql -u root -p</code> 即可使用。</h2><h1 id="二、使用Homebrew安装MySQL"><a href="#二、使用Homebrew安装MySQL" class="headerlink" title="二、使用Homebrew安装MySQL"></a>二、使用 Homebrew 安装 MySQL</h1><h2 id="1、Homebrew安装"><a href="#1、Homebrew安装" class="headerlink" title="1、Homebrew安装"></a>1、Homebrew 安装</h2><p>macOS 下的 Homebrew 就相当于 CentOS 下的 yum 或者是 Ubuntu 下的 apt-get <code>/usr/bin/ruby&nbsp;-e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</code></p>
<h2 id="2、Homebrew安装与启动MySQL服务"><a href="#2、Homebrew安装与启动MySQL服务" class="headerlink" title="2、Homebrew安装与启动MySQL服务"></a>2、Homebrew 安装与启动 MySQL 服务</h2><ul>
<li><p>安装 mysql</p>
<p>brew install mysql</p>
</li>
<li><p>配置并启动 MySQL 服务</p>
<p>brew tap homebrew/services<br>brew services start mysql</p>
</li>
</ul>
<h2 id="3、修改root密码"><a href="#3、修改root密码" class="headerlink" title="3、修改root密码"></a>3、修改 root 密码</h2><pre><code>mysqladmin -u root password&nbsp;'yourpassword'</code></pre>
<h2 id="4、MySQL安装测试"><a href="#4、MySQL安装测试" class="headerlink" title="4、MySQL安装测试"></a>4、MySQL 安装测试</h2><ul>
<li><p>查看 MySQL 版本</p>
<p>#查看 MySQL 版本<br>mysql -V</p>
<p>#输出示例<br>mysql Ver 8.0.19 for osx10.15 on x86_64 (Homebrew)</p>
</li>
<li><p>MySQL shell 测试</p>
<p>#进入 MySQL shell<br>mysql -u root -p</p>
<p>#成功进入会输出以下信息<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 12<br>Server version: 8.0.12 Homebrew</p>
<p>#查看数据库<br>mysql&gt; show databases;</p>
<p>#退出<br>mysql&gt; exit;</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Code</category>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>APP</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 终端命令</title>
    <url>/MacOS/macos-terminal/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h1 id="1-切换到其他路径"><a href="#1-切换到其他路径" class="headerlink" title="1.切换到其他路径"></a>1. 切换到其他路径</h1><blockquote>
<p>如果你想将当前 command line 会话切换到其他目录，需要用到三个命令：pwd，ls 和 cd。</p>
<ul>
<li>pwd 的含义是 “print working directory”，会显示当前目录的绝对路径。</li>
<li>ls 的含义是 “list directory contents”，它会列出当前目录的内容。这个命令还有其他参数可选。</li>
<li>cd 的含义是 “change directory”，它会改变当前目录到你指定的目录。如果你不指定，则会返回你的 home folder。</li>
</ul>
</blockquote>
<p>命令</p>
<p>用途</p>
<p>pwd</p>
<p>当前工作目录</p>
<p>cd（不加参数）</p>
<p>进 root</p>
<p>cd（folder）</p>
<p>进入文件夹</p>
<p>cd ..</p>
<p>上级目录</p>
<p>cd ~</p>
<p>返回 root</p>
<p>cd -</p>
<p>返回上一个访问的目录</p>
<p>rm 文件名</p>
<p>删除</p>
<p>cat 文件名 (/less)</p>
<p>在终端下查看文件</p>
<p>ls</p>
<p>列出目录下所有文件</p>
<p>cp</p>
<p>文件名 目标目录 将文件拷贝到目标目录下</p>
<p>~ 代表 root　</p>
<p>　如：~/Document/CPP2/</p>
<p>mkdiv</p>
<p>新建文件夹</p>
<p>g++ 源文件名</p>
<p>编译源文件，产生 a.out</p>
<p>./ 文件名</p>
<p>运行 例如：./a.out &lt;输入文件名&gt; 输出文件名</p>
<p>control+d</p>
<p>中断 a.out 运行</p>
<p>nano</p>
<p>编写脚本语言 ctrl+o 存储</p>
<p>nano ….sh</p>
<p>打开</p>
<p>bash ….sh</p>
<p>运行脚本</p>
<p>echo “…$i…”</p>
<p>输出语句</p>
<p>tar -zxf abc.tar.gz</p>
<p>tar 文件解压</p>
<p>ssh <span class="exturl" data-url="bWFpbHRvOiYjMTE0OyYjMTExOyYjMTExOyYjeDc0OyYjeDQwOyYjNDk7JiM1NzsmIzUwOyYjeDJlOyYjNDk7JiM1NDsmIzU2OyYjNDY7JiM0OTsmI3gyZTsmI3gzMjsmIzUwOyYjeDMyOw==">root@192.168.1.222<i class="fa fa-external-link-alt"></i></span></p>
<p>以 root 账号远程连接 222 服务器</p>
<p>unrar x abc.rar</p>
<p>rar 文件解压，需要安装 rar 工具</p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MD 语法笔记</title>
    <url>/Windows/md-language/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h1 id="1-文字收缩"><a href="#1-文字收缩" class="headerlink" title="1.文字收缩"></a>1. 文字收缩</h1>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>md 语法笔记</title>
    <url>/uncategorized/md%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note default"><p>md 语法笔记</p>
</div>

<a id="more"></a>

<hr>
<h1 id="1-文字收缩"><a href="#1-文字收缩" class="headerlink" title="1.文字收缩"></a>1. 文字收缩</h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;details&gt;</span><br><span class="line">&lt;summary&gt;展开查看&lt;/summary&gt;</span><br><span class="line">&lt;pre&gt;</span><br><span class="line">电视台文体</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS8.1 64 位如何修改软件源</title>
    <url>/Linux/modify-software-source-in-centos-8-1-64-bit/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="第一步：备份，以免出错后可以恢复。"><a href="#第一步：备份，以免出错后可以恢复。" class="headerlink" title="第一步：备份，以免出错后可以恢复。"></a>第一步：备份，以免出错后可以恢复。</h2><p><code>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</code></p>
<h2 id="第二步：下载新的CentOS-Base-repo到-etc-yum-repos-d"><a href="#第二步：下载新的CentOS-Base-repo到-etc-yum-repos-d" class="headerlink" title="第二步：下载新的CentOS-Base.repo到/etc/yum.repos.d/"></a>第二步：下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/</h2><h3 id="阿里云："><a href="#阿里云：" class="headerlink" title="阿里云："></a>阿里云：</h3><ul>
<li>CentOS 5 :&nbsp;<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo</code></li>
<li>CentOS 6 :<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</code></li>
<li>CentOS 7 :&nbsp;<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>
<li>CentOS 8 : <code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</code></li>
</ul>
<h3 id="网易云："><a href="#网易云：" class="headerlink" title="网易云："></a>网易云：</h3><ul>
<li>CentOS 5 :&nbsp;<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS5-Base-163.repo</code></li>
<li>CentOS 6 :<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS6-Base-163.repo</code></li>
<li>CentOS 7 :&nbsp;<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</code></li>
</ul>
<blockquote>
<p>网易云目前还没有 CentOS 8 的软件源。</p>
</blockquote>
<h3 id="当然，除了网易和阿里之外，国内还有其他不错的yum源，比如中科大和搜狐的等，大家可以根据自己需求下载"><a href="#当然，除了网易和阿里之外，国内还有其他不错的yum源，比如中科大和搜狐的等，大家可以根据自己需求下载" class="headerlink" title="当然，除了网易和阿里之外，国内还有其他不错的yum源，比如中科大和搜狐的等，大家可以根据自己需求下载"></a>当然，除了网易和阿里之外，国内还有其他不错的 <code>yum</code> 源，比如中科大和搜狐的等，大家可以根据自己需求下载</h3><ul>
<li>中科大的 Linux 安装镜像源：<span class="exturl" data-url="aHR0cDovL2NlbnRvcy51c3RjLmVkdS5jbi8=">http://centos.ustc.edu.cn/<i class="fa fa-external-link-alt"></i></span></li>
<li>搜狐的 Linux 安装镜像源：<span class="exturl" data-url="aHR0cDovL21pcnJvcnMuc29odS5jb20v">http://mirrors.sohu.com/<i class="fa fa-external-link-alt"></i></span></li>
<li>北京首都在线科技：<span class="exturl" data-url="aHR0cDovL21pcnJvcnMueXVuLWlkYy5jb20v">http://mirrors.yun-idc.com/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="第三步：运行以下命令生成缓存"><a href="#第三步：运行以下命令生成缓存" class="headerlink" title="第三步：运行以下命令生成缓存"></a>第三步：运行以下命令生成缓存</h2><p>yum clean all<br>yum makecache</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>技巧</tag>
        <tag>CentOS</tag>
        <tag>软件源</tag>
      </tags>
  </entry>
  <entry>
    <title>修改宝塔默认 404 页面</title>
    <url>/Code/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/modify-the-default-404-page-of-bt/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>如果你使用的是宝塔面板，发现网站的 404 页面不是主题自带的而是宝塔的，原因是在网站配置文件里默认开启了 Nginx 默认 4O4 页面，所以关闭就好。</p>
<p>在网站配置文件中找到，删除或者注释即可！</p>
<p>修改的方式很简单。在宝塔面板里面，到网站 -&gt; 选择你的网站 修改 -&gt; 配置文件 这里有 nginx 的代码，找寻 404 的配置:</p>
<p>error_page 404 /404.html;<br>error_page 502 /502.html;</p>
<p>然后移除或是加 #</p>
<p>#error_page 404 /404.html;<br>#error_page 502 /502.html;</p>
<p>安全重启或重启 nginx, wordpress 的 404 错误页面就可以正常运行了！</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS 的作用以及修改 DNS 的方法</title>
    <url>/NetWork/dns-e7-9a-84-e4-bd-9c-e7-94-a8-e4-bb-a5-e5-8f-8a-e4-bf-ae-e6-94-b9dns-e7-9a-84-e6-96-b9-e6-b3-95/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="1、DNS的作用及修改DNS的方法"><a href="#1、DNS的作用及修改DNS的方法" class="headerlink" title="1、DNS的作用及修改DNS的方法"></a>1、DNS 的作用及修改 DNS 的方法</h2><h3 id="1-1-DNS的作用"><a href="#1-1-DNS的作用" class="headerlink" title="1.1.DNS的作用"></a>1.1.DNS 的作用</h3><p>DNS 就是将域名映射成 ip 的分布式数据库服务器，它的作用如下图：</p>
<p><img src="https://cdn.fuocu.cn/wp-content/uploads/2020/02/1582451509-683cdebe719ed41.png"></p>
<h3 id="1-2-修改DNS的方法"><a href="#1-2-修改DNS的方法" class="headerlink" title="1.2.修改DNS的方法"></a>1.2. 修改 DNS 的方法</h3><p>常用的 DNS 服务器</p>
<ol>
<li>114.114.114.114<ul>
<li>114.114.114.114 是国内移动、电信和联通通用的 DNS，手机和电脑端都可以使用，干净无广告，解析成功率相对来说更高，国内用户使用的比较多，而且速度相对快、稳定，是国内用户上网常用的 DNS。</li>
</ul>
</li>
<li>8.8.8.8<ul>
<li>8.8.8.8 是 GOOGLE 公司提供的 DNS，该地址是全球通用的，相对来说，更适合国外以及访问国外网站的用户使用。</li>
</ul>
</li>
</ol>
<h4 id="1-2-1-修改本机的DNS"><a href="#1-2-1-修改本机的DNS" class="headerlink" title="1.2.1.修改本机的DNS"></a>1.2.1. 修改本机的 DNS</h4><p>修改本机 DNS 只是影响本机的域名解析服务器，而不影响局域网中其它主机的 DNS。</p>
<ul>
<li>Windows</li>
</ul>
<p>修改方法为：网络和共享中心选择” 更改适配器设置”——&gt; 右键” 无线网络连接” 属性 ——&gt; 双击 “internet 协议（TCP/IPV4）”</p>
<p><a href="https://i.fuocu.cn/images/2020/02/23/3ad1a2f427504ab2e268f55a9d7e0b80.png"><img src="https://i.fuocu.cn/images/2020/02/23/3ad1a2f427504ab2e268f55a9d7e0b80.png"></a></p>
<p>但是需要注意的一点是，更改完本机 dns 之后需要打开命令提示符，输入 ipconfig /flushdns 这条命令来刷新 dns，否则更改完之后短时间之内还是以之前的 dns 来解析。</p>
<ul>
<li>MacOS</li>
</ul>
<p>修改方法为：<strong>系统偏好设置</strong>选择” 网络”——&gt;” 高级”——&gt; “DNS”</p>
<p><a href="https://i.fuocu.cn/images/2020/02/23/fb992864d49e018f1b34fb95adff85f5.png"><img src="https://i.fuocu.cn/images/2020/02/23/fb992864d49e018f1b34fb95adff85f5.png"></a></p>
<p>点击左下角的 “+” 号，输入即可。</p>
<h4 id="1-2-2-修改路由的DNS"><a href="#1-2-2-修改路由的DNS" class="headerlink" title="1.2.2.修改路由的DNS"></a>1.2.2. 修改路由的 DNS</h4><p>修改路由器的 dns 则是把连接路由器的所有终端进行修改，该修改项是存在于 <code>dhcp</code> 信息里，因此每个连接该路由器的终端都会获取到设置的 <code>dns</code>。但需要注意一点，若终端已连接路由器，路由器在更改 dns 之后无重启操作，那么之前连接的终端依然以之前获取的 dns 来解析，除非路由器进行重启，或者让终端进行重新连接。</p>
<p>修改路由 DNS 的方法：打开网址<span class="exturl" data-url="aHR0cDovLzE5Mi4xNjguMS4xLw=="> 192.168.1.1/<i class="fa fa-external-link-alt"></i></span>以管理员密码登录到路由器管理页面，做下图设置：</p>
]]></content>
      <categories>
        <category>NetWork</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>IP</tag>
        <tag>MacOS</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 数据库基础命令大全</title>
    <url>/Linux/MacOS/Windows/mysql-database-basic-commands/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="1、连接Mysql"><a href="#1、连接Mysql" class="headerlink" title="1、连接Mysql"></a>1、连接 Mysql</h2><ul>
<li>格式：</li>
</ul>
<p>mysql -h 主机地址 -u 用户名 -p 用户密码</p>
<ul>
<li>本地</li>
</ul>
<p>mysql  -utaoyali -ptaoyali</p>
<ul>
<li>远程</li>
</ul>
<p>mysql  -h192.168.110.110 -utaoyali -ptaoyali</p>
<blockquote>
<p>注意用户名前可以有空格也可以没有空格，但是密码前必须没有空格，否则让你重新输入密码。</p>
</blockquote>
<h2 id="2、修改密码"><a href="#2、修改密码" class="headerlink" title="2、修改密码"></a>2、修改密码</h2><ul>
<li>格式：</li>
</ul>
<p>mysqladmin -u 用户名 -p 旧密码 password 新密码</p>
<ul>
<li>给 root 加个密码 ab12</li>
</ul>
<p>mysqladmin -u root -password ab12<br>  注：因为开始时 root 没有密码，所以 - p 旧密码一项就可以省略了。 如果进入了 mysql 后想修改密码，就直接用 mysql 语句就好了：<br>set PASSWORD=PASSWORD (“123”); 注意 mysql 语句以分号结束</p>
<ul>
<li>再将 root 的密码改为 djg345</li>
</ul>
<p>mysqladmin -u root -p ab12 password djg345</p>
<h2 id="3、增加新用户"><a href="#3、增加新用户" class="headerlink" title="3、增加新用户"></a>3、增加新用户</h2><blockquote>
<p>注意：和上面不同，下面的因为是 MYSQL 环境中的命令，所以后面都带一个分号作为命令结束符</p>
</blockquote>
<ul>
<li>格式：</li>
</ul>
<p>grant select on 数据库.* to 用户名 @登录主机 identified by “密码”</p>
<ul>
<li>增加一个用户 <code>test1</code> 密码为 <code>abc</code>，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用 <code>root</code> 用户连入 <code>MYSQL</code>，然后键入以下命令：</li>
</ul>
<p>grant select,insert,update,delete on <em>.</em> to [email=test1@”%]test1@”%[/email]” Identified by “abc”; </p>
<blockquote>
<p>但增加的用户是十分危险的，你想如某个人知道 test1 的密码，那么他就可以在 internet 上的任何一台电脑上登录你的 mysql 数据库并对你的数据可以为所欲为了，解决办法见？。</p>
</blockquote>
<ul>
<li>增加一个用户 <code>test2</code> 密码为 <code>abc</code>, 让他只可以在 <code>localhost</code> 上登录，并可以对数据库 <code>mydb</code> 进行查询、插入、修改、删除的操作 (<code>localhost</code> 指本地主机，即 <code>MYSQL</code> 数据库所在的那台主机), 这样用户即使用知道 test2 的密码，他也无法从 <code>internet</code> 上直接访问数据库，只能通过 <code>MYSQL</code> 主机上的 <code>web</code> 页来访问了。</li>
</ul>
<p>grant select,insert,update,delete on mydb.* to [email=test2@localhost]test2@localhost[/email] identified by “”;</p>
<h2 id="4、数据库操作"><a href="#4、数据库操作" class="headerlink" title="4、数据库操作"></a>4、数据库操作</h2><ul>
<li>创建数据库</li>
</ul>
<p>create database database_name; </p>
<p>修改指定数据库中所有 <code>varchar</code> 类型的表字段的字符集为 <code>UTF8</code>，并将排序规则修改为 <code>utf8_general_ci</code></p>
<p>SELECT CONCAT(‘ALTER TABLE <code>', table\_name, '</code> MODIFY <code>', column\_name, '</code> ‘, DATA_TYPE, ‘(‘, CHARACTER_MAXIMUM_LENGTH, ‘) CHARACTER SET UTF8 COLLATE utf8_general_ci’, (CASE WHEN IS_NULLABLE = ‘NO’ THEN ‘ NOT NULL’ ELSE ‘’ END), ‘;’)<br>FROM information_schema.COLUMNS<br>WHERE TABLE_SCHEMA = ‘databaseName’<br>AND DATA_TYPE = ‘varchar’<br>AND<br>(<br>    CHARACTER_SET_NAME != ‘utf8’<br>    OR<br>    COLLATION_NAME != ‘utf8_general_ci’<br>);</p>
<p>修改指定数据库中所有数据表的字符集为 <code>UTF8</code>，并将排序规则修改为 <code>utf8_general_ci</code></p>
<p>SELECT CONCAT(‘ALTER TABLE ‘, table_name, ‘ CONVERT TO CHARACTER SET  utf8 COLLATE utf8_unicode_ci;’)<br>FROM information_schema.TABLES<br>WHERE TABLE_SCHEMA = ‘databaseName’</p>
<h2 id="5、数据表数据操作"><a href="#5、数据表数据操作" class="headerlink" title="5、数据表数据操作"></a>5、数据表数据操作</h2><ul>
<li>显示所有的数据库</li>
</ul>
<p>show databases;</p>
<ul>
<li>进入 dataBase_name 数据库</li>
</ul>
<p>use dataBase_name;</p>
<ul>
<li>显示 <code>dataBase_name</code> 数据库的所有表</li>
</ul>
<p>show tables;</p>
<ul>
<li>显示 table_name 表的字段信息</li>
</ul>
<p>desc  table_name;</p>
<ul>
<li>创建表</li>
</ul>
<p>create table  MIFit_Image (name char(100), path char(100), count int(10), firstName char(100), firstMD5 char(100), secondName char(100), secondMD5 char(100), thirdName char(100), thirdMD5 char(100)); </p>
<ul>
<li>修改表名</li>
</ul>
<p>rename table MIFit_Image to MIFit_Image_New</p>
<ul>
<li>删除表</li>
</ul>
<p>drop table tableName; </p>
<ul>
<li>插入数据</li>
</ul>
<p>insert into MIFit_Image (name, path, count, firstName, firstMD5, secondName, secondMD5, thirdName, thirdMD5) VALUES (‘test’, ‘test’, 1, ‘name1’, ‘md1’, ‘name2’, ‘md2’, ‘name3’, ‘md3’); </p>
<ul>
<li>查询表中的数据</li>
</ul>
<p>select * from MIFit_Image;</p>
<p>select * from MIFit_Image where name = ‘test’;</p>
<p>select * from MyClass order by id limit 0,2;</p>
<ul>
<li>查询数据库中的重复数据 （ | b71edca50989258e68fadcc3cb9bc689 | 2 | ）</li>
</ul>
<p>select firstMD5, count(*) as count from MIFit_Image group by firstMD5 having count &gt; 1; </p>
<ul>
<li>查询重复数据的其它字段的数据</li>
</ul>
<p>select folderName, path, firstMD5 from MIFit_Image where firstMD5 in (select firstMD5 from MIFit_Image group by firstMD5 having count(firstMD5) &gt; 1); </p>
<ul>
<li>更新数据</li>
</ul>
<p>update MIFit_Image set folderName =’Mary’ where id=1; </p>
<ul>
<li>删除数据</li>
</ul>
<p>delete from MIFit_Image where folderName = ‘test’; </p>
<h2 id="6、数据表字段操作"><a href="#6、数据表字段操作" class="headerlink" title="6、数据表字段操作"></a>6、数据表字段操作</h2><ul>
<li>添加字段 （int 自增 不为 null 主键）</li>
</ul>
<p>alter table MIFit_Image add id int auto_increment not null primary key; </p>
<ul>
<li>修改字段的顺序 (id 放置最前)</li>
</ul>
<p>ALTER TABLE 表名 MODIFY 字段名 1 数据类型 FIRST ｜ AFTER 字段名 2;<br>其中：</p>
<p>字段名 1：表示需要修改位置的字段的名称。<br>数据类型：表示 “字段名 1” 的数据类型。<br>FIRST：指定位置为表的第一个位置。<br>AFTER 字段名 2：指定 “字段名 1” 插入在 “字段名 2” 之后。</p>
<p>alter table MIFit_Image modify id int first;</p>
<p>alter table MIFit_Image modify id int after name;</p>
<ul>
<li>移除 id 主键标志</li>
</ul>
<p>alter table MIFit_Image modify id int, drop primary key; </p>
<ul>
<li>修改字段名 name 为 folderName</li>
</ul>
<p>alter table MIFit_Image change name folderName char(100); </p>
<ul>
<li>删除字段</li>
</ul>
<p>alter table testTable drop folderName; </p>
<ul>
<li><p>加索引</p>
<p>alter table MIFit_Image add index indexName (folderName); </p>
</li>
<li><p>删除索引</p>
</li>
</ul>
<p>alter table MIFit_Image drop index indexName;</p>
<p>更多命令参考：<br><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8yOWEzYTU1MGVlZWU=">http://www.jianshu.com/p/29a3a550eeee<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>MacOS</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>终端</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>OCC 命令给 ownCloud/Nextcloud 手动添加文件</title>
    <url>/Linux/occ-command-to-manually-add-files-to-owncloud-nextcloud/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>有时候，直接通过 Web 页面上传文件并不那么方便，于是有的朋友就直接把文件上传到服务器里，然后拷贝到 data 目录下，打开 <code>ownCloud</code>，却还是之前的文件。 这是因为虽然上传了文件，但是 <code>ownCloud/Nextcloud</code> 的数据库里并没有这个文件的信息。文件信息都被存储在数据库的 <code>oc_filecach</code>e 表 <a href="https://i.loli.net/2020/02/22/6zRqSpc3yDWGrJk.png"><img src="https://i.loli.net/2020/02/22/6zRqSpc3yDWGrJk.png"></a></p>
<h2 id="使用OCC命令更新文件索引。"><a href="#使用OCC命令更新文件索引。" class="headerlink" title="使用OCC命令更新文件索引。"></a>使用 OCC 命令更新文件索引。</h2><p>occ 有三个用于管理 Nextcloud 中文件的命令：<br>files<br>files:cleanup #清楚文件缓存<br>files:scan #重新扫描文件系统<br>files:transfer-ownership #将所有文件和文件夹都移动到另一个文件夹</p>
<ul>
<li>我们需要使用</li>
</ul>
<p>files:scan</p>
<ul>
<li>来扫描新文件。</li>
</ul>
<p>格式:<br>files:scan [-p|–path=”…”] [-q|–quiet] [-v|vv|vvv –verbose] [–all]<br>[user_id1] … [user_idN]<br>参数:<br>user_id #扫描所指定的用户（一个或多个，多个用户 ID 之间要使用空格分开）的所有文件<br>选项:<br>–path #限制扫描路径<br>–all #扫描所有已知用户的所有文件<br>–quiet #不输出统计信息<br>–verbose #在扫描过程中显示正在处理的文件和目录<br>–unscanned #仅扫描以前未扫描过的文件</p>
<ul>
<li>以下是一个具体的命令示例：</li>
</ul>
<p>sudo -u www-data php occ files:scan –all #扫描所有用户的所有文件<br>sudo -u www php /www/wwwroot/ 站点文件夹 /occ files:scan –all #宝塔面板</p>
<ul>
<li>执行命令后未进行扫描并列出扫描信息。</li>
</ul>
<p><a href="https://i.loli.net/2020/02/22/gD6mb7UzQVHBCyi.png"><img src="https://i.loli.net/2020/02/22/gD6mb7UzQVHBCyi.png"></a> &nbsp;</p>
<ul>
<li>如果不想显示扫描信息，可以在后面加上 <code>--quiet</code></li>
<li>如下：</li>
</ul>
<p>sudo -u www-data php occ files:scan –all –quiet<br>sudo -u www php /www/wwwroot/ 站点文件夹 /occ files:scan&nbsp;–all&nbsp;–quiet #宝塔面板</p>
<h2 id="指定扫描位置"><a href="#指定扫描位置" class="headerlink" title="指定扫描位置"></a>指定扫描位置</h2><ul>
<li>总是扫描全部信息并不是那么有必要，还会白白消耗服务器资源。</li>
</ul>
<h3 id="指定扫描的用户"><a href="#指定扫描的用户" class="headerlink" title="指定扫描的用户"></a>指定扫描的用户</h3><ul>
<li>列出所有用户：</li>
</ul>
<p>sudo -u www-data php occ user:list<br>sudo -u www php /www/wwwroot/ 站点文件夹 /occ user:list #宝塔面板</p>
<p><a href="https://i.loli.net/2020/02/22/ebnfvP7HIxsZQCD.png"><img src="https://i.loli.net/2020/02/22/ebnfvP7HIxsZQCD.png"></a></p>
<ul>
<li>为指定用户扫描文件：</li>
</ul>
<p>sudo -u www-data php occ files:scan 指定用户<br>sudo -u www php /www/wwwroot/ 站点文件夹 /occ files:scan&nbsp;指定用户 #宝塔面板</p>
<h3 id="指定扫描目录"><a href="#指定扫描目录" class="headerlink" title="指定扫描目录"></a>指定扫描目录</h3><ul>
<li>当使用 <code>--path</code> 选项时，该路径必须包含以下部分：</li>
</ul>
<p>“user_id/files/path”<br>#或<br>“user_id/files/mount_name”<br>#或<br>“user_id/files/mount_name/path”</p>
<ul>
<li>其中，<code>/files/</code> 是必须要加上的，不可忽略。</li>
<li>示例：</li>
</ul>
<p>sudo -u www-data php occ files:scan –path=”/ChengYe/files/Photos” #指向用户 ChengYe 的 Photos 文件夹<br>sudo -u www php /www/wwwroot/ 站点文件夹 /occ files:scan –path=”/ 指定用户 /files/Photos” #指向指定用户的 Photos 文件夹 #宝塔面板</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JnbGVhZi5jb20vMjQwMC5odG1s">https://www.orgleaf.com/2400.html<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>PHP</tag>
        <tag>NextCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Photostop 程序把 psd 格式的文件导出为其他图片格式</title>
    <url>/Windows/photostop-export/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p>当我们在用 PS 的时候，保存文件时会发现文件时 <code>psd</code> 后缀的，但是我们有时会用到 <code>png</code> 或 <code>jpg</code> 格式的文件，因为它们便于预览。这时我们就会把它转换成 <code>png</code> 或 <code>jpg</code> 格式的文件。</p>
</blockquote>
<h3 id="一、首先用PS打开想要转换的文档。"><a href="#一、首先用PS打开想要转换的文档。" class="headerlink" title="一、首先用PS打开想要转换的文档。"></a>一、首先用 <code>PS</code> 打开想要转换的文档。</h3><h3 id="二、点击文件-gt-导出-gt-导出为-gt"><a href="#二、点击文件-gt-导出-gt-导出为-gt" class="headerlink" title="二、点击文件->导出->导出为->"></a>二、点击<code>文件-&gt;导出-&gt;导出为-&gt;</code></h3><h3 id="三、选择导出格式"><a href="#三、选择导出格式" class="headerlink" title="三、选择导出格式"></a>三、选择导出格式</h3><p><img src="https://i.loli.net/2019/11/07/kjJ8FyYK9GNrpmM.png" alt="1.选择导出格式" title="选择导出格式"></p>
<h3 id="四、选择导出位置"><a href="#四、选择导出位置" class="headerlink" title="四、选择导出位置"></a>四、选择导出位置</h3><p><img src="https://i.loli.net/2019/11/07/uA1KXJsH2m73oaP.png" alt="2.选择导出位置" title="选择导出位置"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>Photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔面板搭建 NextCloud 安全问题及插件推荐</title>
    <url>/Linux/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/nextcloud-bug-in-pagoda-panel-building-and-solutions/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>终于要写这个了啊 采用 LAMP 架构安装 Nextcloud 私有云盘是一个很简单的过程，但是由于是开源软件，难免会存在一些 BUG 和小问题，这里罗列了安装过程中可能会出现的一些问题并汇总，仅供参考。</p>
<ul>
<li>使用宝塔面板和 Nextcloud 搭建私有云 / 网盘图文教程：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnVvY3UuY24vYXJjaGl2ZXMvdXNlLXRoZS1wYWdvZGEtcGFuZWwtYW5kLW5leHRjbG91ZC10by1idWlsZC1hLXByaXZhdGUtY2xvdWQtb25saW5lLWRpc2stZ3JhcGhpYy10dXRvcmlhLw==">https://www.fuocu.cn/archives/use-the-pagoda-panel-and-nextcloud-to-build-a-private-cloud-online-disk-graphic-tutoria/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<blockquote>
<p>先看一下我与到的问题</p>
</blockquote>
<p><a href="https://i.loli.net/2020/02/19/STcQfVUZYKCIe9B.png"><img src="https://i.loli.net/2020/02/19/STcQfVUZYKCIe9B.png"></a></p>
<blockquote>
<p>当时看到的时候头都大了，问题太多了，下面咱们来一一解决。</p>
</blockquote>
<h2 id="1、红色问题"><a href="#1、红色问题" class="headerlink" title="1、红色问题"></a>1、红色问题</h2><blockquote>
<p>您的数据目录和文件可以从互联网直接访问。<code>.htaccess</code> 文件不起作用。强烈建议您配置 <code>Web</code> 服务器，以便数据目录不再可访问，或者您可以将数据目录移动到 <code>Web</code> 服务器文档根目录。</p>
</blockquote>
<p>解决方法是修改 nextcloud 绑定的网站配置文件，添加 nextcloud 常用目录禁止访问即可，加入下列代码</p>
<p>location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {<br>  deny all;<br>}</p>
<p><a href="https://i.loli.net/2020/02/19/V7ZwytdpWP2L6Rk.png"><img src="https://i.loli.net/2020/02/19/V7ZwytdpWP2L6Rk.png"></a></p>
<h2 id="2、黄色问题"><a href="#2、黄色问题" class="headerlink" title="2、黄色问题"></a>2、黄色问题</h2><blockquote>
<p>PHP 的安装似乎不正确，无法访问系统环境变量。<code>getenv("PATH")</code> 函数测试返回了一个空值。 请参照<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm5leHRjbG91ZC5jb20vc2VydmVyLzE4L2dvLnBocD90bz1hZG1pbi1waHAtZnBt">安装说明文档 ↗<i class="fa fa-external-link-alt"></i></span>中的 <code>PHP</code> 配置说明查阅您服务器的 PHP 配置信息，特别是在使用 <code>php-fpm</code> 时。</p>
</blockquote>
<p>从宝塔文件管理，打开 <code>/www/server/php/74/etc/php-fpm.conf</code>，在其尾部添加一行</p>
<p>env[PATH] = /usr/local/bin:/usr/bin:/bin:/usr/local/php/bin</p>
<p>保存并重启 PHP 即可解决该问题。 <a href="https://i.loli.net/2020/02/19/qcpvSMj8BO9tF5n.png"><img src="https://i.loli.net/2020/02/19/qcpvSMj8BO9tF5n.png"></a></p>
<blockquote>
<p>PHP 内存限制低于建议值 <code>512MB</code>。</p>
</blockquote>
<p>在<strong>宝塔 PHP 配置修改</strong>中把 <strong>脚本运行内存</strong> 修改为 512MB 以上就行。这里我修改为 <strong>1024MB</strong>。然后点击保存即可。 <a href="https://i.loli.net/2020/02/19/N1dTyMnQRXZujsI.png"><img src="https://i.loli.net/2020/02/19/N1dTyMnQRXZujsI.png"></a></p>
<blockquote>
<p>HTTP 请求头 “<strong>X-Content-Type-Options</strong>“ 没有配置为 “<code>nosniff</code>“。这是一个潜在的安全或隐私风险，我们建议您调整这项设置。</p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>MySQL</tag>
        <tag>NextCloud</tag>
      </tags>
  </entry>
  <entry>
    <title>photostop 程序把 psd 格式的文件导出为其他图片格式</title>
    <url>/Windows/%E6%8A%80%E5%B7%A7/photostop%E7%A8%8B%E5%BA%8F%E6%8A%8Apsd%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA%E4%B8%BA%E5%85%B6%E4%BB%96%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<div class="note default"><p>photostop 程序把 psd 格式的文件导出为其他图片格式</p>
</div>

<a id="more"></a>

<hr>
<blockquote>
<p>当我们在用 PS 的时候，保存文件时会发现文件时 <code>psd</code> 后缀的，但是我们有时会用到 <code>png</code> 或 <code>jpg</code> 格式的文件，因为它们便于预览。这时我们就会把它转换成 <code>png</code> 或 <code>jpg</code> 格式的文件。</p>
</blockquote>
<h3 id="一、首先用PS打开想要转换的文档。"><a href="#一、首先用PS打开想要转换的文档。" class="headerlink" title="一、首先用PS打开想要转换的文档。"></a>一、首先用 <code>PS</code> 打开想要转换的文档。</h3><h3 id="二、点击文件-gt-导出-gt-导出为-gt"><a href="#二、点击文件-gt-导出-gt-导出为-gt" class="headerlink" title="二、点击文件->导出->导出为->"></a>二、点击<code>文件-&gt;导出-&gt;导出为-&gt;</code></h3><h3 id="三、选择导出格式"><a href="#三、选择导出格式" class="headerlink" title="三、选择导出格式"></a>三、选择导出格式</h3><p>  <img src="https://i.loli.net/2019/11/07/kjJ8FyYK9GNrpmM.png" alt="1.选择导出格式" title="选择导出格式"></p>
<h3 id="四、选择导出位置"><a href="#四、选择导出位置" class="headerlink" title="四、选择导出位置"></a>四、选择导出位置</h3><p>  <img src="https://i.loli.net/2019/11/07/uA1KXJsH2m73oaP.png" alt="2.选择导出位置" title="选择导出位置"></p>
]]></content>
      <categories>
        <category>Windows</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员会鄙视 PHP，为什么不鄙视它？</title>
    <url>/Code/PHP/Python/php-is-the-best-language/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>2001 年 7 月，<code>PHP</code> 官方开发文档中，出现了一句话：</p>
<blockquote>
<p>Because PHP is the best language ever,ever.It’s fast,very powerful,and free.</p>
</blockquote>
<p><a href="https://i.loli.net/2020/02/02/uosID49EqHdY8Jr.jpg"><img src="https://i.loli.net/2020/02/02/uosID49EqHdY8Jr.jpg"></a> 后来，一则著名的笑话诞生了：</p>
<blockquote>
<p>某女：你能让这个论坛的人都吵起来，我就跟你约会。 某程序员：PHP 是最好的语言。于是论坛炸锅了，各种吵架。 某女：服了你了，我们走吧。 某程序员：今天不行，我一定要说服他们，PHP 必须是最好的语言。</p>
</blockquote>
<p>自此，PHP 成了众多程序员们调侃的编程语言。 <a href="https://i.loli.net/2020/02/02/FL2B51uKhrCOJqw.jpg"><img src="https://i.loli.net/2020/02/02/FL2B51uKhrCOJqw.jpg"></a> 有这么一门编程语言，它就没那么 “不幸” 了，相反的，却受到了皇帝般的待遇，编程语言鄙视链中，却看不到它的身影。 著名网站 <code>Hired</code> 曾发布了一份 <strong>“2019 年软件工程师现状”</strong> 的报告，该报告由 Hired 数据科学团队收集和分析，覆盖了 13 个城市的 98000 名求职的软件工程师，反映了超过 170000 个面试申请和过去一年的工作机会。此外，他们还收集了来自 <code>Hired</code> 凭条上 700 多名团建工程师的调研回复，以了解开发人员的工作偏好。 <a href="https://i.loli.net/2020/02/02/XEzfNwaHjZyh2Yl.jpg"><img src="https://i.loli.net/2020/02/02/XEzfNwaHjZyh2Yl.jpg"></a> 报告指出，全球区块链工程师的需求上涨了 <code>517%</code>，需求量最高的编程语言 <code>Golang</code>，超过 <code>1/5</code> 的开发者通过自学掌握编程，所有开发者最想学习的技术是机器学习。 报告还特意指明，<strong>所有开发者最爱的编程语言是 <code>Python</code>**。 <a href="https://i.loli.net/2020/02/02/KxhuUmGStgZ2Xal.jpg"><img src="https://i.loli.net/2020/02/02/KxhuUmGStgZ2Xal.jpg"></a> 我们不可否认，真的鄙视 PHP 的人，确实存在，而且不少，但更多的人，只是在调侃它。</strong><code>Python</code> 很强，<code>PHP</code> 也不例外。** 为什么 <code>Python</code> 的质疑那么少呢？ 当一个人的优点太多时，那些小不丁的缺点，自然也就被忽略了。 首先，<code>Python</code> 代码非常的简洁，很符合 “优雅的代码” 这一标准，对于以 “用代码改变世界” 为理想的工程师们，<code>Python</code> 的出现，简直就是福音。 去年有一串 <code>Java</code> 代码火了，号称 <code>AI</code> 的核心代码。每当你输出一个问题，这个程序就会去掉问号，自动添加感叹号，于是就变成了： <a href="https://i.loli.net/2020/02/02/qYr4xcWJmVK2UMv.jpg"><img src="https://i.loli.net/2020/02/02/qYr4xcWJmVK2UMv.jpg"></a> 再一次证明了，人类的本质是复读机…… 可以清楚的看到，用 <code>Java</code> 实现这一功能，代码量还是有点多的。那么用 <code>Python</code>，几行代码可以实现呢？ 一行就够了！ <a href="https://i.loli.net/2020/02/02/Lu7RkNcsBT9ieSq.jpg"><img src="https://i.loli.net/2020/02/02/Lu7RkNcsBT9ieSq.jpg"></a> 其次，<code>Python</code> 简单易学，入门门槛低，这也是很多人喜欢它的原因。 一个程序员，一般花上一周的时间，就可以掌握它。即便是零基础、初学编程的人，也只需要两三个月的时间，学习成本远低于其他编程语言。 代码简洁，学习成本低，如果能做到的事很少，肯定也没什么人学，<code>Python</code> 却同时具备了这些优点。 <code>Python</code> 可以做很多事，做爬虫、开发游戏、数据处理、人工智能，机器学习，Web 开发，都是 <code>Python</code> 比较常见的应用领域。 <code>Python</code> 几乎无所不能。 这么好的编程语言，喜欢它的人自然多，讨厌它的人少，于是我们在鄙视链中，就太难看到它的身影了。 说到鄙视链，其实在 <code>Python</code> 工程师内部，依然存在一条鄙视链，那就是： <a href="https://i.loli.net/2020/02/02/DVxt2iOhI9cqrwl.jpg"><img src="https://i.loli.net/2020/02/02/DVxt2iOhI9cqrwl.jpg"></a> 除了这些优点外，从薪资水平上看，<code>Python</code> 工程师的薪资水平均值在 <code>12k-18k</code> 之间，拥有 3 年以上工作经验的 <code>Python</code> 工程师，薪资普遍高于 <code>20k</code>。<code>Python</code> 工程师的平均薪资水平，高于程序员的平均薪资水平。 <code>Python</code> 有多火？ 从大的方面说，山东省已经将 Python 纳入小学信息技术教材，而浙江省则把 Python 纳入高考选考科目。从小开始学 Python，这一趋势开始显现。 往近了说，以 W3Cschool Python 的视频课程为例。 一门售价 56 元的《Python3 零基础入门到爬虫实战》，就有 159 人购买，成为这半年来，参与人数增长速度最快的课程。 可见，无论从大的趋势上，还是编程爱好者的学习热情，<code>Python</code> 无疑是所有人学习编程的第一选择。</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>PHP</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>咨询</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>课堂笔笔记 1</title>
    <url>/Code/php-note-1/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="一-PHP标识符与注释。"><a href="#一-PHP标识符与注释。" class="headerlink" title="一.PHP标识符与注释。"></a>一.PHP 标识符与注释。</h2><ol>
<li><p>php 四大标识符有</p>
<p>// 标准型：</p>
<!--?php
//内容
?-->

<p>// 短风格 ：</p>
<!--? 内容 ?-->

<p>// 单行注释为：<br>// 单行注释内容</p>
<p>// 注释为：<br>/*<br>多行注释内容<br>*/</p>
</li>
<li><p>PHP 变量</p>
<ul>
<li><p>变量的命名规则  </p>
<blockquote>
<p>变量必须以美元符号 $ 开头，美元符号 $ 后面的第一个字符不能为数字，只能是下划线_或者字母，除了下划线_外，变量不允许出现任何空格或者标点符号，php 变量名是严格区分大小写的。</p>
</blockquote>
</li>
<li><p>变量的数据类型  </p>
<blockquote>
<p>标量类型：boolean、integer、float、string<br>复合类型：array、object<br>两种特殊类型： resource（资源），NULL (无类型)</p>
</blockquote>
</li>
</ul>
</li>
<li><p>PHP 常量</p>
<ul>
<li><p>自定义常量  </p>
<blockquote>
<p>PHP 定义常量使用 define () 方法来定义<br>define (，，) 方法有 3 个参数：<br>1.string 类型的常量名称，需要用双引号扩起来。// 一定要填写参数。<br>2. 定义的常量的值 // 必填参数<br>3. 指定大小写是否敏感，true 表示不敏感，false 表示敏感 // 默认为 false.</p>
</blockquote>
</li>
<li><p>系统 (内置) 常量  </p>
<blockquote>
<p>// 指系统本身自带的常量</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<h2 id="二-PHP运算符优先级"><a href="#二-PHP运算符优先级" class="headerlink" title="二.PHP运算符优先级"></a>二.PHP 运算符优先级</h2><p><strong>运算符</strong></p>
<p><strong>描述</strong></p>
<p>clone new</p>
<p><code>clone</code> 和 <code>new</code></p>
<p>[</p>
<p>array()</p>
<p>++，–</p>
<p>递增 / 递减运算符</p>
<p>~-(int)(float)(string)(array)(object)(bool)@</p>
<p>类型</p>
<p>nstanceof</p>
<p>类型</p>
<p>!</p>
<p>逻辑运算符</p>
<p>* / %</p>
<p>算术运算符</p>
<p>+-.</p>
<p>算术运算符和字符串运算符</p>
<p>&lt;&lt; &gt;&gt;</p>
<p>位运算符</p>
<p>&lt; &lt;= &gt; &gt;= &lt;&gt;</p>
<p>比较运算符</p>
<p>== != === !==</p>
<p>比较运算符</p>
<p>&amp;</p>
<p>位运算符和引用</p>
<p>^</p>
<p>位运算符</p>
<p>|</p>
<p>位运算符</p>
<p>&amp;&amp;</p>
<p>逻辑运算符</p>
<p>||</p>
<p>逻辑运算符</p>
<p>?:</p>
<p>条件运算符</p>
<p>= += _= *= /= .= %= &amp;= |= ^= &lt;&lt;= &gt;&gt;=</p>
<p>赋值运算符</p>
<p>and</p>
<p>逻辑运算符</p>
<p>xor</p>
<p>逻辑运算符</p>
<p>or</p>
<p>逻辑运算符</p>
<p>,</p>
<p>多出用到</p>
<h2 id="三-使用PHP编程实现-定义一个变量-赋值为不少于3位数的整数-要求取出该整数各个数位上的值并求和。-如-1234-1-2-3-4-10"><a href="#三-使用PHP编程实现-定义一个变量-赋值为不少于3位数的整数-要求取出该整数各个数位上的值并求和。-如-1234-1-2-3-4-10" class="headerlink" title="三.使用PHP编程实现:定义一个变量,赋值为不少于3位数的整数, 要求取出该整数各个数位上的值并求和。 如:1234=1+2+3+4=10"></a>三。使用 PHP 编程实现：定义一个变量，赋值为不少于 3 位数的整数，要求取出该整数各个数位上的值并求和。 如：1234=1+2+3+4=10</h2><!--?php
  $sum = 9876;
  $g = $a % 10;
  $s = floor($a/10)%10;
  $b = floor($a/100)%10;
  $i = floor($a/1000);
  $e = $i + $b + $s + $g;
  echo $sum ."=".$i."+". $b ."+". $s ."+". $g ."=". $e;   //php连接符是.
?-->
<p>// 运行结果<br>9876=9+8+7+6=30</p>
<h2 id="四-使用JS编程实现石头剪刀布小游戏。"><a href="#四-使用JS编程实现石头剪刀布小游戏。" class="headerlink" title="四.使用JS编程实现石头剪刀布小游戏。"></a>四。使用 JS 编程实现石头剪刀布小游戏。</h2><p>var user = prompt (“请出拳，1 石头，2 剪刀，3 布”);<br>var sys = parseInt(Math.random()*3)+1;<br>if(user&gt;3||user&lt;1){<br>  alert (“您输入的数字不在范围”);<br>}</p>
<p>if(sys==1){<br>  alert (“系统出的是的是石头”);<br>}else if(robot==2){<br>  alert (“系统出的是剪刀”);<br>}else if(robot==3){<br>  alert (“系统出的是布”);<br>}</p>
<p>var p = user-sys;<br>if( p== -1||p==2){<br>  alert (“您赢了！”);<br>}else if(p==-2||p==1){<br>  alert (“很遗憾你输了！”);<br>}else if(user==sys){<br>  alert (“平局！”);<br>}</p>
<h2 id="五-学习心得"><a href="#五-学习心得" class="headerlink" title="五.学习心得"></a>五。学习心得</h2><p>经过这一段时间的学习，发现自己还有很多地方的不足，要好好再加强一下自己。</p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 和 Node.js：哪个更好，为什么？</title>
    <url>/Code/JavaScript/PHP/php-or-node-js-which-is-better-and-why/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>在过去的十年中，这项技术的发展速度前所未有。增长似乎不会停止，并且有望在我们所生活的世界中带来重大的转变。 该技术的基础是由多种语言构成的基础，这些语言将基于多种语言构建，以供不同用途使用。 此类结构平台的语言和开发在其重要性，易用性，性能，兼容性和执行性方面各不相同，因此应根据动机进行明智选择。 在技​​术开发和后端编程领域，Node.js 和 PHP 成为最广泛和最受欢迎的名称。 Node.js 是跨平台的开源 JavaScript 运行时环境，可在浏览器外部执行 JavaScript 代码。</p>
<blockquote>
<p><strong><em>另请阅读：<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluZGludmVudG9yeS5jb20vYmxvZy9wcm9zLWFuZC1jb25zLW9mLW5vZGUtanMtd2ViLWFwcC1kZXZlbG9wbWVudC8=">Node.js Web App 开发的正面和负面方面<i class="fa fa-external-link-alt"></i></span></em></strong></p>
</blockquote>
<p>它是一个基于 Google Chrome 引擎的服务器端平台，用于开发快速且可扩展的网络应用程序。它快速，高度可扩展，克服了缓冲，异步和事件驱动的问题。 <a href="https://i.loli.net/2020/02/14/LoUm4scRgpYZGbi.png"><img src="https://i.loli.net/2020/02/14/LoUm4scRgpYZGbi.png"></a> 另一方面，PHP 是一种开放源代码服务器端脚本语言。根据<span class="exturl" data-url="aHR0cHM6Ly93M3RlY2hzLmNvbS90ZWNobm9sb2dpZXMvY29tcGFyaXNvbi9wbC1qcyxwbC1QSFA="> W3Tech 的<i class="fa fa-external-link-alt"></i></span>一项<span class="exturl" data-url="aHR0cHM6Ly93M3RlY2hzLmNvbS90ZWNobm9sb2dpZXMvY29tcGFyaXNvbi9wbC1qcyxwbC1QSFA=">调查，通常有<i class="fa fa-external-link-alt"></i></span>&nbsp;79％的网站是使用 PHP 开发的。它最初被称为 “个人主页”，但现在被普遍称为 “超文本预处理器”。</p>
<h2 id="一些有趣的事实"><a href="#一些有趣的事实" class="headerlink" title="一些有趣的事实"></a>一些有趣的事实</h2><ul>
<li>超过<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2Vla3Nmb3JnZWVrcy5vcmcvaW50ZXJlc3RpbmctZmFjdHMtYWJvdXQtcGhwLw=="> 244 + 百万个<i class="fa fa-external-link-alt"></i></span>基于 PHP 的网站。</li>
<li>Node.js 于 2019 年 5 月庆祝成立 10 周年。</li>
<li>目前，美国约有<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2ltaWxhcnRlY2guY29tL3RlY2hub2xvZ2llcy9ub2RlanM="> 32,000 多个网站<i class="fa fa-external-link-alt"></i></span>正在运行<span class="exturl" data-url="aHR0cHM6Ly93d3cuc2ltaWxhcnRlY2guY29tL3RlY2hub2xvZ2llcy9ub2RlanM="> Node.js。<i class="fa fa-external-link-alt"></i></span></li>
<li>Node.js 的有效率约为 96％，并帮助减少了<span class="exturl" data-url="aHR0cHM6Ly9ob3N0aW5ndHJpYnVuYWwuY29tL2Jsb2cvbm9kZS1qcy1zdGF0cy8="> 50-60％<i class="fa fa-external-link-alt"></i></span>的网页加载时间。</li>
<li>Node.js 还通过平均降低 58％的成本并将应用程序性能提高约 50％来对成本产生重大影响。</li>
</ul>
<h2 id="Node-js和PHP之间的相似之处"><a href="#Node-js和PHP之间的相似之处" class="headerlink" title="Node.js和PHP之间的相似之处"></a>Node.js 和 PHP 之间的相似之处</h2><p>但是，这些语言在其用法和工作方面会有所不同，Node.js 和 PHP 都显示出一些共同的因素。</p>
<h3 id="口译语言"><a href="#口译语言" class="headerlink" title="口译语言"></a>口译语言</h3><p>Node.js 和 PHP 都是解释语言。相应的代码可以在相应的运行时环境中运行，并且也适合初学者和专家。</p>
<h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><p>两种语言都以某种方式用于处理 Web 请求。这些语言有效地处理了动态 Web 内容，并构成了交互式且用户友好的界面。两种语言被认为非常有效地用于为 Web 套接字提供服务。</p>
<h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>这些语言的最大优势之一是它们都与包括 Linux，macOS 和 Windows 在内的许多操作系统广泛兼容。它们都具有很高的适应性，并且可以轻松修改。</p>
<h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><p>这些语言的性能仅根据创建 Web 平台的目的和意图而有所不同。这些语言具有很高的可行性，并且可以根据各自的专业目的高效使用。 这两个平台在提供性能和预期目的方面都非常成功。</p>
<h2 id="Node-js和PHP之间的区别"><a href="#Node-js和PHP之间的区别" class="headerlink" title="Node.js和PHP之间的区别"></a>Node.js 和 PHP 之间的区别</h2><p>PHP 和 Node.js 都为动态高效的平台提供了强大而强大的后端，但是在各自领域中存在各种差异。让我们看看如何。</p>
<h3 id="JavaScript隶属关系"><a href="#JavaScript隶属关系" class="headerlink" title="JavaScript隶属关系"></a>JavaScript 隶属关系</h3><p>Node.js 为开发人员提供了一个高效的环境，使开发人员可以使用脚本超越浏览器，并降低了 Flash 上​​Web 平台的可靠性。 另一方面，PHP 具有将内容从服务器传递到浏览器本身的基础。</p>
<h3 id="复杂"><a href="#复杂" class="headerlink" title="复杂"></a>复杂</h3><p>与 Node.js 相比，对于初学者来说，这里的 PHP 似乎更容易使用，但是在谈论专业开发人员时，PHP 在比较中是平等的。 Node.js 不太复杂，无法使用，但是与 PHP 相比，它需要更多的代码才能工作。</p>
<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><p>PHP 更像是一个基本平台，比 Node.js 执行开发的程序要慢，并且与 Node.js 相比，它的权重更高。</p>
<h3 id="可移植性"><a href="#可移植性" class="headerlink" title="可移植性"></a>可移植性</h3><p>PHP 作为一种开发 Web 程序的语言似乎具有很高的可移植性，并且可以与不同的操作系统兼容。 与 Node.js 相比，PHP 的虚拟主机更便宜且更易于访问。这也是 PHP 平台以 80％以上的内容统治 Web 的主要原因之一。</p>
<h3 id="同步化"><a href="#同步化" class="headerlink" title="同步化"></a>同步化</h3><p>仅当当前行已执行时，一行一行地执行的代码才进入代码的下一行，这称为同步代码，而同时执行的代码称为异步代码。 PHP 是一种同步编码语言，而 Node.js 是一种异步编码语言。同步 Web 平台被认为对执行速度不太可行，异步 Web 平台被认为对提高程序的执行速度更可行。</p>
<h3 id="构架"><a href="#构架" class="headerlink" title="构架"></a>构架</h3><p>PHP 是一种流行的服务器端脚本平台语言，易于后端开发。 该语言有许多框架支持，即<span class="exturl" data-url="aHR0cHM6Ly93d3cubWluZGludmVudG9yeS5jb20vYmxvZy9sYXJhdmVsLXRoZS1iZXN0LXBocC1mcmFtZXdvcmstZm9yLXdlYi1kZXZlbG9wbWVudC8="> Laravel<i class="fa fa-external-link-alt"></i></span>，Codelgniter，Cakephp 等，这些框架非常高效，可用于 Web 程序的敏捷，健壮和安全的后端开发。</p>
<h2 id="哪个更好：PHP还是Node-js？"><a href="#哪个更好：PHP还是Node-js？" class="headerlink" title="哪个更好：PHP还是Node.js？"></a>哪个更好：PHP 还是 Node.js？</h2><p>后端程序员经常被选为执行项目的最佳语言，在两者之间处于选择的困境。两种语言均可确保最终结果为开发人员和最终用户带来大量的 Web 编程经验。 与 Node.js 相比，PHP 的编码相对更快，更简单，因此一开始更具吸引力，并且似乎可以使用。 另一方面，Node.js 似乎是一种更复杂的语言。在 Node.js 的情况下，开发程序的部署是一个复杂且需要基础的项目。 两种语言都有各自的优缺点，如下所示：</p>
<ul>
<li>许多托管平台都高度支持 PHP 语言，因此更易于使用并将托管部署到 Web 程序。另一方面，节点为此使用虚拟服务器。</li>
<li>但是，PHP 提供了所开发程序的可靠和稳定的性能。Node.js 速度很快，并为 Web 程序提供了快速的周转时间。</li>
<li>Node.js 是一个比 PHP 更灵活，可扩展的平台。它具有有限的边界和依存关系，这使得它在处理大型文件时更加灵活和容易。</li>
<li>尽管 Node.js 具有高响应能力和用户友好性，但它不太适合处理 CPU 密集型活动。</li>
<li>有时，Node.js 平台几乎不会面对的大量代码使 PHP 无法管理。</li>
</ul>
<h2 id="尾注"><a href="#尾注" class="headerlink" title="尾注"></a>尾注</h2><p>从 PHP 和 Node.js 之间的竞争可以看出，这两个平台似乎都有自己的优势，并且在专注于预期结果时很有优势。 选择语言时要问的主要问题是，哪种语言可以更好地用于实现目标，而不是质疑两种语言的工作效率和能力。 因此，我们在此得出的结论是，这两种语言都是可使用的绝佳平台，并带来了许多令人赞叹的收益。我们还发现谁是最有可能与相应语言兼容的人员和工作维度。</p>
<h3 id="结论……"><a href="#结论……" class="headerlink" title="结论……"></a>结论……</h3><p>没有一种语言比其他语言少。根据要交付的项目的目的和要求使用时，它们都有各自的用途。 这两个平台都以自己的方式高效且强大，但是它们的功能各不相同。它们具有相似之处和不同之处，可以满足不同项目的不同需求。 PHP 是比 Node.js 相对古老的语言，并且在开始阶段就更易于编码人员使用。但是，Node.js 迅速成为竞争中最可行的选择之一。</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>JavaScript</category>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>笔记</tag>
        <tag>PHP</tag>
        <tag>咨询</tag>
        <tag>Nodejs</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP 环境搭建及安装</title>
    <url>/Windows/php-setup-and-install/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="1-XAMPP简介"><a href="#1-XAMPP简介" class="headerlink" title="1.XAMPP简介"></a>1.XAMPP 简介</h2><p>XAMPP（Apache+MySQL/MariaDB+PHP+Perl）</p>
<p>开头的 X 代表 X-OS，代表可以在任何常见操作系统下使用，包括 Windows、Mac、Linux，开源平台。</p>
<p>XAMPP（Apache+MySQL+PHP+PERL）是一个功能强大的建站集成软件包。这个软件包原来的名字是 LAMPP，但是为了避免误解，最新的几个版本就改名为 XAMPP 了。它可以在 Windows、Linux、Solaris、Mac OS X 等多种操作系统下安装使用，支持多语言：英文、简体中文、繁体中文、韩文、俄文、日文等。</p>
<p>许多人通过他们自己的经验认识到安装 Apache 服务器是件不容易的事儿。如果您想添加&nbsp;MySQL、PHP 和 Perl，那就更难了。XAMPP 是一个易于安装且包含 MySQL、PHP 和 Perl 的 Apache 发行版。XAMPP 的确非常容易安装和使用：只需下载，解压缩，启动即可。</p>
<p><img src="https://i.loli.net/2020/01/27/GXfcv5gylAhbozS.png"></p>
<h3 id="XAMPP-WINDOWS"><a href="#XAMPP-WINDOWS" class="headerlink" title="XAMPP - WINDOWS"></a><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDY=">XAMPP - WINDOWS<i class="fa fa-external-link-alt"></i></span></h3><p>服务器程序</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDY=">免费下载<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/01/27/GXfcv5gylAhbozS.png"></p>
<h3 id="XAMPP-MACOS"><a href="#XAMPP-MACOS" class="headerlink" title="XAMPP - MACOS"></a><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDc=">XAMPP - MACOS<i class="fa fa-external-link-alt"></i></span></h3><p>服务器程序</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDc=">免费下载<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://i.loli.net/2020/01/27/GXfcv5gylAhbozS.png"></p>
<h3 id="XAMPP-LINUX"><a href="#XAMPP-LINUX" class="headerlink" title="XAMPP - LINUX"></a><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDQ=">XAMPP - LINUX<i class="fa fa-external-link-alt"></i></span></h3><p>服务器程序</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvNDQ=">免费下载<i class="fa fa-external-link-alt"></i></span></p>
<p>上面的是我存在网盘的最新版 XAMPP，150-250M，很快就下好了。</p>
<p>官方地址为：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlZnJpZW5kcy5vcmcv">https://www.apachefriends.org/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="2-安装XMAPP"><a href="#2-安装XMAPP" class="headerlink" title="2.安装XMAPP"></a>2. 安装 XMAPP</h2><h3 id="2-1-首先我在D盘创建了一个文件夹XMAPP，然后在XMAPP创建了三个文件夹。"><a href="#2-1-首先我在D盘创建了一个文件夹XMAPP，然后在XMAPP创建了三个文件夹。" class="headerlink" title="2.1 首先我在D盘创建了一个文件夹XMAPP，然后在XMAPP创建了三个文件夹。"></a>2.1 首先我在 D 盘创建了一个文件夹 XMAPP，然后在 XMAPP 创建了三个文件夹。</h3><p><a href="https://img-blog.csdnimg.cn/20181111120338184.png"><img src="https://img-blog.csdnimg.cn/20181111120338184.png"></a></p>
<p>package 目录存放软件安装包</p>
<p>path 目录存放软件安装目录</p>
<p>virtualhost 目录是虚拟主机，也就是应用目录</p>
<h3 id="2-2-首先下载好XMAPP，放到一个位置，我放在-D-XAMPP-package-这个位置的。"><a href="#2-2-首先下载好XMAPP，放到一个位置，我放在-D-XAMPP-package-这个位置的。" class="headerlink" title="2-2 首先下载好XMAPP，放到一个位置，我放在 D:\XAMPP\package 这个位置的。"></a>2-2 首先下载好 XMAPP，放到一个位置，我放在 <code>D:\XAMPP\package</code> 这个位置的。</h3><h3 id="2-3-然后双击，进入安装界面，一直next…。"><a href="#2-3-然后双击，进入安装界面，一直next…。" class="headerlink" title="2-3.然后双击，进入安装界面，一直next…。"></a>2-3. 然后双击，进入安装界面，一直 next…。</h3><p>我将安装路径选择了 <code>D:\XAMPP\path</code></p>
<p>2.4. 直到安装完毕是这个样子的。</p>
<p><a href="https://img-blog.csdnimg.cn/2018111112100880.png"><img src="https://img-blog.csdnimg.cn/2018111112100880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></a></p>
<h2 id="3-配置虚拟主机"><a href="#3-配置虚拟主机" class="headerlink" title="3.配置虚拟主机"></a>3. 配置虚拟主机</h2><h3 id="3-1-然后我在-D-XMAPP-virtualhost-中新建了一个文件-gt-index-php"><a href="#3-1-然后我在-D-XMAPP-virtualhost-中新建了一个文件-gt-index-php" class="headerlink" title="3-1.然后我在 D:\XMAPP\virtualhost 中新建了一个文件==>index.php"></a>3-1. 然后我在 <code>D:\XMAPP\virtualhost</code> 中新建了一个文件 <code>==&gt;index.php</code></h3><p><a href="https://img-blog.csdnimg.cn/20181111121229408.png"><img src="https://img-blog.csdnimg.cn/20181111121229408.png"></a></p>
<p>很简单的一个函数，就当做首页了吧</p>
<h3 id="3-2-找到XAMPP的安装目录-gt-apache-gt-conf-gt-extra"><a href="#3-2-找到XAMPP的安装目录-gt-apache-gt-conf-gt-extra" class="headerlink" title="3.2.找到XAMPP的安装目录==>apache==>conf==>extra"></a>3.2. 找到 XAMPP 的安装目录 <code>==&gt;apache==&gt;conf==&gt;extra</code></h3><p>然后用编辑器打开 <code>httpd-vhosts.conf</code></p>
<p>在文件的最下面写如下代码：</p>
<p>&lt;VirtualHost *:80&gt;<br> ServerName ceshi.com<br> DocumentRoot “D:/XAMPP/virtualhost”<br>&lt;Directory “D:/XAMPP/virtualhost”&gt;<br> Options FollowSymLinks IncludesNOEXEC Indexes<br> DirectoryIndex index.html index.htm index.php<br> AllowOverride all<br> Order Deny,Allow<br> Allow from all<br> Require all granted<br><br></p>
<h2 id="4-修改hosts文件"><a href="#4-修改hosts文件" class="headerlink" title="4.修改hosts文件"></a>4. 修改 hosts 文件</h2><p>进入 <code>C盘==&gt;Windows==&gt;system32==&gt;drivers==&gt;etc==&gt;hosts文件</code></p>
<p><a href="https://img-blog.csdnimg.cn/20181111121715261.png"><img src="https://img-blog.csdnimg.cn/20181111121715261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></a></p>
<p>在 hosts 文件添加一行配置即可 <code>==&gt;127.0.0.1</code> 主机名</p>
<h2 id="5-测试是否XAMPP成功运行"><a href="#5-测试是否XAMPP成功运行" class="headerlink" title="5.测试是否XAMPP成功运行"></a>5. 测试是否 XAMPP 成功运行</h2><h3 id="5-1-先打开-Apache"><a href="#5-1-先打开-Apache" class="headerlink" title="5-1.先打开 Apache"></a>5-1. 先打开 <code>Apache</code></h3><p><a href="https://img-blog.csdnimg.cn/2018111112185328.png"><img src="https://img-blog.csdnimg.cn/2018111112185328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b2Jpbmh1aQ==,size_16,color_FFFFFF,t_70"></a></p>
<h3 id="5-2-在浏览器中输入-主机名-gt-我的主机名为：localhost"><a href="#5-2-在浏览器中输入-主机名-gt-我的主机名为：localhost" class="headerlink" title="5-2.在浏览器中输入 主机名==>我的主机名为：localhost"></a>5-2. 在浏览器中输入 主机名 ==&gt; 我的主机名为：localhost</h3><p>现在 XAMPP 就安装并配置好了，有问题的加 QQ</p>
<p>.tab{<br> text-indent: 2em;<br> }<br></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 自学笔记</title>
    <url>/Code/Python/python-self-taught-note/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h1 id="1-变量和简单数据类型"><a href="#1-变量和简单数据类型" class="headerlink" title="1.变量和简单数据类型"></a>1. 变量和简单数据类型</h1><h2 id="1-1-字符串首字母大写、所有大写、所有小写"><a href="#1-1-字符串首字母大写、所有大写、所有小写" class="headerlink" title="1-1.字符串首字母大写、所有大写、所有小写"></a>1-1. 字符串首字母大写、所有大写、所有小写</h2><p>name = “ada lovelace”<br>print(name.title())<br>print(name.upper())<br>print(name.lower())</p>
<p>\# 效果<br>Ada Lovelace # 首字母大写<br>ADA LOVELACE # 全部大写<br>ada lovelace # 全部小写</p>
<h2 id="1-2-合并-拼接-字符串"><a href="#1-2-合并-拼接-字符串" class="headerlink" title="1-2.合并(拼接)字符串"></a>1-2. 合并 (拼接) 字符串</h2><p>first_name = “ada”<br>last_name = “lovelace”<br>full_name = first_name + “ “ + last_name</p>
<p>message = “Hello,” +full_name.title () + “!” # 看的出来和 js 很像<br>print(message)</p>
<p>\# 显示效果<br>Hello,Ada Lovelace</p>
<h2 id="1-3-使用制表符或换行符来添加空白"><a href="#1-3-使用制表符或换行符来添加空白" class="headerlink" title="1-3.使用制表符或换行符来添加空白"></a>1-3. 使用制表符或换行符来添加空白</h2><p>first_name = “ada”<br>last_name = “lovelace”<br>full_name = first_name + “ “ + last_name</p>
<p>message = “Hello,” +full_name.title() + “!”<br>print(message)</p>
<p>print(“Languages:\n\tPython\n\tC\n\tJavaScript”)</p>
<p>\# 显示效果<br>Hello,Ada Lovelace!<br>Languages:<br>    Python<br>    C<br>    JavaScript</p>
<h2 id="1-4-删除空白"><a href="#1-4-删除空白" class="headerlink" title="1-4.删除空白"></a>1-4. 删除空白</h2><p># 命令行中</p>
<blockquote>
<blockquote>
<p>&gt; favorite_language = “python “<br>&gt; favorite_language<br>‘python ‘<br>&gt; favorite_language.rstrip()<br>‘python’<br>&gt; favorite_language<br>‘python ‘</p>
</blockquote>
</blockquote>
<h2 id="1-5-使用函数str-避免类型错误"><a href="#1-5-使用函数str-避免类型错误" class="headerlink" title="1-5.使用函数str()避免类型错误"></a>1-5. 使用函数 <code>str()</code> 避免类型错误</h2><p># 错误代码<br>age = 23<br>message = “Happy “ + age + “rd Birthday!”<br>print(message)<br># 显示效果<br>Traceback (most recent call last):<br>  File “name.py”, line 2, in <module><br>    message = “Happy “ + age + “rd Birthday!”<br>TypeError: can only concatenate str (not “int”) to str<br># 这是一个类型错误，意味着 Python 无法识别你使用的信息。</module></p>
<p># 正确代码<br>age = 23<br>message = “Happy “ + str(age) + “rd Birthday!”<br>print(message)<br># 显示效果<br>Happy 23rd Birthday!</p>
<h2 id="1-6-Python-2-中的整数"><a href="#1-6-Python-2-中的整数" class="headerlink" title="1-6.Python 2 中的整数"></a>1-6.Python 2 中的整数</h2><blockquote>
<p>在 Python2 中，将两个整数相除得到的结果稍有不同：</p>
</blockquote>
<blockquote>
<blockquote>
<p>&gt; 3 / 2<br>1</p>
</blockquote>
</blockquote>
<blockquote>
<p>Python 返回的值为 1，而不是 1.5。在 Python 2 中，整数除法的结果只保留整数部分，小数部分被删除 (不是四舍五入，而是直接删除)。若要避免，务必确保至少一个操作数为浮点数:</p>
</blockquote>
<blockquote>
<blockquote>
<p>&gt; 3.0 / 2<br>1.5<br>&gt; 3 / 2.0<br>1.5<br>&gt; 3.0 / 2.0<br>1.5</p>
</blockquote>
</blockquote>
<blockquote>
<p>从 Python 3 转而用 Python 2 或从 Python 3 时，这种除法行为常常会令人迷惑。使用或编写同时使用浮点数和整数的代码时，一定要注意这种异常行为。</p>
</blockquote>
<h1 id="2-列表简介"><a href="#2-列表简介" class="headerlink" title="2.列表简介"></a>2. 列表简介</h1><h2 id="2-1-列表是什么"><a href="#2-1-列表是什么" class="headerlink" title="2-1.列表是什么"></a>2-1. 列表是什么</h2><blockquote>
<p>列表由一系列按顺序排列的元素组成。你可以创建包含字母表中所有字母、数字 0~9 或所有家庭成员姓名的列表；也可以将任何东西加入列表中，其中的元素之间可以没有任何关系。鉴于列表通常包含多个元素，给列表指定一个表示复数的名字（如 letters、digits 或 names）是个不错的主意。<br>在 Python 中，用方包括（[]）来表示列表，并用逗号来隔开其中的元素。下面是一个简单的列表示例，这个列表包含几个自行车：</p>
</blockquote>
<h3 id="2-1-1-访问列表元素"><a href="#2-1-1-访问列表元素" class="headerlink" title="2-1-1.访问列表元素"></a>2-1-1. 访问列表元素</h3><p>bicycles = [‘trek’,’cannondale’,’redline’,’specialized’]<br>print(bicycles[0])<br>print(bicycles[0].title())<br>print(bicycles[1])<br>print(bickcles[2])<br>print(bickcles[3])</p>
<p># 显示效果<br>trek<br>Trek<br>cannondale<br>redline<br>specialized</p>
<h3 id="2-1-2-索引从0而不是1开始"><a href="#2-1-2-索引从0而不是1开始" class="headerlink" title="2-1-2.索引从0而不是1开始"></a>2-1-2. 索引从 0 而不是 1 开始</h3><blockquote>
<p>在 Python 中，第一个列表元素的索引为 0，而不是 1。在大多数编程语言中都是如此，这与列表操作的底层实现有关。<br>Python 为访问最后一个列表元素提供了一种特殊语法。通过将索引指定为 - 1，可让 Python 返回最后一个列表元素：</p>
</blockquote>
<p>bicycles = [‘trek’,’cannondale’,’redline’,’specialized’]<br>print(bicycles[-1])<br>print(bicycles[-2])<br>print(bicycles[-3])</p>
<p># 显示效果<br>specialized<br>redline<br>cannondale</p>
<h2 id="2-2-修改、添加和删除元素"><a href="#2-2-修改、添加和删除元素" class="headerlink" title="2-2.修改、添加和删除元素"></a>2-2. 修改、添加和删除元素</h2><h3 id="2-2-1-修改列表元素"><a href="#2-2-1-修改列表元素" class="headerlink" title="2-2-1.修改列表元素"></a>2-2-1. 修改列表元素</h3><p>motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>print(motorcycles)</p>
<p>motorcycles[0] = ‘ducati’<br>print(motorcycles)</p>
<p># 显示效果<br>[‘honda’,’yamaha’,’suzuki’]<br>[‘ducati’,’yamaha’,’suzuki’]</p>
<h3 id="2-2-2-在列表中添加元素"><a href="#2-2-2-在列表中添加元素" class="headerlink" title="2-2-2.在列表中添加元素"></a>2-2-2. 在列表中添加元素</h3><ol>
<li><p>在列表末尾添加元素</p>
<p>motorcycles = []<br>motorcycles.append(‘honda’)<br>motorcycles.append(‘yamaha’)<br>motorcycles.append(‘suzuki’)</p>
<p>print(motorcycles)</p>
<p># 显示效果<br>[‘honda’,’yamaha’,’suzuki’]</p>
</li>
<li><p>在列表中插入元素</p>
<blockquote>
<p>使用方法 <code>insert()</code> 可在列表的任何位置添加新元素。为此，你需要指定新元素的索引和值。</p>
</blockquote>
<p>motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
<p>motorcycles.insert(0, ‘ducati’)<br>print(motorcycles)</p>
<p># 在这个示例中，值’ducati’被插入到了列表开头；方法 insert () 在索引 0 处添加空间，并将值’ducati’存储到这个地方。这种操作将列表中既有的每个元素都向右移一个位置。<br># 显示效果<br>[‘ducati’,honda’,’yamaha’,’suzuki’]</p>
</li>
</ol>
<h3 id="2-2-3-从列表中删除元素"><a href="#2-2-3-从列表中删除元素" class="headerlink" title="2-2-3.从列表中删除元素"></a>2-2-3. 从列表中删除元素</h3><ol>
<li><p>使用 del 语句删除元素</p>
<blockquote>
<p>如果知道要删除的元素在列表中的位置，可使用 <code>del</code> 语句。</p>
</blockquote>
<p>motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>print(motorcycles)</p>
<p>del motorcycles[0]<br>print(motorcycles)</p>
<p># 显示效果<br>[‘honda’, ‘yamaha’, ‘suzuki’]<br>[‘yamaha’, ‘suzuki’]</p>
<p># 使用 del 可删除任何位置处的列表元素，条件是知道其索引。下列演示了如何删除前述列表中的第二元素 ————‘yamaha’。<br>motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>print(motorcycles)</p>
<p>del motorcycles[1]<br>print(motorcycles)</p>
<p># 显示效果<br>[‘honda’, ‘yamaha’, ‘suzuki’]<br>[‘honda’, ‘suzuki’]</p>
</li>
<li><p>使用方法 pop () 删除元素</p>
<p>motorcycles = [‘honda’,’yamaha’,’suzuki’]<br>print(motorcycles)</p>
<p>= motorcycles.pop()<br>print(motorcycles)<br>print(poped_motorcycle)</p>
<p># 方法 pop () 删除列表末尾的元素，并让你能接着使用它。</p>
<p># 显示效果<br>[‘honda’,’yamaha’,’suzuki’]<br>[‘honda’,’yamaha’]<br>suzuki # 值‘suzukki‘已删除，它现在存储在变量 poped_motorcycle 中。</p>
<p># 方法 pop () 是怎么起作用的？<br>motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
<p>last_owned = motorcycles.pop()<br>print(‘The last motorcycle I owned was a ‘ + last_owned.title() + ‘.’)</p>
<p># 输出是一个简单的句子，指出了最新购买的是哪款摩托车。</p>
<p># 显示效果<br>The last motorcycle I owned was a Suzuki.</p>
</li>
<li><p>弹出列表中任何位置处的元素</p>
<blockquote>
<p>你可以使用 <code>pop()</code> 来删除列表中任何位置的元素，只需在括号中指定要删除的元素的索引即可。</p>
</blockquote>
<p>motorcycles = [‘honda’,’yamaha’,’suzuki’]</p>
<p>last_owned = motorcycles.pop(0)<br>print(‘The last motorcycle I owned was a ‘ + last_owned.title() + ‘.’)</p>
<p># 显示效果<br>The last motorcycle I owned was a Honda.</p>
</li>
<li><p>根据值删除元素</p>
<blockquote>
<p>只知道要删除的元素的值，可使用方法 remove ()。</p>
</blockquote>
<p>motorcycles = [‘honda’,’yamaha’,’suzuki’,’ducati’]<br>print(motorcycles)</p>
<p>too_expensive = ‘ducati’<br>motorcycles.remove(too_expensive)<br>print(motorcycles)<br>print(‘\nA ‘ + too_expensive.title() + ‘ is too expensive for me.’)</p>
<p># 显示效果<br>[‘honda’, ‘yamaha’, ‘suzuki’, ‘ducati’]<br>[‘honda’, ‘yamaha’, ‘suzuki’]</p>
<p>A Ducati is too expensive for me.</p>
</li>
</ol>
<h2 id="2-3-组织列表"><a href="#2-3-组织列表" class="headerlink" title="2-3.组织列表"></a>2-3. 组织列表</h2><h3 id="2-3-1-使用方法sort-对列表进行永久性排序"><a href="#2-3-1-使用方法sort-对列表进行永久性排序" class="headerlink" title="2-3-1.使用方法sort()对列表进行永久性排序"></a>2-3-1. 使用方法 <code>sort()</code> 对列表进行永久性排序</h3><p># 按字母顺序排列。<br>cars = [‘bmw’,’audi’,’toyota’,’subaru’]<br>cars.sort()<br>print(cars)</p>
<p># 显示效果<br>[‘audi’, ‘bmw’, ‘subaru’, ‘toyota’]</p>
<p># 按字母顺序相反的顺序排列。<br>cars = [‘bmw’,’audi’,’toyota’,’subaru’]<br>cars.sort(reverse=True)<br>print(cars)</p>
<p># 显示效果<br>[‘toyota’, ‘subaru’, ‘bmw’, ‘audi’]</p>
<h3 id="2-3-2-使用sorted-对列表进行临时排序"><a href="#2-3-2-使用sorted-对列表进行临时排序" class="headerlink" title="2-3-2.使用sorted()对列表进行临时排序"></a>2-3-2. 使用 <code>sorted()</code> 对列表进行临时排序</h3><p>cars = [‘bmw’,’audi’,’toyota’,’subaru’]</p>
<p>print(‘Here is the original list:’)<br>print(cars)</p>
<p>print(‘\nHere is the sorted list:’)<br>print(sorted(cars))</p>
<p>print(‘\nHere is the original list again:’)<br>print(cars)</p>
<p># 显示效果<br>Here is the original list:<br>[‘bmw’, ‘audi’, ‘toyota’, ‘subaru’]</p>
<p>Here is the sorted list:<br>[‘audi’, ‘bmw’, ‘subaru’, ‘toyota’]</p>
<p>Here is the original list again:<br>[‘bmw’, ‘audi’, ‘toyota’, ‘subaru’]</p>
]]></content>
      <categories>
        <category>Code</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>RHEL/CentOS 7 最小化安装后需做的 30 件事情</title>
    <url>/Linux/rhel-centos-7-minimize-30-things-to-do-after-installation/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p><strong>CentOS 是一个工业标准的 Linux 发行版，是红帽企业版 Linux 的衍生版本。你安装完后马上就可以使用，但是为了更好地使用你的系统，你需要进行一些升级、安装新的软件包、配置特定服务和应用程序等操作。</strong> <a href="https://s2.ax1x.com/2020/02/09/1hAQcF.png"><img src="https://s2.ax1x.com/2020/02/09/1hAQcF.png" alt="CentOS7"></a> 阅读帖子的时候请先完成 RHEL/CentOS 最小化安装，这是首选的企业和生产环境。如果还没有，你可以按照下面的指南，它会告诉你两者的最小化安装方法。</p>
<ul>
<li>最小化安装 CentOS 7</li>
<li> 最小化安装 RHEL 7</li>
</ul>
<p>我们会基于工业标准的需求来介绍以下列出的这些重要工作。我们希望这些东西在你配置服务器的时候能有所帮助。</p>
<ol>
<li>注册并启用红帽订阅</li>
<li>使用静态 <code>IP</code> 地址配置网络</li>
<li>设置服务器的主机名称</li>
<li>更新或升级最小化安装的 <code>CentOS</code></li>
<li>安装命令行 <code>Web</code> 浏览器</li>
<li>安装 <code>Apache HTTP</code> 服务器</li>
<li>安装 <code>PHP</code></li>
<li>安装 <code>MariaDB</code> 数据库</li>
<li>安装并配置 <code>SSH</code> 服务器</li>
<li>安装 <code>GCC (GNU 编译器集)</code></li>
<li>安装 <code>Java</code></li>
<li>安装 <code>Apache Tomcat</code></li>
<li>安装 <code>Nmap</code> 检查开放端口</li>
<li>配置防火墙</li>
<li>安装 <code>Wget</code></li>
<li>安装 <code>Telnet</code></li>
<li>安装 <code>Webmin</code></li>
<li>启用第三方库</li>
<li>安装 <code>7-zip</code> 工具</li>
<li>安装 <code>NTFS-3G</code> 驱动</li>
<li>安装 <code>Vsftpd FTP</code> 服务器</li>
<li>安装和配置 <code>sudo</code></li>
<li>安装并启用 <code>SELinux</code></li>
<li>安装 <code>Rootkit Hunter</code></li>
<li>安装 <code>Linux Malware Detect (LMD)</code></li>
<li>用 <code>Speedtest-cli</code> 测试服务器带宽</li>
<li>配置 <code>Cron</code> 作业</li>
<li>安装 <code>Owncloud</code></li>
<li>启用 <code>VirtualBox</code> 虚拟化</li>
<li>用密码保护 <code>GRUB</code></li>
</ol>
<h2 id="1-注册并启用红帽订阅"><a href="#1-注册并启用红帽订阅" class="headerlink" title="1. 注册并启用红帽订阅"></a><strong>1.</strong> 注册并启用红帽订阅</h2><p>RHEL 7 最小化安装完成后，就应该注册并启用系统红帽订阅库， 并执行一个完整的系统更新。这只当你有一个可用的红帽订阅时才能有用。你要注册才能启用官方红帽系统库，并时不时进行操作系统更新。（LCTT 译注：订阅服务是收费的） <strong>注意</strong>: 这一步仅适用于有一个有效订阅的红帽企业版 Linux。如果你用的是 CentOS 服务器，请查看后面的章节。</p>
<h2 id="2-使用静态-IP-地址配置网络"><a href="#2-使用静态-IP-地址配置网络" class="headerlink" title="2. 使用静态 IP 地址配置网络"></a><strong>2. 使用静态 <code>IP</code> 地址配置网络</strong></h2><p>你第一件要做的事情就是为你的 <code>CentOS</code> 服务器配置静态 <code>IP</code> 地址、路由以及 <code>DNS</code>。我们会使用 <code>ip</code> 命令代替 <code>ifconfig</code> 命令。当然，<code>ifconfig</code> 命令对于大部分 Linux 发行版来说还是可用的，还能从默认库安装。</p>
<p><code>yum install net-tools # [它提供 ifconfig 工具，如果你不习惯 ip 命令，还可以使用它]</code></p>
<p><a href="https://s2.ax1x.com/2020/02/09/1hJOTP.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hJOTP.jpg" alt="yum install net-tools"></a> 但正如我之前说，我们会使用 ip 命令来配置静态 IP 地址。所以，确认你首先检查了当前的 IP 地址。 <code>ip addr show</code> <a href="https://s2.ax1x.com/2020/02/09/1hYQmR.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hYQmR.jpg"></a> 现在用你的编辑器打开并编辑文件 <code>/etc/sysconfig/network-scripts/ifcfg-enp0s3</code> 。这里，我使用 <code>vi</code> 编辑器，另外你要确保你是 <code>root</code> 用户才能保存更改。 <code>vi /etc/sysconfig/network-scripts/ifcfg-enp0s3</code> 我们会编辑文件中的四个地方。注意下面的四个地方并保证不碰任何其它的东西。也保留双引号，在它们中间输入你的数据。</p>
<p>IPADDR&nbsp;=&nbsp;“[在这里输入你的静态&nbsp;IP]“<br>GATEWAY&nbsp;=&nbsp;“[输入你的默认网关]“<br>DNS1&nbsp;=&nbsp;“[你的 DNS&nbsp;1]“<br>DNS2&nbsp;=&nbsp;“[你的 DNS&nbsp;2]“</p>
<p>更改了 ‘ifcfg-enp0s3’ 之后，它看起来像下面的图片。注意你的 IP，网关和 DNS 可能会变化，请和你的 ISP (译者注：互联网服务提供商，即给你提供接入的服务的电信或 IDC) 确认。保存并退出。 <a href="https://s2.ax1x.com/2020/02/09/1htAud.jpg"><img src="https://s2.ax1x.com/2020/02/09/1htAud.jpg"></a> 重启网络服务并检查 IP 是否和分配的一样。如果一切都顺利，用 Ping 查看网络状态。 <code>service network restart</code> <a href="https://s2.ax1x.com/2020/02/09/1htM8S.jpg"><img src="https://s2.ax1x.com/2020/02/09/1htM8S.jpg"></a> 重启网络后，确认检查了 IP 地址和网络状态。 <code>ip addr show </code> <code>ping -c4 google.com</code> <a href="https://s2.ax1x.com/2020/02/09/1ht6V1.jpg"><img src="https://s2.ax1x.com/2020/02/09/1ht6V1.jpg"></a> <a href="https://s2.ax1x.com/2020/02/09/1htoqA.jpg"><img src="https://s2.ax1x.com/2020/02/09/1htoqA.jpg"></a></p>
<h2 id="3-设置服务器的主机名称"><a href="#3-设置服务器的主机名称" class="headerlink" title="3. 设置服务器的主机名称"></a><strong>3.</strong> 设置服务器的主机名称</h2><p>下一步是更改 <code>CentOS</code> 服务器的主机名称。查看当前分配的主机名称。 <code>echo $HOSTNAME</code> <a href="https://s2.ax1x.com/2020/02/09/1hNPI0.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNPI0.jpg"></a> 要设置新的主机名称，我们需要编辑 ‘<code>/etc/hostsname</code>’ 文件并用想要的名称替换旧的主机名称。 <code>vi /etc/hostname</code> <a href="https://s2.ax1x.com/2020/02/09/1hNli6.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNli6.jpg"></a> 设置完了主机名称之后，务必注销后重新登录确认主机名称。登录后检查新的主机名称。 <code>echo $HOSTNAME</code> <a href="https://s2.ax1x.com/2020/02/09/1hNtLd.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNtLd.jpg"></a> 你也可以用 ‘hostname’ 命令查看你当前的主机名。 <code>hostname</code></p>
<h2 id="4-更新或升级最小化安装的CentOS"><a href="#4-更新或升级最小化安装的CentOS" class="headerlink" title="4. 更新或升级最小化安装的CentOS"></a><strong>4.</strong> 更新或升级最小化安装的 CentOS</h2><p>这样做除了更新安装已有的软件最新版本以及安全升级，不会安装任何新的软件。总的来说更新（update）和升级（upgrade）是相同的，除了事实上 升级 = 更新 + 更新时进行废弃处理。 <code>yum update &amp;&amp; yum upgrade</code> <a href="https://s2.ax1x.com/2020/02/09/1hNDW8.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNDW8.jpg"></a> <strong>重要</strong>: 你也可以运行下面的命令，这不会弹出软件更新的提示，你也就不需要输入 ‘y’ 接受更改。 然而，查看服务器上会发生的变化总是一个好主意，尤其是在生产中。因此使用下面的命令虽然可以为你自动更新和升级，但并不推荐。 <code>yum -y update &amp;&amp; yum -y upgrade</code></p>
<h2 id="5-安装命令行-Web-浏览器"><a href="#5-安装命令行-Web-浏览器" class="headerlink" title="5.安装命令行 Web 浏览器"></a>5. 安装命令行 Web 浏览器</h2><p>大部分情况下，尤其是在生产环境中，我们通常用没有 GUI 的命令行安装 CentOS，在这种情况下我们必须有一个能通过终端查看网站的命令行浏览工具。为了实现这个目的，我们打算安装名为 ‘links’ 的著名工具。 <code>yum install links</code> <a href="https://s2.ax1x.com/2020/02/09/1hNRwn.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNRwn.jpg"></a></p>
<h2 id="6-安装-Apache-HTTP-服务器"><a href="#6-安装-Apache-HTTP-服务器" class="headerlink" title="6. 安装 Apache HTTP 服务器"></a>6. 安装 Apache HTTP 服务器</h2><p>不管你因为什么原因使用服务器，大部分情况下你都需要一个 HTTP 服务器运行网站、多媒体、用户端脚本和很多其它的东西。 <code>yum install httpd</code> <a href="https://s2.ax1x.com/2020/02/09/1hNOT1.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNOT1.jpg"></a> 如果你想更改 Apache HTTP 服务器的默认端口号 (80) 为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行： <code>LISTEN 80</code> 把端口号 ‘<code>80</code>’ 改为其它任何端口 (例如 <code>3221</code>)，保存并退出。 <a href="https://s2.ax1x.com/2020/02/09/1hNxfK.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hNxfK.jpg"></a> 增加刚才分配给 <code>Apache</code> 的端口通过防火墙，然后重新加载防火墙。 允许 http 服务通过防火墙 (永久)。 <code>firewall-cmd –add-service=http</code> 允许 <code>3221</code> 号端口通过防火墙 (永久)。 <code>firewall-cmd –permanent –add-port=3221/tcp</code> 重新加载防火墙。</p>
<p><code>firewall-cmd –reload</code></p>
<p>完成上面的所有事情之后，是时候重启 <code>Apache HTTP</code> 服务器了，然后新的端口号才能生效。</p>
<p><code>systemctl restart httpd.service</code></p>
<p>现在添加 Apache 服务到系统层使其随系统自动启动。 <code>systemctl start httpd.service</code> <code>systemctl enable httpd.service</code> 如下图所示，用 <code>links</code> 命令行工具 验证 <code>Apache HTTP</code> 服务器。 <code>links 127.0.0.1</code> <a href="https://s2.ax1x.com/2020/02/09/1hUkTI.jpg"><img src="https://s2.ax1x.com/2020/02/09/1hUkTI.jpg"></a></p>
<blockquote>
<p>本文转载地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cubGludXhwcm9iZS5jb20vMzAtdGhpbmdzLWRvLmh0bWw=">https://www.linuxprobe.com/30-things-do.html<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>技巧</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>SCSS 教程</title>
    <url>/Code/scss-course/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p><strong><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2Fzcy5oay8=">Sass<i class="fa fa-external-link-alt"></i></span>** 是成熟、稳定、强大的</strong> CSS 预处理器 **，而 SCSS 是 Sass3 版本当中引入的新语法特性，完全兼容 CSS3 的同时继承了 Sass 强大的动态功能。</p>
<h1 id="特性概览"><a href="#特性概览" class="headerlink" title="特性概览"></a>特性概览</h1><p><code>CSS</code> 书写代码规模较大的 <code>Web</code> 应用时，容易造成选择器、层叠的复杂度过高，因此推荐通过 SASS 预处理器进行 <code>CSS</code> 的开发，<code>SASS</code> 提供的变量、嵌套、混合、继承等特性，让 <code>CSS</code> 的书写更加有趣与程式化。</p>
<hr>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量用来存储需要在 CSS 中复用的信息，例如颜色和字体。SASS 通过 $ 符号去声明一个变量。</p>
<p>$font-stack: Helvetica, sans-serif;<br>$primary-color: #333;</p>
<p>body {<br>  font: 100% $font-stack;<br>  color: $primary-color;<br>}</p>
<p>上面例子中变量 $font-stack 和 $primary-color 的值将会替换所有引用他们的位置。</p>
<p>body {<br>  font: 100% Helvetica, sans-serif;<br>  color: #333; }</p>
<h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><p><code>SASS</code> 允许开发人员以嵌套的方式使用 <code>CSS</code>，但是过度的使用嵌套会让产生的 <code>CSS</code> 难以维护，因此是一种不好的实践，下面的例子表达了一个典型的网站导航样式：</p>
<p>nav {<br>  ul {<br>    margin: 0;<br>    padding: 0;<br>    list-style: none;<br>  }</p>
<p>  li { display: inline-block; }</p>
<p>  a {<br>    display: block;<br>    padding: 6px 12px;<br>    text-decoration: none;<br>  }<br>}</p>
<p>大家注意上面代码中的 ul、li、a 选择器都被嵌套在 nav 选择器当中使用，这是一种书写更高可读性 CSS 的良好方式，编译后产生的 CSS 代码如下：</p>
<p>nav ul {<br>  margin: 0;<br>  padding: 0;<br>  list-style: none; }<br>nav li {<br>  display: inline-block; }<br>nav a {<br>  display: block;<br>  padding: 6px 12px;<br>  text-decoration: none; }</p>
<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p><code>SASS</code> 能够将代码分割为多个片段，并以 <code>underscore</code> 风格的下划线作为其命名前缀（<code>_partial.scss</code>），SASS 会通过这些下划线来辨别哪些文件是 <code>SASS</code> 片段，并且不让片段内容直接生成为 <code>CSS</code> 文件，从而只是在使用 @import 指令的位置被导入。<code>CSS</code> 原生的 <code>@import</code> 会通过额外的 <code>HTTP</code> 请求获取引入的样式片段，而 <code>SASS</code> 的 <code>@import</code> 则会直接将这些引入的片段合并至当前 <code>CSS</code> 文件，并且不会产生新的 HTTP 请求。下面例子中的代码，将会在 <code>base.scss</code> 文件当中引入<code>_reset.scss</code> 片断。</p>
<p>// _reset.scss<br>html, body, ul, ol {<br>  margin:  0;<br>  padding: 0;<br>}</p>
<p>// base.scss<br>@import ‘reset’;<br>body {<br>  font: 100% Helvetica, sans-serif;<br>  background-color: #efefef;<br>}</p>
<p>SASS 中引入片断时，可以缺省使用文件扩展名，因此上面代码中直接通过 @import ‘reset’引入，编译后生成的代码如下：</p>
<p>html, body, ul, ol {<br>  margin: 0;<br>  padding: 0; }</p>
<p>body {<br>  font: 100% Helvetica, sans-serif;<br>  background-color: #efefef; }</p>
<h2 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h2><p>混合（Mixin）用来分组那些需要在页面中复用的 CSS 声明，开发人员可以通过向 Mixin 传递变量参数来让代码更加灵活，该特性在添加浏览器兼容性前缀的时候非常有用，SASS 目前使用 @mixin name 指令来进行混合操作。</p>
<p>@mixin border-radius($radius) {<br>          border-radius: $radius;<br>      -ms-border-radius: $radius;<br>     -moz-border-radius: $radius;<br>  -webkit-border-radius: $radius;<br>}</p>
<p>.box {<br>  @include border-radius(10px);<br>}</p>
<p>上面的代码建立了一个名为 border-radius 的 Mixin，并传递了一个变量 $radius 作为参数，然后在后续代码中通过 @include border-radius (10px) 使用该 Mixin，最终编译的结果如下：</p>
<p>.box {<br>  border-radius: 10px;<br>  -ms-border-radius: 10px;<br>  -moz-border-radius: 10px;<br>  -webkit-border-radius: 10px; }</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>继承是 SASS 中非常重要的一个特性，可以通过 @extend 指令在选择器之间复用 CSS 属性，并且不会产生冗余的代码，下面例子将会通过 SASS 提供的继承机制建立一系列样式：</p>
<p>// 这段代码不会被输出到最终生成的 CSS 文件，因为它没有被任何代码所继承。<br>%other-styles {<br>  display: flex;<br>  flex-wrap: wrap;<br>}</p>
<p>// 下面代码会正常输出到生成的 CSS 文件，因为它被其接下来的代码所继承。<br>%message-common {<br>  border: 1px solid #ccc;<br>  padding: 10px;<br>  color: #333;<br>}</p>
<p>.message {<br>  @extend %message-common;<br>}</p>
<p>.success {<br>  @extend %message-common;<br>  border-color: green;<br>}</p>
<p>.error {<br>  @extend %message-common;<br>  border-color: red;<br>}</p>
<p>.warning {<br>  @extend %message-common;<br>  border-color: yellow;<br>}</p>
<p>上面代码将.message 中的 CSS 属性应用到了.success、.error、.warning 上面，魔法将会发生在最终生成的 CSS 当中。这种方式能够避免在 HTML 元素上书写多个 class 选择器，最终生成的 CSS 样式是下面这样的：</p>
<p>.message, .success, .error, .warning {<br>  border: 1px solid #ccc;<br>  padding: 10px;<br>  color: #333; }</p>
<p>.success {<br>  border-color: green; }</p>
<p>.error {<br>  border-color: red; }</p>
<p>.warning {<br>  border-color: yellow; }</p>
<h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><p>SASS 提供了标准的算术运算符，例如 <code>+、-、*、/、%</code>。在接下来的例子里，我们尝试在 aside 和 article 选择器当中对宽度进行简单的计算。</p>
<p>.container { width: 100%; }</p>
<p>article[role=”main”] {<br>  float: left;<br>  width: 600px / 960px * 100%;<br>}</p>
<p>aside[role=”complementary”] {<br>  float: right;<br>  width: 300px / 960px * 100%;<br>}</p>
<p>上面代码以 960px 为基准建立了简单的流式网格布局，SASS 提供的算术运算符让开发人员可以更容易的将像素值转换为百分比，最终生成的 CSS 样式如下所示：</p>
<p>.container {<br>  width: 100%; }</p>
<p>article[role=”main”] {<br>  float: left;<br>  width: 62.5%; }</p>
<p>aside[role=”complementary”] {<br>  float: right;<br>  width: 31.25%; }</p>
<h1 id="CSS扩展"><a href="#CSS扩展" class="headerlink" title="CSS扩展"></a>CSS 扩展</h1><h2 id="引用父级选择器”-amp-”"><a href="#引用父级选择器”-amp-”" class="headerlink" title="引用父级选择器”&amp;”"></a>引用父级选择器”&amp;”</h2><p>Scss 使用”&amp;” 关键字在 CSS 规则中引用父级选择器，例如在嵌套使用伪类选择器的场景下：</p>
<p>/<em>===== SCSS =====</em>/<br>a {<br>  font-weight: bold;<br>  text-decoration: none;<br>  &amp;:hover { text-decoration: underline; }<br>  body.firefox &amp; { font-weight: normal; }<br>}</p>
<p>/<em>===== CSS =====</em>/<br>a {<br>  font-weight: bold;<br>  text-decoration: none; }<br>  a:hover {<br>    text-decoration: underline; }<br>  body.firefox a {<br>    font-weight: normal; }</p>
<p>无论 CSS 规则嵌套的深度怎样，关键字”&amp;” 都会使用父级选择器级联替换全部其出现的位置：</p>
<p>/<em>===== SCSS =====</em>/<br>#main {<br>  color: black;<br>  a {<br>    font-weight: bold;<br>    &amp;:hover { color: red; }<br>  }<br>}</p>
<p>/<em>===== CSS =====</em>/<br>#main {<br>  color: black; }<br>  #main a {<br>    font-weight: bold; }<br>    #main a:hover {<br>      color: red; }</p>
<p>“&amp;” 必须出现在复合选择器开头的位置，后面再连接自定义的后缀，例如：</p>
<p>/<em>===== SCSS =====</em>/<br>#main {<br>  color: black;<br>  &amp;-sidebar { border: 1px solid; }<br>}</p>
<p>/<em>===== CSS =====</em>/<br>#main {<br>  color: black; }<br>  #main-sidebar {<br>    border: 1px solid; }</p>
<p>如果在父级选择器不存在的场景使用 &amp;，Scss 预处理器会报出错误信息。</p>
<h2 id="嵌套属性"><a href="#嵌套属性" class="headerlink" title="嵌套属性"></a>嵌套属性</h2><p>CSS 许多属性都位于相同的命名空间（例如 font-family、font-size、font-weight 都位于 font 命名空间下），Scss 当中只需要编写命名空间一次，后续嵌套的子属性都将会位于该命名空间之下，请看下面的代码：</p>
<p>/<em>===== SCSS =====</em>/<br>.demo {<br>  // 命令空间后带有冒号:<br>  font: {<br>    family: fantasy;<br>    size: 30em;<br>    weight: bold;<br>  }<br>}</p>
<p>/<em>===== CSS =====</em>/<br>.demo {<br>  font-family: fantasy;<br>  font-size: 30em;<br>  font-weight: bold; }</p>
<p>命令空间上可以直接书写 CSS 简写属性，但是日常开发中建议直接书写 CSS 简写属性，尽量保持 CSS 语法的一致性。</p>
<p>.demo {<br>  font: 20px/24px fantasy {<br>    weight: bold;<br>  }<br>}</p>
<p>.demo {<br>  font: 20px/24px fantasy;<br>    font-weight: bold;<br>}</p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>笔记</tag>
        <tag>技巧</tag>
        <tag>sass</tag>
      </tags>
  </entry>
  <entry>
    <title>mac 系统最好的软件卸载工具 - 专治应用残留卸载不干净的问题</title>
    <url>/MacOS/the-best-mac-uninstaller/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p><em>macOS 一般情况下通过应用程序中将应用移到废纸篓就会完成卸载，但是经常有小伙伴问我，通过这种方式卸载软件后会有一些残留，有时候会导致一些软件安装失败。今天小编就给大家介绍一款 mac 平台最好用的卸载工具：App Cleaner &amp; Uninstaller Pro</em></p>
</blockquote>
<h2 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h2><p><a href="https://i.loli.net/2020/01/26/GFvmszYcrw2qE6d.png"><img src="https://i.loli.net/2020/01/26/GFvmszYcrw2qE6d.png"></a></p>
<p><em>App Cleaner &amp; Uninstaller Pro</em></p>
<p>App Cleaner &amp; Uninstaller Pro 是 Nektony 公司出品的一款专注于 Mac 应用卸载的工具，它原来的名字叫 App Uninstaller。</p>
<p>它不仅可以卸载应用的主程序，还可以进行清理应用缓存、清理应用程序支持文件、清理应用首选项文件，通俗点讲就是支持应用残留文件删除。对过对比 CleanMyMac X、腾讯柠檬、AppCleaner、iTrash 等卸载工具，在清理方面 App Cleaner &amp; Uninstaller Pro 是完胜的，清理应用最干净。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本站提供 App Cleaner &amp; Uninstaller Pro 破解版下载。</p>
<p><img src="https://i.loli.net/2020/01/27/HC4uEXvTxjFY7DS.png"></p>
<h3 id="App-Cleaner-amp-Uninstaller-Pro"><a href="#App-Cleaner-amp-Uninstaller-Pro" class="headerlink" title="App Cleaner &amp; Uninstaller Pro"></a><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvMzg=">App Cleaner &amp; Uninstaller Pro<i class="fa fa-external-link-alt"></i></span></h3><p>应用深度清理卸载工具</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9xdXFpLmNvbS80NTk1MzMvMzg=">免费下载<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>App Cleaner &amp; Uninstaller Pro 使用很简单，下载安装运行后，</p>
<p>比如要卸载应用，只需要选中要清理的应用，点击<code>移除服务文件</code>即可。</p>
<p><a href="https://i.loli.net/2020/01/26/37RsUAIwazVQ4t1.png"><img src="https://i.loli.net/2020/01/26/37RsUAIwazVQ4t1.png"></a></p>
<p><em>App Cleaner &amp; Uninstaller Pro</em> - 应用程序</p>
<p>比如要清理残留项，只需选中要清理的残留项，点击<code>移除服务文件</code>即可。(您可以通过 <code>command+a</code> 快速全选)</p>
<p><a href="https://i.loli.net/2020/01/26/Je4pQFwGybaV69z.png"><img src="https://i.loli.net/2020/01/26/Je4pQFwGybaV69z.png"></a></p>
<p><em>App Cleaner &amp; Uninstaller Pro</em> - 残留项</p>
<p>还支持管理<code>启动代理</code>、<code>开机启动项</code>、<code>安装文件清理</code>、<code>浏览器扩展管理</code>、<code>屏幕保护程序管理</code>等功能。</p>
<p><a href="https://i.loli.net/2020/01/26/AC9BSuPYg8e57vL.png"><img src="https://i.loli.net/2020/01/26/AC9BSuPYg8e57vL.png"></a></p>
<p><em>App Cleaner &amp; Uninstaller Pro</em> - 扩展</p>
<p>此应用暂不支持暗黑模式，需求已提交给官方，下个版本会更新。如果您在找一款使用简单，清理干净的 mac 卸载工具的话，那就快来试试 App Cleaner &amp; Uninstaller Pro 吧！</p>
]]></content>
      <categories>
        <category>MacOS</category>
      </categories>
      <tags>
        <tag>APP</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title>原生 js 中编码的三种方法</title>
    <url>/Code/JavaScript/three-coding-methods-in-native-js/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>在开发中经常需要对用户输入的数据进行编码然后才能通过 HTTP 请求发送给后台，或者对传递过来的数据进行解码。在 JS 中原生提供了三种编码 / 解码方式，分别是&nbsp;<code>**encodeURI**</code>、&nbsp;<code>**encodeURIComponent**</code> 和&nbsp;<code>**escape**</code>。</p>
<h2 id="encodeURI"><a href="#encodeURI" class="headerlink" title="encodeURI"></a>encodeURI</h2><p>该方法不会对 ASCII 表中的字母和数字编码，同时也不会对 ASCII 中的标点符号编码&nbsp;<code>**-_.~*’()**</code>&nbsp;在 URI 中具有特殊含义的符号&nbsp;<code>**;/?:@&amp;=+$,#**</code> 同样不会被编码。</p>
<p>var url = ‘<span class="exturl" data-url="aHR0cHM6Ly9nb29nbGUuY29tL3BhdGhuYW1lP2E9MSZhbXA7Yj1hYmNkZSZhbXA7Yz0lRTklQkIlODQlRTUlQjElQjEjaGFzaCYjMzk7">https://google.com/pathname?a=1&amp;b=abcde&amp;c = 黄山 #hash'<i class="fa fa-external-link-alt"></i></span>;<br>encodeURI (url); // 返回 <span class="exturl" data-url="aHR0cHM6Ly9nb29nbGUuY29tL3BhdGhuYW1lP2E9MSZhbXA7Yj1hYmNkZSZhbXA7Yz0lRTklQkIlODQlRTUlQjElQjEjaGFzaA==">https://google.com/pathname?a=1&amp;b=abcde&amp;c=%E9%BB%84%E5%B1%B1#hash<i class="fa fa-external-link-alt"></i></span></p>
<p>encodeURI(“-<em>.~*’()”); // 返回 -</em>.~*’()</p>
<p>encodeURI (“;/?:@&amp;=+$,#”); // 返回；/?:@&amp;=+$,#</p>
<h2 id="encodeURIComponent"><a href="#encodeURIComponent" class="headerlink" title="encodeURIComponent"></a>encodeURIComponent</h2><p>该方法相比 encodeURI 多编码 URI 中具有特殊含义的符号&nbsp;<code>**;/?:@&amp;=+$,#**</code></p>
<p>var url = ‘<span class="exturl" data-url="aHR0cHM6Ly9nb29nbGUuY29tL3BhdGhuYW1lP2E9MSZhbXA7Yj1hYmNkZSZhbXA7Yz0lRTklQkIlODQlRTUlQjElQjEjaGFzaCYjMzk7">https://google.com/pathname?a=1&amp;b=abcde&amp;c = 黄山 #hash'<i class="fa fa-external-link-alt"></i></span>;<br>encodeURIComponent (url); // 打印 “https%3A%2F%2Fgoogle.com%2Fpathname%3Fa%3D1%26b%3Dabcde%26c%3D% E9% BB%84% E5% B1% B1%23hash”</p>
<p>encodeURIComponent(“-<em>.~*’()”); // 返回 -</em>.~*’()</p>
<p>encodeURIComponent (“;/?:@&amp;=+$,#”); // 返回 %3B%2F%3F%3A%40%26%3D%2B%24%2C%23</p>
<p>通过对比可看出方法 <code>encodeURI</code> 和 <code>encodeURIComponent</code> 编码中文的返回结果是一样的。</p>
<p>encodeURI (“黄山”); // 返回 % E9% BB%84% E5% B1% B1</p>
<p>encodeURIComponent (“黄山”); // 返回 % E9% BB%84% E5% B1% B1</p>
<h2 id="escape（不推荐使用，推荐使用上面两个方法代替）"><a href="#escape（不推荐使用，推荐使用上面两个方法代替）" class="headerlink" title="escape（不推荐使用，推荐使用上面两个方法代替）"></a>escape（不推荐使用，推荐使用上面两个方法代替）</h2><p>该方法会对 ASCII 中&nbsp;* <em>字母、数字及符号</em> @-_+./** 之外的所有字符进行编码。</p>
<p>var url = ‘<span class="exturl" data-url="aHR0cHM6Ly9nb29nbGUuY29tL3BhdGhuYW1lP2E9MSZhbXA7Yj1hYmNkZSZhbXA7Yz0lRTklQkIlODQlRTUlQjElQjEjaGFzaCYjMzk7">https://google.com/pathname?a=1&amp;b=abcde&amp;c = 黄山 #hash'<i class="fa fa-external-link-alt"></i></span>;<br>escape (url); // 返回 https%3A//google.com/pathname%3Fa%3D1%26b%3Dabcde%26c%3D% u9EC4% u5C71%23hash</p>
<p>console.log(escape(“*@-<em>+./“)); // 打印 *@-</em>+./</p>
<p>escape 对于汉字的编码和上面两个方法的编码结果并不一样。</p>
<p>encodeURI (“黄山”); // 返回 % E9% BB%84% E5% B1% B1</p>
<p>encodeURIComponent (“黄山”); // 返回 % E9% BB%84% E5% B1% B1</p>
<p>escape (“黄山”); // 返回 % u9EC4% u5C71</p>
<h2 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h2><p>三种编码方法对应的解码方法分别是：</p>
<p><strong>编码</strong></p>
<p><strong>解码</strong></p>
<p>encodeURI</p>
<p>decodeURI</p>
<p>encodeURIComponent</p>
<p>decodeURIComponent</p>
<p>escape</p>
<p>unescape</p>
<p>var res = encodeURI (“黄山”); // % E9% BB%84% E5% B1% B1<br>decodeURI (res); // 返回 黄山</p>
<p>var res = encodeURIComponent (“黄山”); // % E9% BB%84% E5% B1% B1<br>decodeURI (res); // 返回 黄山</p>
<p>var res = escape (“黄山”); // % u9EC4% u5C71<br>unescape (res); // 返回 黄山</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xldHRlclRpZ2VyL2FydGljbGUvZGV0YWlscy83OTYyMzk5MQ==">https://blog.csdn.net/letterTiger/article/details/79623991<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Code</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>代码</tag>
        <tag>笔记</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>使用宝塔面板和 Nextcloud 搭建私有云 / 网盘图文教程</title>
    <url>/Linux/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/use-the-pagoda-panel-and-nextcloud-to-build-a-private-cloud-online-disk-graphic-tutoria/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<blockquote>
<p><strong>Nextcloud 是一款自由 (开源) 的类 Dropbox 软件，由 ownCloud 分支演化形成。它使用 PHP 和 JavaScript 编写，支持多种数据库系统，比如 MySQL/MariaDB、PostgreSQL、Oracle 数据库和 SQLite。它可以使你的桌面系统和云服务器中的文件保持同步，Nextcloud 为 Windows、<span class="exturl" data-url="aHR0cHM6Ly93d3cubGludXhwcm9iZS5jb20v">Linux<i class="fa fa-external-link-alt"></i></span>、Mac、安卓以及苹果手机都提供了客户端支持。</strong></p>
</blockquote>
<p><strong>Nextcloud</strong> 并非只是 <strong>Dropbox</strong> 的克隆，它还提供了很多附加特性，如日历、联系人、计划任务以及流媒体 <strong>Ampache</strong>。 在这篇文章中，我将向你展示如何在 <strong>宝塔面板</strong> 服务器中安装和配置最新版本的 <strong>Nextcloud 18.1</strong>。我会通过 <strong>Nginx</strong> 和 <strong>PHP7-FPM</strong> 来运行 Nextcloud，同时使用 MariaDB 做为数据库系统。 [caption id=”” align=”alignnone” width=”1510”]<a href="https://i.loli.net/2020/02/19/VZmg2MXO1ApN6tD.jpg"><img src="https://i.loli.net/2020/02/19/VZmg2MXO1ApN6tD.jpg" alt="NextCloud"></a> NextCloud[/caption]</p>
<h2 id="安装-nextcloud-的过程"><a href="#安装-nextcloud-的过程" class="headerlink" title="安装 nextcloud 的过程"></a>安装 nextcloud 的过程</h2><h3 id="一、提前把域名解析到-vps-的-IP。"><a href="#一、提前把域名解析到-vps-的-IP。" class="headerlink" title="一、提前把域名解析到 vps 的 IP。"></a>一、提前把域名解析到 vps 的 IP。</h3><h3 id="二、使用宝塔面板（宝塔面板官方网址：点我进入）搭建好-php-环境，安装的时候选择-lnmp-环境，php7-以上版本速度更快，效率更高。"><a href="#二、使用宝塔面板（宝塔面板官方网址：点我进入）搭建好-php-环境，安装的时候选择-lnmp-环境，php7-以上版本速度更快，效率更高。" class="headerlink" title="二、使用宝塔面板（宝塔面板官方网址：点我进入）搭建好 php 环境，安装的时候选择 lnmp 环境，php7 以上版本速度更快，效率更高。"></a>二、使用宝塔面板（宝塔面板官方网址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYnQuY24v">点我进入<i class="fa fa-external-link-alt"></i></span>）搭建好 php 环境，安装的时候选择 lnmp 环境，php7 以上版本速度更快，效率更高。</h3><h3 id="三、到这个地址-https-nextcloud-com-install-下载-nextcloud-最新安装文件，打开后点击-download，在弹窗中右键点击-Download-Nextcloud，复制链接地址。"><a href="#三、到这个地址-https-nextcloud-com-install-下载-nextcloud-最新安装文件，打开后点击-download，在弹窗中右键点击-Download-Nextcloud，复制链接地址。" class="headerlink" title="三、到这个地址 https://nextcloud.com/install/ 下载 nextcloud 最新安装文件，打开后点击 download，在弹窗中右键点击 Download Nextcloud，复制链接地址。"></a>三、到这个地址 <span class="exturl" data-url="aHR0cHM6Ly9uZXh0Y2xvdWQuY29tL2luc3RhbGwv">https://nextcloud.com/install/<i class="fa fa-external-link-alt"></i></span> 下载 nextcloud 最新安装文件，打开后点击 download，在弹窗中右键点击 Download Nextcloud，复制链接地址。</h3><h3 id="四、进入宝塔面板后台-gt-gt-文件，选择网站根目录，点击远程下载后在弹窗中粘贴上面的下载地址，点击确定开始下载。安装文件才-58M，几秒钟就下载完毕了。"><a href="#四、进入宝塔面板后台-gt-gt-文件，选择网站根目录，点击远程下载后在弹窗中粘贴上面的下载地址，点击确定开始下载。安装文件才-58M，几秒钟就下载完毕了。" class="headerlink" title="四、进入宝塔面板后台>>文件，选择网站根目录，点击远程下载后在弹窗中粘贴上面的下载地址，点击确定开始下载。安装文件才 58M，几秒钟就下载完毕了。"></a>四、进入宝塔面板后台 &gt;&gt; 文件，选择网站根目录，点击远程下载后在弹窗中粘贴上面的下载地址，点击确定开始下载。安装文件才 58M，几秒钟就下载完毕了。</h3><p><a href="https://i.loli.net/2020/02/19/m7Te8tIvoBCxwkW.png"><img src="https://i.loli.net/2020/02/19/m7Te8tIvoBCxwkW.png"></a></p>
<h3 id="五、刷新一下当前页面就看到下载后的-nextcloud-安装包了，在名字后面点击解压，会解压缩到-nextcloud-文件夹。进入这个文件夹，全选，剪切，回到网站根目录，粘贴所有（后台右上角），这样就把-nextcloud-的安装文件放到网站根目录了。"><a href="#五、刷新一下当前页面就看到下载后的-nextcloud-安装包了，在名字后面点击解压，会解压缩到-nextcloud-文件夹。进入这个文件夹，全选，剪切，回到网站根目录，粘贴所有（后台右上角），这样就把-nextcloud-的安装文件放到网站根目录了。" class="headerlink" title="五、刷新一下当前页面就看到下载后的 nextcloud 安装包了，在名字后面点击解压，会解压缩到 nextcloud 文件夹。进入这个文件夹，全选，剪切，回到网站根目录，粘贴所有（后台右上角），这样就把 nextcloud 的安装文件放到网站根目录了。"></a>五、刷新一下当前页面就看到下载后的 nextcloud 安装包了，在名字后面点击解压，会解压缩到 nextcloud 文件夹。进入这个文件夹，全选，剪切，回到网站根目录，粘贴所有（后台右上角），这样就把 nextcloud 的安装文件放到网站根目录了。</h3><p><a href="https://i.loli.net/2020/02/19/SzAQuNrMc5R1ikU.png"><img src="https://i.loli.net/2020/02/19/SzAQuNrMc5R1ikU.png"></a></p>
<blockquote>
<p>以上复制、剪切、粘贴的功能全都在宝塔面板后台的网页端完成的，不需要登陆服务器操作，确实很方便，即使没操作过的新手也能很快上手。</p>
</blockquote>
<h3 id="六、打开域名就看到了创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。"><a href="#六、打开域名就看到了创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。" class="headerlink" title="六、打开域名就看到了创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击“安装完成”。"></a>六、打开域名就看到了创建管理员账号界面，输入管理员账号密码，数据库名和密码，数据库用户名。点击 “安装完成”。</h3><p><a href="https://i.loli.net/2020/02/19/AfFkQKYv6LRd4Ee.png"><img src="https://i.loli.net/2020/02/19/AfFkQKYv6LRd4Ee.png"></a></p>
<h3 id="七、进入-nextcloud-后台界面。看到提示可以下载-PC-端、手机端、苹果系统的-app-使用。"><a href="#七、进入-nextcloud-后台界面。看到提示可以下载-PC-端、手机端、苹果系统的-app-使用。" class="headerlink" title="七、进入 nextcloud 后台界面。看到提示可以下载 PC 端、手机端、苹果系统的 app 使用。"></a>七、进入 nextcloud 后台界面。看到提示可以下载 PC 端、手机端、苹果系统的 app 使用。</h3><h3 id="八、进入-设置-gt-概览-可以看到还有很多安全问题，可以到这里查看并解决。"><a href="#八、进入-设置-gt-概览-可以看到还有很多安全问题，可以到这里查看并解决。" class="headerlink" title="八、进入 设置 -> 概览 可以看到还有很多安全问题，可以到这里查看并解决。"></a>八、进入 <code>设置 -&gt; 概览</code> 可以看到还有很多安全问题，可以到<a href="https://www.fuocu.cn/archives/nextcloud-bug-in-pagoda-panel-building-and-solutions/"><strong>这里</strong></a>查看并解决。</h3><p><a href="https://i.loli.net/2020/02/19/STcQfVUZYKCIe9B.png"><img src="https://i.loli.net/2020/02/19/STcQfVUZYKCIe9B.png"></a></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>PHP</tag>
        <tag>MySQL</tag>
        <tag>NextCloud</tag>
        <tag>NGINX</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下使用 SSH 命令用于登录远程桌面</title>
    <url>/Linux/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/using-ssh-under-linux/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>做 DL 的经常需要在一台电脑 (<strong>本地主机</strong>) 上写代码，另一台电脑 (<strong>服务器</strong>，计算力强) 上进行训练，我们在两台电脑上都安装的是 Ubuntu16.04，为了在 local 主机下也可以随时跑程序，调代码，同时省流量而且迅速 (不考虑这些的话用 teamviewer 也行)，所以在两台电脑主机上进行 SSH 配置。</p>
<h2 id="基础-ssh命令连接"><a href="#基础-ssh命令连接" class="headerlink" title="基础:ssh命令连接"></a>基础:ssh 命令连接</h2><h3 id="step1：SSH程序的安装"><a href="#step1：SSH程序的安装" class="headerlink" title="step1：SSH程序的安装"></a><strong>step1：SSH 程序的安装</strong></h3><p>确保在服务器上安装好了 openssh-server 程序，在本地主机上安装好了 openssh-client 程序。</p>
<pre><code>sudo apt install openssh-client #本地主机运行此条，实际上通常是默认安装client端程序的
sudo apt install openssh-server #服务器运行此条命令安装</code></pre>
<h3 id="step2：服务器启动ssh服务"><a href="#step2：服务器启动ssh服务" class="headerlink" title="step2：服务器启动ssh服务"></a><strong>step2：服务器启动 ssh 服务</strong></h3><p><strong>以下命令都只针对服务器端 (server only)。</strong></p>
<p>一般服务器上安装 ssh 完成后，会自动启动 ssh 服务，并且默认随系统启动，如果没有，请手动启动：</p>
<pre><code>sudo /etc/init.d/ssh start #服务器启动ssh-server服务，</code></pre>
<p>其他命令：</p>
<pre><code>sudo /etc/init.d/ssh stop #server停止ssh服务
sudo /etc/init.d/ssh restart #server重启ssh服务</code></pre>
<h3 id="step3：查询服务器的ip地址"><a href="#step3：查询服务器的ip地址" class="headerlink" title="step3：查询服务器的ip地址"></a>step3：查询服务器的 ip 地址</h3><p>在服务器终端运行以下命令：</p>
<pre><code>ifconfig #查询ip地址，在返回信息中找到自己的ip地址</code></pre>
<p><a href="https://i.loli.net/2020/03/01/jVMUrk3xSJ5OEYI.jpg"><img src="https://i.loli.net/2020/03/01/jVMUrk3xSJ5OEYI.jpg"></a></p>
<p>从我的返回信息中看到，我的 ip 地址 (inet 地址) 是：<code>10.170.11.147</code>。</p>
<p>如果没有看到 IP 地址，说明你没有安装指定工具：</p>
<pre><code>sudo apt-get install net-tools #Ubuntu
sudo yum install net-tools      #CentOS</code></pre>
<p>输入以上命令即可。</p>
<h3 id="step4：在本地主机端ssh远程登录服务器"><a href="#step4：在本地主机端ssh远程登录服务器" class="headerlink" title="step4：在本地主机端ssh远程登录服务器"></a>step4：在本地主机端 ssh 远程登录服务器</h3><p><strong>这一步需要知道服务器的用户名 (我的服务器名字也是 yucicheung) 及 IP 地址。</strong></p>
<p>在本地主机上运行以下命令：<br>用户端连接服务器用于登录远程桌面 (以下 user 时远程主机的用户名)</p>
<pre><code>ssh yucicheung@10.170.11.147
#或
ssh -l yucicheung 10.170.11.147
# 如果需要调用图形界面程序
ssh -X yucicheung@10.170.11.147</code></pre>
<p><strong>初次登录</strong>时会出现以下信息，请记住要<strong>输入的密码是服务器主机本身的登陆密码</strong>：</p>
<p><a href="https://i.loli.net/2020/03/01/QaO2VL5AhkJSE8b.jpg"><img src="https://i.loli.net/2020/03/01/QaO2VL5AhkJSE8b.jpg"></a></p>
<p>以上表示连接成功，且命令提示副前的<code>用户名@主机名</code>由本地主机变成服务器的信息，即表明<strong>现在该终端所有的命令都是在服务器中执行</strong>。</p>
<p>本地主机端登录相关的其他命令：</p>
<ul>
<li><p>如果服务器的 SSH 服务没有开启在 22 端口，那么 SSH 链接时则需要用 <code>-p</code> 指定端口（如 202）:</p>
<p>ssh -p 202 <span class="exturl" data-url="bWFpbHRvOiYjMTIxOyYjeDc1OyYjeDYzOyYjeDY5OyYjOTk7JiMxMDQ7JiN4NjU7JiN4NzU7JiMxMTA7JiMxMDM7JiN4NDA7JiN4MzE7JiN4MzA7JiN4MmU7JiN4MzE7JiM1NTsmIzQ4OyYjeDJlOyYjeDMxOyYjNDk7JiN4MmU7JiM0OTsmI3gzNDsmI3gzNzs=">yucicheung@10.170.11.147<i class="fa fa-external-link-alt"></i></span><br>#或<br>ssh -l yucicheung -p 202 10.170.11.147</p>
</li>
</ul>
<h3 id="step5：退出远程登录"><a href="#step5：退出远程登录" class="headerlink" title="step5：退出远程登录"></a>step5：退出远程登录</h3><p>用 Ctrl+D 或者</p>
<pre><code>exit</code></pre>
<h2 id="进阶-利用公钥省去口令输入"><a href="#进阶-利用公钥省去口令输入" class="headerlink" title="进阶:利用公钥省去口令输入"></a>进阶：利用公钥省去口令输入</h2><p>每次登录远程主机都需要输入密码是很不便捷的，如果要加速这一步骤，可以利用密钥对进行连接，主要思路是：生成一对公钥私钥，私钥在 local 主机上，公钥在远程服务器上，每次建立 ssh 连接自动检查密钥对是否匹配。</p>
<h3 id="step1-生成密钥对"><a href="#step1-生成密钥对" class="headerlink" title="step1 生成密钥对"></a>step1 生成密钥对</h3><pre><code>ssh-keygen -t rsa #-t表示选择类型,类型为rsa</code></pre>
<p>执行以后会在 $HOME 目录下生成一个.ssh 文件夹，其中包含私钥文件 <code>id_rsa</code> 和公钥文件 <code>id_rsa.pub</code>。</p>
<h3 id="step2-复制公钥至服务器"><a href="#step2-复制公钥至服务器" class="headerlink" title="step2 复制公钥至服务器"></a>step2 复制公钥至服务器</h3><pre><code># 登录远程服务器
ssh yucicheung@10.170.11.147 

# 在服务器上创建.ssh文件夹,如果已经存在就跳过此步
mkdir .ssh 

# 为了保证.ssh文件夹的安全，应取消其他用户对文件夹的所有权限
chmod 700 .ssh

# 退出登录
exit

# 本地主机的公钥复制到远程服务器,作为已认证密钥
scp /home/yucicheung/.ssh/id_rsa.pub yucicheung@10.170.44.206:/home/yucicheung/.ssh/authorized_keys</code></pre>
<p>在进行以上配置以后，再进行连接时，就可以免去口令 (密码) 的输入了。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1Y2ljaGV1bmcvYXJ0aWNsZS9kZXRhaWxzLzc5NDI3NTc4">https://blog.csdn.net/yucicheung/article/details/79427578<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>Ubuntu</tag>
        <tag>终端</tag>
        <tag>CentOS</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>Word 查找和替换通配符 (完全版)</title>
    <url>/MacOS/Windows/word-find-and-replace-wildcards/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="Word查找栏代码·通配符一览表"><a href="#Word查找栏代码·通配符一览表" class="headerlink" title="Word查找栏代码·通配符一览表"></a>Word 查找栏代码・通配符一览表</h2><p><strong>序号</strong></p>
<p><strong>清除使用通配符复选框</strong></p>
<p><strong>勾选使用通配符复选框</strong></p>
<p>特殊字符</p>
<p>代码</p>
<p>特殊字符</p>
<p>代码 or 通配符</p>
<p>1</p>
<p>任意单个字符</p>
<p>^?</p>
<p>任意单个字符</p>
<p>?</p>
<p>2</p>
<p>任意数字</p>
<p>^#</p>
<p>任意数字（单个）</p>
<p>[0-9]</p>
<p>3</p>
<p>任意英文字母</p>
<p>^$</p>
<p>任意英文字母</p>
<p>[a-zA-Z]</p>
<p>4</p>
<p>段落标记</p>
<p>^p</p>
<p>段落标记</p>
<p>^13</p>
<p>5</p>
<p>手动换行符</p>
<p>^l</p>
<p>手动换行符</p>
<p>^l or ^11</p>
<p>6</p>
<p>图形</p>
<p>^g or ^1</p>
<p>图形</p>
<p>^g</p>
<p>7</p>
<p>1/4 长划线</p>
<p>^+</p>
<p>1/4 长划线</p>
<p>^q</p>
<p>8</p>
<p>长划线</p>
<p>^j</p>
<p>长划线</p>
<p>^+</p>
<p>9</p>
<p>短划线</p>
<p>^q</p>
<p>短划线</p>
<p>^=</p>
<p>10</p>
<p>制表符</p>
<p>^t</p>
<p>制表符</p>
<p>^t</p>
<p>11</p>
<p>脱字号</p>
<p>^</p>
<p>脱字号</p>
<p>^^</p>
<p>12</p>
<p>分栏符</p>
<p>^v</p>
<p>分栏符</p>
<p>^n or ^14</p>
<p>13</p>
<p>分节符</p>
<p>^b</p>
<p>分节符 / 分页符</p>
<p>^m</p>
<p>14</p>
<p>省略号</p>
<p>^n</p>
<p>省略号</p>
<p>^i</p>
<p>15</p>
<p>全角省略号</p>
<p>^i</p>
<p>全角省略号</p>
<p>^j</p>
<p>16</p>
<p>无宽非分隔符</p>
<p>^z</p>
<p>无宽非分隔符</p>
<p>^z</p>
<p>17</p>
<p>无宽可选分隔符</p>
<p>^x</p>
<p>无宽可选分隔符</p>
<p>^x</p>
<p>18</p>
<p>不间断空格</p>
<p>^s</p>
<p>不间断空格</p>
<p>^s</p>
<p>19</p>
<p>不间断连字符</p>
<p>^~</p>
<p>不间断连字符</p>
<p>^~</p>
<p>20</p>
<p>¶ 段落符号</p>
<p>^%</p>
<p>表达式</p>
<p>( )</p>
<p>21</p>
<p>§ 分节符</p>
<p>^</p>
<p>单词结尾</p>
<p>&lt;</p>
<p>22</p>
<p>脚注标记</p>
<p>^f or ^2</p>
<p>单词开头</p>
<blockquote>
</blockquote>
<p>23</p>
<p>可选连字符</p>
<p>^-</p>
<p>任意字符串</p>
<p>*</p>
<p>24</p>
<p>空白区域</p>
<p>^w</p>
<p>指定范围外任意单个字符</p>
<p>[!x-z]</p>
<p>25</p>
<p>手动分页符</p>
<p>^m</p>
<p>指定范围内任意单个字符</p>
<p>[ - ]</p>
<p>26</p>
<p>尾注标记</p>
<p>^e</p>
<p>1 个以上前一字符或表达式</p>
<p>@</p>
<p>27</p>
<p>域</p>
<p>^d</p>
<p>n 个前一字符或表达式</p>
<p>{n}</p>
<p>28</p>
<p>Unicode 字符</p>
<p>^Unnnn</p>
<p>&nbsp;</p>
<p>{n,}</p>
<p>29</p>
<p>全角空格</p>
<p>^u8195</p>
<p>n 到 m 个前一字符或表达式</p>
<p>{ n,m }</p>
<p>30</p>
<p>半角空格</p>
<p>^32 or ^u8194</p>
<p>所有小写英文字母</p>
<p>[a-z]</p>
<p>31</p>
<p>批注</p>
<p>^a or ^5</p>
<p>所有大写英文字母</p>
<p>[A-Z]</p>
<p>32</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>所有西文字符</p>
<p>[^1-^127]</p>
<p>33</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>所有中文汉字和中文标点</p>
<p>[!^1-^127]</p>
<p>34</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>所有中文汉字（CJK 统一字符）</p>
<p>[一 - 龥] or [一 - 﨩]</p>
<p>35</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>所有中文标点</p>
<p>[! 一 - 龥 ^1-^127]</p>
<p>36</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>所有非数字字符</p>
<p>[!0-9]</p>
<blockquote>
<p>注：要查找已被定义为通配符的字符，该字符前键入反斜杠 \ 。查找？、<em>、（、）、[、] 等的代码分别是 \？、\</em>、\(、\)、\[、\] 。</p>
</blockquote>
<h2 id="Word替换栏代码·通配符一览表"><a href="#Word替换栏代码·通配符一览表" class="headerlink" title="Word替换栏代码·通配符一览表"></a>Word 替换栏代码・通配符一览表</h2><p><strong>序号</strong></p>
<p>清除使用通配符复选框</p>
<p>勾选使用通配符复选框</p>
<p>特殊字符</p>
<p>代码</p>
<p>特殊字符</p>
<p>代码 or 通配符</p>
<p>0</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>要查找的表达式 \n</p>
<p>\</p>
<p>1</p>
<p>段落标记↵</p>
<p>^p</p>
<p>&nbsp;段落标记↵</p>
<p>^p</p>
<p>2</p>
<p>手动换行符↓</p>
<p>^l</p>
<p>手动换行符↓</p>
<p>^l</p>
<p>3</p>
<p>查找的内容</p>
<p>^&amp;</p>
<p>查找的内容&nbsp;</p>
<p>^&amp;</p>
<p>4</p>
<p>剪贴板内容</p>
<p>^c</p>
<p>剪贴板内容</p>
<p>^c</p>
<p>5</p>
<p>省略号</p>
<p>^i</p>
<p>省略号</p>
<p>^i</p>
<p>6</p>
<p>全角省略号</p>
<p>^j</p>
<p>全角省略号</p>
<p>^j</p>
<p>7</p>
<p>制表符</p>
<p>^t</p>
<p>制表符</p>
<p>^t</p>
<p>8</p>
<p>长划线</p>
<p>^+</p>
<p>长划线</p>
<p>^+</p>
<p>9</p>
<p>1/4 长划线 (&nbsp;—&nbsp;)</p>
<p>^q</p>
<p>1/4 长划线 (&nbsp;—&nbsp;)</p>
<p>^q</p>
<p>10</p>
<p>短划线 (&nbsp;–&nbsp;)</p>
<p>^=</p>
<p>短划线 (&nbsp;–&nbsp;)</p>
<p>^=</p>
<p>11</p>
<p>脱字号</p>
<p>^^</p>
<p>脱字号</p>
<p>^^</p>
<p>12</p>
<p>手动分页符</p>
<p>^m or ^12</p>
<p>手动分页符</p>
<p>^m</p>
<p>13</p>
<p>可选连字符（_）</p>
<p>^-</p>
<p>可选连字符（_）</p>
<p>^-</p>
<p>14</p>
<p>不间断连字符（-）</p>
<p>^~</p>
<p>不间断连字符（-）</p>
<p>^~</p>
<p>15</p>
<p>不间断空格</p>
<p>^s</p>
<p>不间断空格</p>
<p>^s</p>
<p>16</p>
<p>无宽非分隔符</p>
<p>^z</p>
<p>无宽非分隔符</p>
<p>^z</p>
<p>17</p>
<p>无宽可选分隔符</p>
<p>^x</p>
<p>无宽可选分隔符</p>
<p>^x</p>
<p>18</p>
<p>分栏符</p>
<p>^n</p>
<p>分栏符</p>
<p>^n</p>
<p>19</p>
<p>§ 分节符</p>
<p>^%</p>
<p>&nbsp;§ 分节符</p>
<p>^%</p>
<p>20</p>
<p>¶ 段落符号</p>
<p>^v</p>
<p>¶ 段落符号</p>
<p>^v</p>
<h2 id="Word通配符用法详解"><a href="#Word通配符用法详解" class="headerlink" title="Word通配符用法详解"></a><strong>Word 通配符用法详解</strong></h2><p><strong>1**</strong>、任意单个字符：**</p>
<p>“?” 可以代表任意单个字符，输入几个 “?” 就代表几个未知字符。如：<br>输入 “? 国” 就可以找到诸如 “中国”、“美国”、“英国” 等字符；<br>输入 “??? 国” 可以找到 “孟加拉国” 等字符。</p>
<p><strong>2、任意多个字符：</strong></p>
<p>&nbsp;“<em>” 可以代表任意多个字符。如：<br>输入 “</em>国” 就可以找到 “中国”、“美国”、 “孟加拉国” 等字符。</p>
<p><strong>3**</strong>、指定字符之一：**</p>
<p>&nbsp;“[]” 框内的字符可以是指定要查找的字符之一，如：<br>输入 “[中美] 国” 就可以找到 “中国”、“美国”。 又如：<br>输入 “th [iu] g”，就可查找到 “thigh” 和 “thug”。&nbsp;<br>输入 “[学硕博] 士”，查找到的将会是学士、士、硕士、博士。&nbsp;<br>输入 “[大中小] 学” 可以查找到 “大学”、“中学” 或 “小学”，但不查找 “求学”、“开学” 等。<br>输入 “[高矮] 个” 的话，Word 查找工具就可以找到 “高个”、“矮个” 等内容。</p>
<p><strong>4**</strong>、指定范围内的任意单个字符：**</p>
<p>&nbsp;“[x-x]” 可以指定某一范围内的任意单个字符，如：<br>输入 “[a-e] ay” 就可以找到 “bay”、“day” 等字符，要注意的是指定范围内的字符必须用升序。 用升序。如：<br>输入 “[a-c] mend” 的话，Word 查找工具就可以找到 “amend”、“bmend”、“cmend” 等字符内容。</p>
<p>**<br>5、排除指定范、排除指定范围内的任意单个字符：**</p>
<p>“[!x-x]” 可以用来排除指定范围内的任意单个字符，如：<br>输入 “[!c-f]” 就可以找到 “bay”、“gay”、“lay” 等字符，但是不等字符，但是不会找到 “cay”、“day” 等字符。要注意范围必须用升序。<br>又如：<br>输入 “[!a-c]” 的话，word 程序就可以找到 “good”、“see”、“these” 等目标字符，而所有包含字符 a、b、c 之类的内容都不会在查找结果中出现。<br>又如：<br>输入 “m [!a] st”，用，用来查找 “mist” 和 “most” 不会查找 “mast”。&nbsp;<br>输入 “[!a] n”，查到的将会是除 an 以外的所有可能组合如：合如：in、on 等。</p>
<p><strong>6**</strong>、指定前一字符的个数：**</p>
<p>“{n}” 可以用来指定要查找的字符中包含前一字符的个数，如：<br>输入 “cho {1} se” 就是说包含 1 个前一字符 “o”，可以找到 “chose”，输入 “cho {2} se” 就是说包含 2 个前一字符 “o”，可以找到， “choose”。&nbsp;<br>又如：<br>输入 “lit {1} le” 就是说包含 1 个前一字符 “t”，可以找到 “litle”。&nbsp;<br>输入 “lit {2} le” 就是说包含 2 个前一字符 “t”，可以找到 “little”。&nbsp;<br>输入 “te {2} n”，表示查找 “teen” 而不会查找 “ten”。&nbsp;<br>输入 “of {2} ice”，查找到的将会是 office。</p>
<p><strong>7**</strong>、指定前一字符、指定前一字符数范围：**</p>
<p>“{x,x}” 可以用指定要查找字符中前一字符数范围，如：<br>输入 “cho {1,2}”，则说明包含前一字符 “o” 数目范围是 1-2 个，则可以找到 “chose”、“choose”。</p>
<p>&nbsp;&nbsp;<br><strong>8**</strong>、一个以上的前一字符：**</p>
<p>&nbsp;“@” 可以用来指定要查找字符中包含一个以上的前一字符，如：<br>输入 “cho@se”，就可以找到， “chose”、“choose” 等字符。</p>
<p><strong>9**</strong>、指定起始字符串：**</p>
<p>“&lt;” 可以用来指定要查找字符中的起始字符串，如：<br>输入 “&lt;ag”，就说明要查找的字符的起始字符为 “ag”，可以找到 “ago”、“agree”、“again” 等字符。<br>输入 “&lt;te” 的话，可能查到 “ten”、“tea” 等。</p>
<p><strong>10**</strong>、指定结尾字符串：**</p>
<p>&nbsp;“&gt;” 可以用来指定要查找字符中的结尾字符串，如：<br>输入 “er&gt;”，就说明要查找的字符的结尾字符为 “er”，可以找到 “ver”、“her”、“lover” 等等。<br>输入 “en&gt;”， 就说明要查找到以 “en” 结尾的所有目标对象，可能找到 “ten”、“pen”、“men”<br>输入 “up&gt;”，就说明要查找到以 “up” 结尾的所有目标对象，例如会找到 “setup”、“cup” 等等。</p>
<p><strong>11**</strong>、表达式查找：**</p>
<p>“（）”，尤其用于多个关键词的组合查找。<br>键入 “（America）（China）”，在 “替换为” 中键入 “\2 \1”，Word 找到 “America China” 并替换为 “China America”。&nbsp;<br>输入 “&lt;(江山)*(多娇)&gt;”，就表示查找的是所有以 “江山” 开头并且 以 “多娇” 结尾的字符串。</p>
<p>另外为了更精确的查找，你还可以把以上的通配符联合起来使用，如：<br>输入 “&lt;(ag)*(er)&gt;” 则表示查找所有以 “ag” 开头并且以 “er” 结尾的单词，注意这时需要用括号将来区分开不同的查找规则。最后还要注意如果要查找已经被定义为通配符的字符，如 “<em>”、“?” 等字符，必须在该字符前面加上反斜杠 “\”，如：输入 “\</em>” 则表示查找字符 “*”。</p>
<h2 id="使用通配符搜索"><a href="#使用通配符搜索" class="headerlink" title="使用通配符搜索"></a>使用通配符搜索</h2><p>选中 “使用通配符” 复选框后，Word 只查找与指定文本精确匹配的文本（请注意，“区分大小写” 和 “全字匹配” 复选框会变灰而不可用，表明这些选项已自动选中，您不能关闭这些选项）。</p>
<p>要查找已被定义为通配符的字符，请在该字符前键入反斜扛 (\)，例如，要查找问号，可键入 “\？”。</p>
<p><strong>序号</strong></p>
<p><strong>查找内容</strong></p>
<p><strong>通配符</strong></p>
<p><strong>示例</strong></p>
<p>1</p>
<p>任意单个字符</p>
<p>?</p>
<p>例如，s?t 可查找 “sat” 和 “set”。</p>
<p>2</p>
<p>任意字符串</p>
<p>*</p>
<p>例如，s*d 可查找 “sad” 和 “started”。</p>
<p>3</p>
<p>单词的开头</p>
<p>&lt;</p>
<p>例如，&lt;(inter) 查找 “interesting” 和 “intercept”，但不查找 “splintered”。</p>
<p>4</p>
<p>单词的结尾</p>
<blockquote>
</blockquote>
<p>例如，(in)&gt; 查找 “in” 和 “within”，但不查找 “interesting”。</p>
<p>5</p>
<p>指定字符之一</p>
<p>[]</p>
<p>例如，w [io] n 查找 “win” 和 “won”。</p>
<p>6</p>
<p>指定范围内任意单个字符</p>
<p>[-]</p>
<p>例如，[r-t] ight 查找 “right” 和 “sight”。必须用升序来表示该范围。</p>
<p>7</p>
<p>中括号内指定字符范围以外的任意单个字符</p>
<p>[!x-z]</p>
<p>例如，t [!a-m] ck 查找 “tock” 和 “tuck”，但不查找 “tack” 和 “tick”。</p>
<p>8</p>
<p>n 个重复的前一字符或表达式</p>
<p>{n}</p>
<p>例如，fe {2} d 查找 “feed”，但不查找 “fed”。</p>
<p>9</p>
<p>至少 n 个前一字符或表达式</p>
<p>{n,}</p>
<p>例如，fe {1,} d 查找 “fed” 和 “feed”。</p>
<p>10</p>
<p>n 到 m 个前一字符或表达式</p>
<p>{n,m}</p>
<p>例如，10 {1,3} 查找 “10”、“100” 和 “1000”。</p>
<p>11</p>
<p>一个以上的前一字符或表达式</p>
<p>@</p>
<p>例如，lo@t 查找 “lot” 和 “loot”。</p>
<blockquote>
<p>一些代码只有在选中或清除 “使用通配符” 选项时才能使用。</p>
<p>使用代码搜索</p>
<p>可以在 “查找内容” 或 “替换为” 框中使用的代码</p>
</blockquote>
<p>段落标记 ()</p>
<p>键入 ^p（选中 “使用通配符” 复选框时在 “查找内容” 框中无效）或键入 ^13</p>
<p>制表符 ()</p>
<p>键入 ^t 或键入 ^9</p>
<p>ASCII 字符</p>
<p>键入 ^nnn，其中 nnn 是字符代码</p>
<p>ANSIcharacter</p>
<p>键入 ^0nnn，其中 nnn 是字符代码</p>
<p>长划线 (—)</p>
<p>键入 ^+</p>
<p>短划线 (–)</p>
<p>键入 ^=</p>
<p>脱字号</p>
<p>键入 ^^</p>
<p>手动换行符 ()</p>
<p>键入 ^l 或键入 ^11</p>
<p>分栏符</p>
<p>键入 ^n 或键入 ^14</p>
<p>分页符或分节符</p>
<p>键入 ^12（替换时，插入分页符）</p>
<p>手动分页符</p>
<p>键入 ^m（当选中 “使用通配符” 复选框时，还将查找或替换分节符）</p>
<p>不间断空格 ()</p>
<p>键入 ^s</p>
<p>不间断连字符 ()</p>
<p>键入 ^~</p>
<p>可选连字符 ()</p>
<p>键入 ^-</p>
<blockquote>
<p>只能在 “查找内容” 框中使用的代码（选中 “使用通配符” 复选框时）</p>
</blockquote>
<p>图片或图形（仅嵌入）</p>
<p>键入 ^g</p>
<blockquote>
<p>只能在 “查找内容” 框中使用的代码（清除 “使用通配符” 复选框时）</p>
</blockquote>
<p>任意字符</p>
<p>键入 ^?</p>
<p>任意数字</p>
<p>键入 ^#</p>
<p>任意字</p>
<p>键入 ^$</p>
<p>Unicode 字符</p>
<p>键入 ^Unnnn，其中 “nnnn” 是字符代码</p>
<p>图片或图形（仅嵌入）</p>
<p>键入 ^1</p>
<p>脚注标记</p>
<p>键入 ^f 或键入 ^2</p>
<p>尾注标记</p>
<p>键入 ^e</p>
<p>域</p>
<p>键入 ^d</p>
<p>正在打开域大括号（当域代码可见时）</p>
<p>键入 ^19</p>
<p>正在关闭域大括号（当域代码可见时）</p>
<p>键入 ^21</p>
<p>批注</p>
<p>键入 ^a 或键入 ^5</p>
<p>分节符</p>
<p>键入 ^b</p>
<p>全角空格 (Unicode)</p>
<p>键入 ^u8195</p>
<p>半角空格 (Unicode)</p>
<p>键入 ^u8194</p>
<p>白色空格</p>
<p>键入 ^w（可以是常规空格、不间断空格以及制表符的任意组合）</p>
<blockquote>
<p>只能在 “替换为” 框中使用的代码</p>
</blockquote>
<p>“Windows 剪贴板” 的内容</p>
<p>键入 ^c</p>
<p>“查找内容” 框的内容</p>
<p>键入 ^&amp;</p>
<hr>
<blockquote>
<p>选中 “使用通配符” 复选框后，Microsoft Word 不识别在 “查找内容” 框中输入的用于下列项目的代码：尾注和脚注标记、域、段落标记、分节符或空白区域。若要搜索这些项目，可以在 “查找内容” 框中键入下列替换代码。（注意，没有可用于域的替换代码）</p>
</blockquote>
<p>若要查找脚注或尾注标记</p>
<p>键入 “^2”</p>
<p>注意，Word 无法区分脚注和尾注标记。</p>
<p>若要查找段落标记</p>
<p>键入 “^13”</p>
<p>&nbsp;</p>
<p>若要查找分节符</p>
<p>键入 “^12”</p>
<p>Word 将搜索手动分页符和分节符。</p>
<p>查找空白区域</p>
<p>键入 “空格 {1,}”</p>
]]></content>
      <categories>
        <category>MacOS</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>技巧</tag>
        <tag>Word</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware 虚拟机安装 ElementaryOS。超详细图文教程</title>
    <url>/Linux/vmware-virtual-machine-installation-elementaryos/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ul>
<li><strong>ElementaryOS</strong> 镜像下载</li>
</ul>
<p>前往官网下载<span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50YXJ5LmlvL3poX0NOLw=="> ElementaryOS<i class="fa fa-external-link-alt"></i></span>最新版操作系统。</p>
<p>目前最新版为：<strong>elementary OS 5.1.2 Hera 1.49 GB | 64-bit</strong></p>
<p>输入金额 0，点击下载 iso 镜像</p>
<p><a href="https://i.fuocu.cn/images/2020/02/24/7903c347f87c60f052d52e0cd300bc71.png"><img src="https://i.fuocu.cn/images/2020/02/24/7903c347f87c60f052d52e0cd300bc71.png"></a></p>
<ul>
<li>VMware 虚拟机下载并安装</li>
</ul>
<p>前往 <span class="exturl" data-url="aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==">VMware 官网<i class="fa fa-external-link-alt"></i></span>下载最新版安装包。</p>
<p>安装 ，尽量不要装 C 盘，原因你懂的。</p>
<p>输入序列号激活 <code>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</code>、<code>VF750-4MX5Q-488DQ-9WZE9-ZY2D6</code></p>
<h2 id="二、开始安装"><a href="#二、开始安装" class="headerlink" title="二、开始安装"></a>二、开始安装</h2><h3 id="1、创建-elementary-OS-虚拟机"><a href="#1、创建-elementary-OS-虚拟机" class="headerlink" title="1、创建 elementary OS 虚拟机"></a>1、创建 elementary OS 虚拟机</h3><ul>
<li>启动 VMware</li>
<li> 创建新的虚拟机，默认即可，点击下一步</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/787117d3b49210a87ea55cb89a29f3c4.png"><img src="https://i.fuocu.cn/images/2020/02/24/787117d3b49210a87ea55cb89a29f3c4.png"></a></p>
<ul>
<li>选择<strong>安装程序光盘映像文件</strong>，选中刚才下载的 Elementary OS iso 镜像文件，点击下一步</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/13439f925ae705e628295db87c1e47aa.png"><img src="https://i.fuocu.cn/images/2020/02/24/13439f925ae705e628295db87c1e47aa.png"></a></p>
<ul>
<li>操作系统版本选择 <strong>Linux</strong>、<strong>其他 Linux 5.x 或更高版本内核 64 位</strong>，点击下一步</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/86d54863f942c820b6984ee62372e962.png"><img src="https://i.fuocu.cn/images/2020/02/24/86d54863f942c820b6984ee62372e962.png"></a></p>
<ul>
<li>修改默认的虚拟机名称和存储位置，点击下一步 。这里也不推荐安装在 C 盘。</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/4002e1c5d2a18c7822ab99584c0927f8.png"><img src="https://i.fuocu.cn/images/2020/02/24/4002e1c5d2a18c7822ab99584c0927f8.png"></a></p>
<ul>
<li>内存看情况给，但是建议不低于 20G，这里我选择 30G。点击下一步</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/50428e665dd6e02ea4385602eec3fd3e.png"><img src="https://i.fuocu.cn/images/2020/02/24/50428e665dd6e02ea4385602eec3fd3e.png"></a></p>
<ul>
<li>这里选择<strong>自定义硬件</strong></li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/02a9409888270e7e2675a6fe40b0a2ed.png"><img src="https://i.fuocu.cn/images/2020/02/24/02a9409888270e7e2675a6fe40b0a2ed.png"></a></p>
<ul>
<li>内存不低于 1G， 处理器配置 2 核（当前操作系统内核数的一半），网络选择桥接网络，点击关闭</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/826928b363b270ab80280aa5b1369642.png"><img src="https://i.fuocu.cn/images/2020/02/24/826928b363b270ab80280aa5b1369642.png"></a></p>
<ul>
<li>然后点击完成，然后点击开启虚拟机</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/24/78abc98d4faf476defef37018e3f7ac4.png"><img src="https://i.fuocu.cn/images/2020/02/24/78abc98d4faf476defef37018e3f7ac4.png"></a></p>
<h3 id="2、安装系统"><a href="#2、安装系统" class="headerlink" title="2、安装系统"></a>2、安装系统</h3><ul>
<li>语言根据自己需求选择，这里选择中文简体，点击<strong>安装 elementary</strong></li>
</ul>
<p><img src="https://i.fuocu.cn/images/2020/02/25/ab4fb944af91d46d38f5f585348d29de.png"></p>
<ul>
<li> 选择键盘，默认即可，点击继续</li>
<li>更新和其他软件，默认，点击继续</li>
<li>安装类型，根据需求选择，这里我默认，点击继续</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/25/874696efb4a49af7de13fd89bdf13078.png"><img src="https://i.fuocu.cn/images/2020/02/25/874696efb4a49af7de13fd89bdf13078.png"></a></p>
<ul>
<li>选择时区，这里我选择 <strong>Shanghai</strong></li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/25/4bdc316627fd7e99f31827a1d1ea032d.png"><img src="https://i.fuocu.cn/images/2020/02/25/4bdc316627fd7e99f31827a1d1ea032d.png"></a></p>
<ul>
<li> 设置个人用户名、密码</li>
<li>这个过程会比较漫长，你可以去喝杯咖啡</li>
<li>提示 重启电脑，先把虚拟机关闭，然后右击虚拟机，点击设置。</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/25/68522c47762d7684f5c6ade0dd22716c.png"><img src="https://i.fuocu.cn/images/2020/02/25/68522c47762d7684f5c6ade0dd22716c.png"></a></p>
<ul>
<li>点击 <strong>CD/DVD</strong>，将启动时连接<strong>去掉勾选</strong>，点击确定，再次启动虚拟机</li>
</ul>
<p><a href="https://i.fuocu.cn/images/2020/02/25/bf1c2e3fbc443269ff232be7d866d461.png"><img src="https://i.fuocu.cn/images/2020/02/25/bf1c2e3fbc443269ff232be7d866d461.png"></a></p>
<h3 id="3、在虚拟机中安装-VMware-Tools"><a href="#3、在虚拟机中安装-VMware-Tools" class="headerlink" title="3、在虚拟机中安装 VMware Tools"></a>3、在虚拟机中安装 <strong>VMware Tools</strong></h3><ol>
<li><strong>物理机：</strong><ul>
<li>选择 <strong>虚拟机 &gt; 安装 VMware Tools</strong></li>
</ul>
</li>
<li><strong> 虚拟机：</strong><ul>
<li>在虚拟机中会挂载 <strong>VMware Tools</strong> CD</li>
<li> 进入挂载的 <strong>VMware Tools</strong>，拷贝 <strong>VMwareTools</strong> 文件到 <strong>Documents</strong> 目录下（在 CDROM 中无法写入）</li>
<li>右击 <strong>VMware Tools</strong> 选择<strong>提取到此处</strong></li>
<li>打开终端，输入</li>
</ul>
</li>
</ol>
<p>cd 文档 /vmware-tools-distrib<br>sudo ./vmware-install.pl -d</p>
<p>要在主机和虚拟机之间拖拽文件和复制粘贴文本，需要执行</p>
<p>/usr/bin/vmware-user</p>
<p>安装完毕，界面欣赏</p>
<p><a href="https://i.fuocu.cn/images/2020/02/25/e8a9486d35b0bc31ba50a82f0f53de22.png"><img src="https://i.fuocu.cn/images/2020/02/25/e8a9486d35b0bc31ba50a82f0f53de22.png"></a></p>
<h3 id="4、添加中文软件源"><a href="#4、添加中文软件源" class="headerlink" title="4、添加中文软件源"></a>4、添加中文软件源</h3><ul>
<li>终端执行命令导入软件仓库密匙串</li>
</ul>
<p>sudo wget -O - <span class="exturl" data-url="aHR0cDovL3BhY2thZ2UuZWxlbWVudGFyeW9zLmNuL2Jpb25pYy9rZXkvcGFja2FnZS5ncGcua2V5">http://package.elementaryos.cn/bionic/key/package.gpg.key<i class="fa fa-external-link-alt"></i></span> | sudo apt-key add -</p>
<ul>
<li>使用命令 <code>sudo io.elementary.code/etc/apt/sources.1ist</code> 打开文件并在最后新起一行粘贴下面软件源地址信息然后保存：</li>
</ul>
<p>5.0 添加 <code>deb http://package.elementaryos.cn/bionic/bionic main</code></p>
<ul>
<li><p>终端执行 <code>sudo apt update</code> 更新软件包缓存</p>
</li>
<li><p>终端执行 <code>sudo apt upgrade</code> 进行系统更新</p>
</li>
</ul>
<p>具体操作请前往：<span class="exturl" data-url="aHR0cHM6Ly9lbGVtZW50YXJ5b3MuY24vc3RvcmFnZS5odG1s">https://elementaryos.cn/storage.html<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>本次教程到此结束，参考文章：<span class="exturl" data-url="aHR0cHM6Ly9qYW5jYXQuZ2l0aHViLmlvL3Bvc3QvMjAxOC93aW4xMC12bXdhcmUtaW5zdGFsbC1lbGVtZW50YXJ5LW9zLw==">https://jancat.github.io/post/2018/win10-vmware-install-elementary-os/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>终端</tag>
        <tag>软件源</tag>
      </tags>
  </entry>
  <entry>
    <title>解决宝塔面板环境的 wordpress 网站页面 404 错误</title>
    <url>/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/wordpress-404/</url>
    <content><![CDATA[<div class="note default"></div>

<a id="more"></a>

<hr>
<p>新手妹子一枚，目前学习宝塔面板搭建 wordpress 网站，有一天来找魏艾斯博客，说最近搭建宝塔面板后，也建立了 wordpress 博客，但是每次都只能打开首页，其他页面都显示 404，得不到要领。</p>
<p>老魏一直在用 lnmp，对于宝塔面板也很少使用，开始以为是妹子学艺不精，在搭建环境过程中有什么失误导致的，就让妹子自己重新搭建了几次，结果还是一样的，除了首页之外其他页面显示 404 错误。期间尝试了 wordpress 很常用的解决 404 错误页面的方法 - 在固定链接中保存几次，一般就可以让 404 错误消失，但是在这里很明显不行。</p>
<p>后来老魏去查看了下宝塔面板的安装帮助，才发现原来是<span class="exturl" data-url="aHR0cHM6Ly93d3cudnBzc3MubmV0L3RhZy8lZTUlYWUlOWQlZTUlYTElOTQlZTklOWQlYTIlZTYlOWQlYmZ3b3JkcHJlc3MlZTQlYmMlYWElZTklOWQlOTklZTYlODAlODE=">宝塔面板中 wordpress 对应的伪静态<i class="fa fa-external-link-alt"></i></span>没打开导致的。这个新手妹子光顾着搭建 wordpress 网站了，之后都没有添加对应的伪静态，自然网站机会出现 404 错误。</p>
<p>当你使用 wordpress 搭建网站之后，需要在宝塔面板后台的网站 - 域名 - 设置中，找到伪静态栏目，按照下面截图所示，找到你使用程序对应的伪静态，最后保存一下即可，以后就不会再出现 404 错误了。</p>
<p><a href="https://i.loli.net/2020/01/29/E64wKzHprJ1Dfgm.png"><img src="https://i.loli.net/2020/01/29/E64wKzHprJ1Dfgm.png"></a></p>
<p>这个问题虽小，对于初次使用宝塔面板的新手来说却是很难找出问题所在的，为了给新手节省时间，把这个问题解决办法写出来，如果你也遇到了宝塔面板环境的 wordpress 网站，某些页面 404 错误，希望能帮到你。</p>
]]></content>
      <categories>
        <category>宝塔面板</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>心得</title>
    <url>/uncategorized/%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<div class="note default"><p>心得</p>
</div>


<a id="more"></a>

<hr>
]]></content>
      <tags>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript 制作课程表</title>
    <url>/JavaScript/%E8%AF%BE%E7%A8%8B%E8%A1%A8/</url>
    <content><![CDATA[<div class="note default"><p>JavaScript 制作课程表</p>
</div>

<a id="more"></a>

<hr>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript制作课程表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">            table {</span><br><span class="line"><span class="css">                <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#7FFFD4</span>;</span></span><br><span class="line">                border-radius: 5px;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            td {</span><br><span class="line"><span class="css">                <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#D2B48C</span>;</span></span><br><span class="line">                text-align: center;</span><br><span class="line">                border-radius: 5px;</span><br><span class="line">            }</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = [</span></span><br><span class="line"><span class="javascript">                [<span class="string">""</span>, <span class="string">"第一节"</span>, <span class="string">"第二节"</span>, <span class="string">"第三节"</span>],</span></span><br><span class="line"><span class="javascript">                [<span class="string">"星期一"</span>, <span class="string">"德育"</span>, <span class="string">"JavaScript"</span>, <span class="string">"JavaScript"</span>],</span></span><br><span class="line"><span class="javascript">                [<span class="string">"星期二"</span>, <span class="string">"JavaScript"</span>, <span class="string">"体育"</span>, <span class="string">"HTML5"</span>],</span></span><br><span class="line"><span class="javascript">                [<span class="string">"星期三"</span>, <span class="string">"Photoshop"</span>, <span class="string">"Photoshop"</span>, <span class="string">"大扫除"</span>],</span></span><br><span class="line"><span class="javascript">                [<span class="string">"星期四"</span>, <span class="string">"HTML5"</span>, <span class="string">"HTML5"</span>, <span class="string">"自习"</span>],</span></span><br><span class="line"><span class="javascript">                [<span class="string">"星期五"</span>, <span class="string">"PHP"</span>, <span class="string">"PHP"</span>, <span class="string">"PHP"</span>]</span></span><br><span class="line">            ];</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">"&lt;table&gt;"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) {</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.write(<span class="string">"&lt;tr&gt;"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr[i].length; j++) {</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(<span class="string">"&lt;td&gt;"</span>, arr[i][j], <span class="string">"&lt;/td&gt;"</span>);</span></span><br><span class="line">                }</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.write(<span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line">            }</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里巴巴矢量图批量下载</title>
    <url>/%E6%8A%80%E5%B7%A7/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E7%9F%A2%E9%87%8F%E5%9B%BE%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<div class="note default"><p>阿里巴巴矢量图标库批量下载</p>
</div>

<a id="more"></a>

<hr>
<p>&nbsp; &nbsp; &nbsp; &nbsp;在<span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v">阿里巴巴矢量图标库<i class="fa fa-external-link-alt"></i></span>中找到一个喜欢的图标库，想要全部下载，但是发现需要挨个点击添加购物车中，如下图所示，居然没找一个可以全选的按钮！！总之不知道为啥要这样设计吧。但是确实很不方便。  </p>
<p><img src="https://img-blog.csdnimg.cn/201812131710542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"><br>&nbsp; &nbsp; &nbsp; &nbsp;想要全选的话，操作如下  </p>
<ol>
<li><p>按下 F12 或者 打开浏览器开发者模式</p>
</li>
<li><p>进入 console 的窗口</p>
</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20181213171504956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RheGlhbmdoYW9zaHVhaQ==,size_16,color_FFFFFF,t_70"><br>3. 输入下列代码，然后回车</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">var iconList = document.querySelectorAll('.icon-gouwuche1');</span><br><span class="line">for (var i = 0; i &lt; iconList.length; i++) {</span><br><span class="line">    iconList[i].click();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<ol start="4">
<li>完成，即可进入购物车中查看自己添加的图标</li>
</ol>
]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>高德地图正确用法</title>
    <url>/uncategorized/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E6%AD%A3%E7%A1%AE%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<div class="note default"><p>高德地图的正确用法</p>
</div>

<a id="more"></a>

<hr>
<blockquote>
<p>提到高德地图，咱们每一个人都不会陌生，日常用来导航，也可以用来打车，一次呼叫 8 种车型，非常方便：<br><img src="https://pic1.zhimg.com/80/v2-d819f95f7b8cc269ae972925314eafe4_hd.jpg"><br>但是，如果你把它仅仅当做一个导航工具，那么，你可能真的小看了它。其实我们可以利用它，轻松做出高大上的 PPT 地图，小白也可以的那种：</p>
</blockquote>
]]></content>
  </entry>
</search>
